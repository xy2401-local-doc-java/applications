<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>About Configuring GL Account and GL Segments for E-Business Suite</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="If you are deploying Oracle Financial Analytics, Oracle Procurement and Spend Analytics, or Oracle Supply Chain and Order Management Analytics, then you must configure GL the account hierarchies." />
<meta name="dcterms.created" content="2017-05-25T23:17:14Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Business Intelligence Applications Functional Configuration Reference" />
<meta name="dcterms.identifier" content="E72291-04" />
<meta name="dcterms.isVersionOf" content="BIAFC" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2015, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="GUID-1DAF3896-CBB9-4C11-92EC-3A2BD1C11E1C.htm" title="Previous" type="text/html" />
<link rel="Next" href="GUID-7592DEE2-74CA-465E-AE58-F477F143E37C.htm" title="Next" type="text/html" />
<link rel="alternate" href="BIAFC.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-33220339-A5E4-4B68-A392-88011C43C058"></a> <span id="PAGE" style="display:none;">24/336</span> <!-- End Header -->
<a id="IT_281"></a>
<h1 id="BIAFC-GUID-33220339-A5E4-4B68-A392-88011C43C058" class="sect1">About Configuring GL Account and GL Segments for E-Business Suite</h1>
<div>
<p>If you are deploying Oracle Financial Analytics, Oracle Procurement and Spend Analytics, or Oracle Supply Chain and Order Management Analytics, then you must configure GL the account hierarchies.</p>
<p>Thirty segments are supported in which you can store accounting flexfields. Flexfields support complex data configurations:</p>
<ul style="list-style-type: disc;">
<li>
<p>You can store data in any segment.</p>
</li>
<li>
<p>You can use more or fewer segments per chart of accounts, as required.</p>
</li>
<li>
<p>You can specify multiple segments for the same chart of accounts.</p>
</li>
</ul>
<div class="section">
<p class="subhead1">Example of Data Configuration for a Chart of Accounts</p>
<p>A single company might have a US chart of accounts and an APAC chart of accounts, with this data configuration:</p>
<div class="tblformal" id="GUID-33220339-A5E4-4B68-A392-88011C43C058__GUID-C5D3001E-A599-4673-8797-E29EB0BCA9F4">
<table class="cellalignment137" summary="Example Chart of Accounts">
<thead>
<tr class="cellalignment128">
<th class="cellalignment211" id="d12034e50">Segment Type</th>
<th class="cellalignment212" id="d12034e52">US Chart of Account (4256) value</th>
<th class="cellalignment212" id="d12034e54">APAC Chart of Account (4257) value</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment213" id="d12034e58" headers="d12034e50">
<p>Company</p>
</td>
<td class="cellalignment214" headers="d12034e58 d12034e52">
<p>Stores in segment 3</p>
</td>
<td class="cellalignment214" headers="d12034e58 d12034e54">
<p>Stores in segment 1</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment213" id="d12034e68" headers="d12034e50">
<p>Natural Account</p>
</td>
<td class="cellalignment214" headers="d12034e68 d12034e52">
<p>Stores in segment 4</p>
</td>
<td class="cellalignment214" headers="d12034e68 d12034e54">
<p>Stores in segment 3</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment213" id="d12034e78" headers="d12034e50">
<p>Cost Center</p>
</td>
<td class="cellalignment214" headers="d12034e78 d12034e52">
<p>Stores in segment 5</p>
</td>
<td class="cellalignment214" headers="d12034e78 d12034e54">
<p>Stores in segment 2</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment213" id="d12034e88" headers="d12034e50">
<p>Geography</p>
</td>
<td class="cellalignment214" headers="d12034e88 d12034e52">
<p>Stores in segment 2</p>
</td>
<td class="cellalignment214" headers="d12034e88 d12034e54">
<p>Stores in segment 5</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment213" id="d12034e98" headers="d12034e50">
<p>Line of Business (LOB)</p>
</td>
<td class="cellalignment214" headers="d12034e98 d12034e52">
<p>Stores in segment 1</p>
</td>
<td class="cellalignment214" headers="d12034e98 d12034e54">
<p>Stores in segment 4</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>This example shows that in US Chart of Account, 'Company' is stored in the segment 3 column in the E-Business Suite table GL_CODE_COMBINATIONS. In APAC Chart of Account, 'Company' is stored in the segment 1 column in GL_CODE_COMBINATIONS table. The objective of this configuration file is to ensure that when segment information is extracted into the Oracle Business Analytics Warehouse table W_GL_ACCOUNT_D, segments with the same nature from different chart of accounts are stored in the same column in W_GL_ACCOUNT_D.</p>
<p>For example, we can store 'Company' segments from US COA and APAC COA in the segment 1 column in W_GL_ACCOUNT_D; and Cost Center segments from US COA and APAC COA in the segment 2 column in W_GL_ACCOUNT_D, and so on.</p>
</div>
<!-- class="section" --></div>
<a id="BIACF122"></a><a id="BIACF123"></a><a id="BIACF124"></a><a id="BIACF121"></a>
<div class="props_rev_3"><a id="GUID-4D1CEA0D-CFA0-4CE0-AE10-D6DCDD27E6C1"></a>
<h2 id="BIAFC-GUID-4D1CEA0D-CFA0-4CE0-AE10-D6DCDD27E6C1" class="sect2">Setting Up the GL Segment Configuration File</h2>
<div>
<p>Before you run the ETL process for GL accounts, you must specify the segments that you want to analyze. Natural Account, Balancing Segment, and Cost Center segments are mapped by default, but you must manually map additional segments.</p>
<div class="section">
<p>To specify the segments, you use the ETL configuration file named <code>file_glacct_segment_config_ora.csv</code>.</p>
<p>The configuration file or files for this task are provided on installation of <span>Oracle BI Applications</span> at one of the following locations:</p>
<ul style="list-style-type: disc;">
<li>
<p>Source-independent files: <code><span class="variable">&lt;Oracle Home for BI&gt;</span>\biapps\etl\data_files\src_files\</code>.</p>
</li>
<li>
<p>Source-specific files: <code><span class="variable">&lt;Oracle Home for BI&gt;</span>\biapps\etl\data_files\src_files\<span class="variable">&lt;source adaptor&gt;</span></code>.</p>
</li>
</ul>
<p>Your system administrator will have copied these files to another location and configured ODI connections to read from this location. Work with your system administrator to obtain the files. When configuration is complete, your system administrator will need to copy the configured files to the location from which ODI reads these files.</p>
<p>In <code>file_glacct_segment_config_ora.csv</code>, you must specify the segments of the same type in the same column. For example, you might store all Product segments from all charts of accounts in one column, and all Region segments from all charts of accounts in a separate column.</p>
<p>File <code>file_glacct_segment_config_ora.csv</code> contains a set of 3 columns for each accounting segment to be configured in the warehouse. In the 1st column, give the actual segment column name in Oracle E-Business Suite where this particular entity is stored. This column takes values such as SEGMENT1, SEGMENT2....SEGMENT30 (this is case sensitive). In the second column give the corresponding VALUESETID used for this COA and segment in Oracle E-Business Suite. You will need to configure the third column ONLY if you have configured a dependent segment in the first column. If the segment in the first column is a dependent segment, then give the segment name on which it is dependent on, in Oracle E-Business Suite. If you don't have any dependent segments, then leave this column blank in the CSV file.</p>
<p>For example, you might want to do the following:</p>
<ul style="list-style-type: disc;">
<li>
<p>Analyze GL account hierarchies using only Product, Region and Location.</p>
</li>
<li>
<p>Store all Product segments from all COAs in ACCOUNT_SEG1_CODE column in W_GL_ACCOUNT_D.</p>
</li>
<li>
<p>Store all Region segments from all COAs in ACCOUNT_SEG2_CODE column in W_GL_ACCOUNT_D.</p>
</li>
<li>
<p>Store all Location segments from all COAs in ACCOUNT_SEG3_CODE column in W_GL_ACCOUNT_D.</p>
</li>
</ul>
<p>You have defined three different COAs (101, 50194 and 50195) in EBS, as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>For COA 101, Product is SEGMENT1, Region is SEGMENT2 and Location is SEGMENT3.</p>
</li>
<li>
<p>For COA 50194, Product is SEGMENT2, Region is SEGMENT3 and Location is SEGMENT1.</p>
</li>
<li>
<p>For COA 50195, Product is SEGMENT3, Region is SEGMENT1 and Location is SEGMENT2.</p>
</li>
<li>
<p>For COA 50195, both the Region and Location segments are dependent on Product segment.</p>
</li>
</ul>
<p>The figure shows hows how the configuration values would be specified in the CSV file.</p>
<div class="figure" id="GUID-4D1CEA0D-CFA0-4CE0-AE10-D6DCDD27E6C1__BABEHBAI"><img width="794" height="62" src="img/GUID-C08D19FA-71CD-4220-BE43-86C05AC34EAA-default.gif" alt="Description of GUID-C08D19FA-71CD-4220-BE43-86C05AC34EAA-default.gif follows" title="Description of GUID-C08D19FA-71CD-4220-BE43-86C05AC34EAA-default.gif follows" /><br />
<a href="img_text/GUID-C08D19FA-71CD-4220-BE43-86C05AC34EAA-default.htm">Description of the illustration GUID-C08D19FA-71CD-4220-BE43-86C05AC34EAA-default.gif</a></div>
<!-- class="figure" -->
<p>If you are upgrading from <span>Oracle BI Applications</span> 7.9.6.x, Cost Center, Balancing Segment and Natural account segments are mapped by default. You do not need to map the Cost Center, Balancing Segment and Natural account segments in the file_glacct_segment_config_ora.csv file. The above example is only included to explain the mapping mechanism for additional segments.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">Additional Information</p>
<p>The example SQL Statement below shows against an Oracle E-Business Suite database, and outputs the entire GL chart of accounts setup. This output contains the necessary information required to setup the <code>file_glacct_segment_config_ora.csv</code> file.</p>
<pre dir="ltr">
SELECT 
ST.ID_FLEX_STRUCTURE_CODE  "Chart of Account Code"
,SG.ID_FLEX_NUM            "Chart of Account Num"
,SG.SEGMENT_NAME               "Segment Name"
,SG.APPLICATION_COLUMN_NAME    "Column Name"
,SG.FLEX_VALUE_SET_ID          "Value Set Id"
,SG1.APPLICATION_COLUMN_NAME   "Parent Column Name"
FROM 
FND_ID_FLEX_STRUCTURES ST
INNER JOIN FND_ID_FLEX_SEGMENTS SG ON ST.APPLICATION_ID = SG.APPLICATION_ID AND ST.ID_FLEX_CODE = SG.ID_FLEX_CODE AND ST.ID_FLEX_NUM = SG.ID_FLEX_NUM
INNER JOIN FND_FLEX_VALUE_SETS VS ON SG.FLEX_VALUE_SET_ID = VS.FLEX_VALUE_SET_ID
LEFT OUTER JOIN FND_ID_FLEX_SEGMENTS SG1 ON VS.PARENT_FLEX_VALUE_SET_ID = SG1.FLEX_VALUE_SET_ID AND SG.ID_FLEX_NUM = SG1.ID_FLEX_NUM AND SG.APPLICATION_ID = SG1.APPLICATION_ID AND SG.ID_FLEX_CODE = SG1.ID_FLEX_CODE
WHERE 
ST.APPLICATION_ID = 101
AND ST.ID_FLEX_CODE = 'GL#'
AND ST.ENABLED_FLAG = 'Y'
ORDER BY 1,2,3;
</pre>
<p>For example, you have 2 chart of accounts and the setup of the 2 chart of accounts as displayed by the SQL statement above as follows:</p>
<pre dir="ltr">
Chart of Account Code        Chart of Account Num    Segment Name    Column Name     Value Set Id    Parent Column Name
US_ACCOUNTING_FLEX      101     Region  SEGMENT1        1026447          
US_ACCOUNTING_FLEX      101     Product SEGMENT2        1026448         SEGMENT1
US_ACCOUNTING_FLEX      101     Sub-Account     SEGMENT3        1026449         SEGMENT1
EU_ ACCOUNTING_FLEX     201     Region  SEGMENT1        1031001 
EU_ ACCOUNTING_FLEX     201     Department      SEGMENT2        1031002 
EU_ ACCOUNTING_FLEX     201     Product SEGMENT3        1031003 
EU_ ACCOUNTING_FLEX     201     Sub Account     SEGMENT4        1031004 
</pre>
<p>You want all these segments in BI and you want to map them as follows in BI:</p>
<p>- Map Region to Seg1</p>
<p>- Map Product to Seg2</p>
<p>- Map Sub-Account to Seg3</p>
<p>- Map Department to Seg4</p>
<div class="infobox-note" id="GUID-4D1CEA0D-CFA0-4CE0-AE10-D6DCDD27E6C1__GUID-16BCFF34-67DB-4224-989E-D96B6B1924CA">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>Department is only applicable to COA 201.</p>
</li>
<li>
<p>COA 101 has Product and Sub-Account segments as dependent segments.</p>
</li>
</ul>
</div>
<p>The figure shows how the configuration values above would be specified in the CSV file.</p>
<div class="figure" id="GUID-4D1CEA0D-CFA0-4CE0-AE10-D6DCDD27E6C1__BABBIBJA"><img width="676" height="129" src="img/GUID-D74CD209-9262-4182-90AD-E3E98765BF0A-default.gif" alt="Description of GUID-D74CD209-9262-4182-90AD-E3E98765BF0A-default.gif follows" title="Description of GUID-D74CD209-9262-4182-90AD-E3E98765BF0A-default.gif follows" /><br />
<a href="img_text/GUID-D74CD209-9262-4182-90AD-E3E98765BF0A-default.htm">Description of the illustration GUID-D74CD209-9262-4182-90AD-E3E98765BF0A-default.gif</a></div>
<!-- class="figure" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2">GL Segment Configuration for Budgetary Control</p>
<p>For Budgetary Control, the first two segments are reserved for Project and Program segments respectively. Therefore, to use one or both of these, configure <code>file_glacct_segment_config_ora.csv</code> in this particular order:</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Edit the <code>file_glacct_segment_config_ora.csv</code> file.</span></li>
<li class="stepexpand"><span>Specify your Project segment column name in the 'SEG_PROJECT' column.</span></li>
<li class="stepexpand"><span>Specify your Program segment column name in the 'SEG_PROGRAM' column.</span></li>
<li class="stepexpand"><span>If in case your Project and Program segments are dependent on any other segments, then specify those segment column names in 'PROJECT_DEP' and 'PROGRAM_DEP' columns respectively.</span>
<div>
<p>If you do not have reserved segments in your source system, leave that particular segment empty.</p>
</div>
</li>
<li class="stepexpand"><span>Save the file.</span></li>
</ol>
</div>
</div>
<div class="props_rev_3"><a id="GUID-781D6A6F-580A-4F8B-B80E-F1082BFB436D"></a>
<h2 id="BIAFC-GUID-781D6A6F-580A-4F8B-B80E-F1082BFB436D" class="sect2">Configuring GL Segments and Hierarchies Using Value Set Definitions</h2>
<div>
<p>You can configure GL segments and hierarchies using value set definitions.</p>
<div class="section">
<p>The configuration file or files for this task are provided on installation of <span>Oracle BI Applications</span> at one of the following locations:</p>
<ul style="list-style-type: disc;">
<li>
<p>Source-independent files:<code><span class="variable">&lt;Oracle Home for BI</span>&gt;\biapps\etl\data_files\src_files\</code>.</p>
</li>
<li>
<p>Source-specific files: <code><span class="variable">&lt;Oracle Home for BI&gt;</span>\biapps\etl\data_files\src_files\<span class="variable">&lt;source adaptor</span>&gt;</code>.</p>
</li>
</ul>
<p>Your system administrator will have copied these files to another location and configured ODI connections to read from this location. Work with your system administrator to obtain the files. When configuration is complete, your system administrator will need to copy the configured files to the location from which ODI reads these files.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Configure <code>file_glacct_segment_config_ora.csv</code>, as follows:</span>
<ol>
<li class="substepexpand"><span>Edit the file <code>file_glacct_segment_config_ora.csv</code>.</span>
<div>
<p>For example, you might edit the file located in <code>\src_files\EBS11510</code>.</p>
</div>
</li>
<li class="substepexpand"><span>Follow the steps in <a href="GUID-33220339-A5E4-4B68-A392-88011C43C058.htm#GUID-4D1CEA0D-CFA0-4CE0-AE10-D6DCDD27E6C1" title="Before you run the ETL process for GL accounts, you must specify the segments that you want to analyze. Natural Account, Balancing Segment, and Cost Center segments are mapped by default, but you must manually map additional segments.">Setting Up the GL Segment Configuration File</a> to configure the file.</span></li>
</ol>
</li>
<li class="stepexpand"><span>Edit the BI metadata repository (that is, the RPD file) for GL Segments and Hierarchies Using Value Set Definitions.</span>
<div>
<p>The metadata contains multiple logical tables that represent each GL Segment, such as Dim_W_GL_SEGMENT_D_ProgramSegment, Dim_W_GL_SEGMENT_D_ProjectSegment, Dim_W_GL_SEGMENT_D_Segment1 and so on. Because all these logical tables are mapped to the same physical table, W_GL_SEGMENT_D, a filter should be specified in the logical table source of these logical tables in order to restrain the output of the logical table to get values pertaining to that particular segment. You must set the filter on the physical column SEGMENT_LOV_ID to the Value Set IDs that are applicable for that particular segment. The list of the Value Set IDs would be the same as the Value Set IDs you configured in the CSV file mentioned above.</p>
<p>Specify a filter in the Business Model and Mapping layer of the <span>Oracle BI Repository</span>, as follows.</p>
</div>
<ol>
<li class="substepexpand"><span>In <span>Oracle BI Administration Tool</span>, edit the BI metadata repository (for example, <code>OracleBIAnalyticsApps.rpd</code>).</span>
<div>
<p>The <code>OracleBIAnalyticsApps.rpd</code> file is located in <code><span class="variable">ORACLE_INSTANCE</span>\bifoundation\OracleBIServerComponent\coreapplication_obis<span class="variable">&lt;n&gt;</span>\repository</code>.</p>
</div>
</li>
<li class="substepexpand"><span>Expand each logical table, for example, Dim - GL Segment1, and open the logical table source under it. Display the Content tab. In the 'Use this WHERE clause&hellip;' box, apply a filter on the corresponding physical table alias of W_GL_SEGMENT_D.</span>
<div>
<p>For example: "Oracle Data Warehouse"."Catalog"."dbo"."Dim_W_GL_SEGMENT_D_Segment1"."SEGMENT_LOV_ID" IN (comma separated values IDs).</p>
</div>
</li>
<li class="substepexpand"><span>Enter all Value Set IDs, separated by commas that correspond to this segment.</span></li>
</ol>
</li>
<li class="stepexpand"><span>Oracle Financial Analytics supports up to 30 segments in the GL Account dimension, and by default delivers ten GL Segment dimensions in the BI metadata repository (that is, the RPD file). If you need more than ten GL Segments, perform the following steps to add new segments in the Physical Layer:</span>
<ol>
<li class="substepexpand"><span>Create two new physical alias of W_GL_SEGMENT_D as "Dim_W_GL_SEGMENT_D_SegmentXX" and Dim_W_GL_SEGMENT_D_SegmentXX_GLAccount.</span>
<div>To do this, right-click the physical table W_GL_SEGMENT_D and select New Object and then Alias.Name the new alias as "Dim_W_GL_SEGMENT_D_SegmentXX" and "Dim_W_GL_SEGMENT_D_SegmentXX_GLAccount".</div>
</li>
<li class="substepexpand"><span>Create 4 new alias of W_GL_SEGMENT_DH as:</span>
<div>
<p>- 'Dim_W_GL_SEGMENT_DH_SegmentXX'</p>
<p>- 'Dim_W_GL_SEGMENT_DH_Security_SegmentXX'</p>
<p>- 'Dim_W_GL_SEGMENT_DH_SegmentXX_GLAccount'</p>
<p>- 'Dim_W_GL_SEGMENT_DH_Security_SegmentXX_GLAccount'</p>
</div>
</li>
<li class="substepexpand"><span>Create a Foreign Key from 'Dim_W_GL_SEGMENT_D_SegmentXX' to 'Dim_W_GL_SEGMENT_DH_SegmentXX' and 'Dim_W_GL_SEGMENT_DH_Security_SegmentXX'.</span>
<div>
<p>The foreign key is similar to the one from 'Dim_W_GL_SEGMENT_D_Segment1' to 'Dim_W_GL_SEGMENT_DH_Segment1' and 'Dim_W_GL_SEGMENT_DH_Security_Segment1'.</p>
<p>The direction of the foreign key should be from W_GL_SEGMENT_DH to W_GL_SEGMENT_D; for example, on a '0/1': N cardinality join, W_GL_SEGMENT_DH will be on the '0/1' side and W_GL_SEGMENT_D will be on the 'N' side. See <a class="olink BIEMG208" target="_blank" href="http://www.oracle.com/pls/topic/lookup?ctx=E72161-01&amp;id=BIEMG208">Working with Physical Foreign Keys and Joins</a> in <span><cite>Metadata Repository Builder's Guide for Oracle Business Intelligence Enterprise Edition</cite></span> .</p>
</div>
</li>
<li class="substepexpand"><span>Create a similar physical foreign key from 'Dim_W_GL_SEGMENT_D_SegmentXX_GLAccount' to 'Dim_W_GL_SEGMENT_DH_SegmentXX_GLAccount' and 'Dim_W_GL_SEGMENT_DH_Security_SegmentXX_GLAccount'.</span></li>
<li class="substepexpand"><span>Similarly, create physical foreign key join between Dim_W_GL_SEGMENT_D_SegmentXX and Dim_W_GL_ACCOUNT_D, with W_GL_SEGMENT_D on the '1' side and W_GL_ACCOUNT_D on the 'N' side.</span></li>
<li class="substepexpand"><span>Save your changes.</span></li>
</ol>
</li>
<li class="stepexpand"><span>In the Business Model and Mapping Layer:</span>
<ol>
<li class="substepexpand"><span>Create a new logical table 'Dim - GL SegmentXX' similar to 'Dim &ndash; GL Segment1'.</span>
<div>
<p>This logical table should have a logical table source that is mapped to the physical tables created above (for example, it will have both Dim_W_GL_SEGMENT_DH_SegmentXX and Dim_W_GL_SEGMENT_DH_SegmentXX_GLAccount).</p>
<p>This logical table should also have all attributes similar to 'Dim &ndash; GL Segment1' properly mapped to the respective physical tables, Dim_W_GL_SEGMENT_DH_SegmentXX and Dim_W_GL_SEGMENT_DH_SegmentXX_GLAccount.</p>
</div>
</li>
<li class="substepexpand"><span>In the Business Model Diagram, create a logical join from 'Dim &ndash; GL SegmentXX' to all the relevant logical fact tables similar to 'Dim &ndash; GL Segment1', with the GL Segment Dimension Logical table on the '0/1' side and the logical fact table on the 'N' side.</span>
<div>
<p>To see all the relevant logical fact tables, first include Dim &ndash; GL Segment1 on the Business Model Diagram, and then right-click that table and select Add Direct Joins.</p>
</div>
</li>
<li class="substepexpand"><span>Add the content filter in the logical table source of 'Dim &ndash; GL SegmentXX' as described in the previous step.</span></li>
<li class="substepexpand"><span>Create a dimension by right-clicking 'Dim &ndash; GL SegmentXX', and select Create Dimension. Rename this to 'GL SegmentXX'. Make sure the drill-down structure is similar to 'GL Segment1'.</span>
<div>
<p>If you are not sure how to do this, follow these steps: By default, the dimension will have two levels: the Grand Total Level and the Detail Level. Rename these levels to 'All' and 'Detail &ndash; GL Segment' respectively.</p>
<p>Right-click the 'All' level and select 'New Object' and then 'Child Level'. Name this level as Tree Code And Version. Create a level under Tree Code And Version and name it as Level31. Similarly create a level under Level31 as Level30. Repeat this process until you have Level1 under Level2.</p>
</div>
</li>
<li class="substepexpand"><span>Drag the 'Detail &ndash; GL Segment' level under 'Level1' so that it is the penultimate level of the hierarchy. Create another child level under 'Detail &ndash; GL Segment' and name it as 'Detail &ndash; GL Account'.</span></li>
<li class="substepexpand"><span>From the new logical table Dim - GL SegmentXX, drag the Segment Code, Segment Name, Segment Description, Segment Code Id and Segment Value Set Code attributes to the 'Detail &ndash; GL Segment' level of the hierarchy. Similarly pull in the columns mentioned below for the remaining levels.</span>
<div>
<p>Detail &ndash; GL Account &ndash; Segment Code &ndash; GL Account</p>
<p>Levelxx &ndash; Levelxx Code, Levelxx Name, Levelxx Description and Levelxx Code Id</p>
<p>Tree Code And Version &ndash; Tree Filter, Tree Version ID, Tree Version Name and Tree Code</p>
</div>
</li>
<li class="substepexpand"><span>Navigate to the properties of each Level and from the Keys tab, create the appropriate keys for each level as mentioned below. Select the primary key and the <span class="bold">Use for Display</span> option for each level as mentioned in the matrix below.</span>
<div>
<div class="tblformal" id="GUID-781D6A6F-580A-4F8B-B80E-F1082BFB436D__GUID-7BA3DF66-AE89-41E6-B098-1D1F809C0788">
<table class="cellalignment156" summary="(Cont.) Configuration values for GL Segments and Hierarchies Using Value Sets">
<thead>
<tr class="cellalignment128">
<th class="cellalignment161" id="d12034e525">Level</th>
<th class="cellalignment161" id="d12034e527">Key Name</th>
<th class="cellalignment161" id="d12034e529">Columns</th>
<th class="cellalignment161" id="d12034e531">Primary Key of that Level</th>
<th class="cellalignment161" id="d12034e533">Use for Display?</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment162" id="d12034e537" headers="d12034e525">
<p>Tree Code And Version</p>
</td>
<td class="cellalignment162" headers="d12034e537 d12034e527">
<p>Tree Filter</p>
</td>
<td class="cellalignment162" headers="d12034e537 d12034e529">
<p>Tree Filter</p>
</td>
<td class="cellalignment162" headers="d12034e537 d12034e531">
<p>Y</p>
</td>
<td class="cellalignment162" headers="d12034e537 d12034e533">
<p>Y</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d12034e553" headers="d12034e525">
<p>Levelxx</p>
</td>
<td class="cellalignment162" headers="d12034e553 d12034e527">
<p>Levelxx Code</p>
</td>
<td class="cellalignment162" headers="d12034e553 d12034e529">
<p>Levelxx Code</p>
</td>
<td class="cellalignment162" headers="d12034e553 d12034e531">
<p>Y</p>
</td>
<td class="cellalignment162" headers="d12034e553 d12034e533">
<p>Y</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d12034e569" headers="d12034e525">
<p>Levelxx</p>
</td>
<td class="cellalignment162" headers="d12034e569 d12034e527">
<p>Levelxx ID</p>
</td>
<td class="cellalignment162" headers="d12034e569 d12034e529">
<p>Levelxx Code Id</p>
</td>
<td class="cellalignment162" headers="d12034e569 d12034e531">
<p>&lt;empty&gt;</p>
</td>
<td class="cellalignment162" headers="d12034e569 d12034e533">
<p>&lt;empty&gt;</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d12034e585" headers="d12034e525">
<p>Detail - GL Segment</p>
</td>
<td class="cellalignment162" headers="d12034e585 d12034e527">
<p>Segment ID</p>
</td>
<td class="cellalignment162" headers="d12034e585 d12034e529">
<p>Segment Code Id</p>
</td>
<td class="cellalignment162" headers="d12034e585 d12034e531">
<p>Y</p>
</td>
<td class="cellalignment162" headers="d12034e585 d12034e533">
<p>&lt;empty&gt;</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d12034e601" headers="d12034e525">
<p>Detail - GL Segment</p>
</td>
<td class="cellalignment162" headers="d12034e601 d12034e527">
<p>Segment Code</p>
</td>
<td class="cellalignment162" headers="d12034e601 d12034e529">
<p>Segment Value Set Code and Segment Code</p>
</td>
<td class="cellalignment162" headers="d12034e601 d12034e531">
<p>&lt;empty&gt;</p>
</td>
<td class="cellalignment162" headers="d12034e601 d12034e533">
<p>Y</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d12034e617" headers="d12034e525">
<p>Detail - GL Account</p>
</td>
<td class="cellalignment162" headers="d12034e617 d12034e527">
<p>Segment Code - GL Account</p>
</td>
<td class="cellalignment162" headers="d12034e617 d12034e529">
<p>Segment Code - GL Account</p>
</td>
<td class="cellalignment162" headers="d12034e617 d12034e531">
<p>Y</p>
</td>
<td class="cellalignment162" headers="d12034e617 d12034e533">
<p>Y</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</li>
<li class="substepexpand"><span>Once you have created these new levels, you will have to set the aggregation content for all the Logical Table Sources of the newly created logical table created Dim - GL SegmentXX. Set the Aggregation Content in the Content tab for each LTS as mentioned below:</span>
<div>
<p>Dim_W_GL_SEGMENT_DH_SegmentXX &ndash; Set the content level to 'Detail &ndash; GL Segment'.</p>
<p>Dim _W_GL_SEGMENT_DH_SegmentXX_GLAccount &ndash; Set it to 'Detail &ndash; GL Account'.</p>
</div>
</li>
<li class="substepexpand"><span>Set the aggregation content to all relevant fact logical table sources. Open all Logical Table Sources of all the logical fact tables that are relevant to the new logical table one at a time. Display the Content tab. If the LTS is applicable for that newly created segment, then set the aggregation content to 'Detail &ndash; GL Account'. If not, skip that logical table source and go to the next one.</span></li>
<li class="substepexpand"><span>Drag your new 'Dim - GL Segment XX' dimensions into the appropriate subject areas in the Presentation layer. Typically, you can expose these GL Segment dimensions in all subject areas where the GL Account dimension is exposed. You can also find all appropriate subject areas by right-clicking Dim &ndash; GL Segment1 and select Query Related Objects, then selecting Presentation, and then selecting Subject Area.</span></li>
<li class="substepexpand"><span>Save your changes and check global consistency.</span></li>
</ol>
</li>
<li class="stepexpand"><span>Each GL Segment denotes a certain meaningful ValueSet in your OLTP. To clearly identify each segment in the report, you can rename the presentation table 'GL SegmentX', logical dimension 'GL SegmentX', and logical table 'Dim - GL SegmentX' according to its own meaning.</span>
<div>
<p>For example, if you populate Product segment into Segment1, you can rename logical table 'Dim - GL Segment1' as 'Dim &ndash; GL Segment Product' or any other appropriate name and then rename the tables in the Presentation layer accordingly.</p>
</div>
</li>
</ol>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment127">
<tr>
<td class="cellalignment134">
<table class="cellalignment132">
<tr>
<td class="cellalignment131"><a href="GUID-1DAF3896-CBB9-4C11-92EC-3A2BD1C11E1C.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment131"><a href="GUID-7592DEE2-74CA-465E-AE58-F477F143E37C.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2015, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment136">
<table class="cellalignment130">
<tr>
<td class="cellalignment131"><a href="../index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment131"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment131"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
