<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>Configuring GL Segment Security</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="GL Segment Security can be applied on the qualified GL Segment Dimensions: 'Dim &ndash; Cost Center', 'Dim &ndash; Natural Account' &amp; 'Dim &ndash; Balancing Segment', as well as the 10 generic dimensions 'Dim &ndash; GL Segment1 to 'Dim &ndash; GL Segment 10' which are configurable to be any of the accounting segments." />
<meta name="dcterms.created" content="2017-05-25T23:17:14Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Business Intelligence Applications Functional Configuration Reference" />
<meta name="dcterms.identifier" content="E72291-04" />
<meta name="dcterms.isVersionOf" content="BIAFC" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2015, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="GUID-15127BB3-BEBD-4F1C-9F67-C03A9160389D.htm" title="Previous" type="text/html" />
<link rel="Next" href="GUID-46A53C66-888F-43FE-953E-03E8A2404386.htm" title="Next" type="text/html" />
<link rel="alternate" href="BIAFC.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143"></a> <span id="PAGE" style="display:none;">206/336</span> <!-- End Header -->
<a id="BIASC25182"></a><a id="BIASC25183"></a><a id="BIASC25184"></a><a id="BIASC25185"></a><a id="BIASC25186"></a><a id="BIASC25187"></a><a id="BIASC25188"></a><a id="BIASC25189"></a><a id="BIASC25181"></a>
<h1 id="BIAFC-GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143" class="sect1">Configuring GL Segment Security</h1>
<div>
<p>GL Segment Security can be applied on the qualified GL Segment Dimensions: 'Dim &ndash; Cost Center', 'Dim &ndash; Natural Account' &amp; 'Dim &ndash; Balancing Segment', as well as the 10 generic dimensions 'Dim &ndash; GL Segment1 to 'Dim &ndash; GL Segment 10' which are configurable to be any of the accounting segments.</p>
<div class="section">
<p>Before setting up the security, you need to first identify which of these segment dimensions you need to apply security on depending on your security requirements and the security setup in the E-Business Suite system. Once that is determined the following steps to configure the repository metadata need to be repeated for each of the securing segment dimension.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Create a 'row wise' session initialization block and a corresponding session variable to get all the parent nodes the user has access to in a tree. Use the SQL queries and session variable names as given in the table below depending on the dimension that is secured.</span>
<div>
<div class="tblformal" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-90E3BF98-8653-491A-B191-C26273810C68">
<table class="cellalignment156" summary="Initialization Blocks and Session Variables">
<thead>
<tr class="cellalignment128">
<th class="cellalignment161" id="d131585e50">Dimension</th>
<th class="cellalignment152" id="d131585e52">SQL</th>
<th class="cellalignment152" id="d131585e54">Variable Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e58" headers="d131585e50">
<p>Dim &ndash; Cost Center</p>
</td>
<td class="cellalignment154" headers="d131585e58 d131585e52">
<p>SELECT DISTINCT 'GL_SEC_COSTCENTER_VALUESETS____EBS', COST_CENTER_LOV_ID FROM W_COST_CENTER_D WHERE ROW_WID &gt; 0</p>
</td>
<td class="cellalignment154" headers="d131585e58 d131585e54">
<p>GL_SEC_COSTCENTER_VALUESETS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e68" headers="d131585e50">
<p>Dim &ndash; Natural Account</p>
</td>
<td class="cellalignment154" headers="d131585e68 d131585e52">
<p>SELECT DISTINCT 'GL_SEC_ACCOUNT_VALUESETS____EBS', NATURAL_ACCOUNT_LOV_ID FROM W_NATURAL_ACCOUNT_D WHERE ROW_WID &gt; 0</p>
</td>
<td class="cellalignment154" headers="d131585e68 d131585e54">
<p>GL_SEC_ACCOUNT_VALUESETS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e78" headers="d131585e50">
<p>Dim &ndash; Balancing Segment</p>
</td>
<td class="cellalignment154" headers="d131585e78 d131585e52">
<p>SELECT DISTINCT 'GL_SEC_BALANCING_VALUESETS____EBS', BALANCING_SEGMENT_LOV_ID FROM W_BALANCING_SEGMENT_D WHERE ROW_WID &gt; 0</p>
</td>
<td class="cellalignment154" headers="d131585e78 d131585e54">
<p>GL_SEC_BALANCING_VALUESETS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e88" headers="d131585e50">
<p>Dim &ndash; GL Segment&lt;n&gt;</p>
</td>
<td class="cellalignment154" headers="d131585e88 d131585e52">
<p>SELECT DISTINCT 'GL_SEC_SEGMENT&lt;n&gt;_VALUESETS____EBS', SEGMENT&lt;n&gt;_ATTRIB FROM W_GLACCT_SEG_CONFIG_TMP</p>
</td>
<td class="cellalignment154" headers="d131585e88 d131585e54">
<p>GL_SEC_SEGMENT&lt;n&gt;_VALUESETS____EBS</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Connection Pool: "Oracle Data Warehouse"."Oracle Data Warehouse Repository Initblocks Connection Pool"</p>
<div class="infobox-note" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-6B001DB1-1D21-485D-9842-419253725F73">
<p class="notep1">Note:</p>
For the generic GL Segment dimensions, Dim &ndash; GL Segment 1 - 10, you will need to select the corresponding segment column from W_GLACCT_SEG_CONFIG_TMP which will have all the value sets corresponding to that segment.- Use the default value for these variables as 'Default'.- All the variables created above should end with ____EBS (4 '_' followed by the string EBS). This is for multi source implementation where the same variable can be initialized using multiple SQL's for multiple source systems.</div>
</div>
</li>
<li class="stepexpand"><span>Create a 'row wise' session initialization block and a corresponding session variable to get all the parent nodes the user has access to in a value set. Use the SQL queries and session variable names as given in the table below depending on the dimension that is secured.</span>
<div>
<div class="tblformal" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-8620ED4D-37C2-47F0-A419-8D2291CCD430">
<table class="cellalignment156" summary="Initialization Blocks and Session Variables">
<thead>
<tr class="cellalignment128">
<th class="cellalignment161" id="d131585e114">Dimension</th>
<th class="cellalignment152" id="d131585e116">SQL</th>
<th class="cellalignment152" id="d131585e118">Variable Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e122" headers="d131585e114">
<p>Dim &ndash; Cost Center</p>
</td>
<td class="cellalignment154" headers="d131585e122 d131585e116">
<p>select DISTINCT 'GL_SEC_COSTCENTER_FILTEREDACCESS____EBS', TO_CHAR(C.FLEX_VALUE_SET_ID) ||'~'||C.FLEX_VALUE from FND_FLEX_VALUE_RULE_USAGES a, FND_FLEX_VALUE_RULE_LINES B, FND_FLEX_VALUES C</p>
<p>where a.FLEX_VALUE_RULE_ID = B.FLEX_VALUE_RULE_ID and a.FLEX_VALUE_SET_ID = B.FLEX_VALUE_SET_ID and B.FLEX_VALUE_SET_ID = C.FLEX_VALUE_SET_ID and C.FLEX_VALUE between B.FLEX_VALUE_LOW and B.FLEX_VALUE_HIGH and B.INCLUDE_EXCLUDE_INDICATOR = 'I' and C.SUMMARY_FLAG = 'Y' and TO_CHAR(a.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_COSTCENTER_VALUESETS____EBS) and TO_CHAR(a.RESPONSIBILITY_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_EBS_RESP_ID) and a.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e122 d131585e118">
<p>GL_SEC_COSTCENTER_FILTEREDACCESS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e134" headers="d131585e114">
<p>Dim &ndash; Natural Account</p>
</td>
<td class="cellalignment154" headers="d131585e134 d131585e116">
<p>select DISTINCT 'GL_SEC_ACCOUNT_FILTEREDACCESS____EBS', TO_CHAR(C.FLEX_VALUE_SET_ID) ||'~'||C.FLEX_VALUE from FND_FLEX_VALUE_RULE_USAGES a, FND_FLEX_VALUE_RULE_LINES B, FND_FLEX_VALUES C</p>
<p>where a.FLEX_VALUE_RULE_ID = B.FLEX_VALUE_RULE_ID and a.FLEX_VALUE_SET_ID = B.FLEX_VALUE_SET_ID and B.FLEX_VALUE_SET_ID = C.FLEX_VALUE_SET_ID and C.FLEX_VALUE between B.FLEX_VALUE_LOW and B.FLEX_VALUE_HIGH and B.INCLUDE_EXCLUDE_INDICATOR = 'I' and C.SUMMARY_FLAG = 'Y' and TO_CHAR(a.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_ACCOUNT_VALUESETS____EBS) and TO_CHAR(a.RESPONSIBILITY_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_EBS_RESP_ID) and a.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e134 d131585e118">
<p>GL_SEC_ACCOUNT_FILTEREDACCESS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e146" headers="d131585e114">
<p>Dim &ndash; Balancing Segment</p>
</td>
<td class="cellalignment154" headers="d131585e146 d131585e116">
<p>select DISTINCT 'GL_SEC_BALANCING_FILTEREDACCESS____EBS', TO_CHAR(C.FLEX_VALUE_SET_ID) ||'~'||C.FLEX_VALUE from FND_FLEX_VALUE_RULE_USAGES a, FND_FLEX_VALUE_RULE_LINES B, FND_FLEX_VALUES C</p>
<p>where a.FLEX_VALUE_RULE_ID = B.FLEX_VALUE_RULE_ID and a.FLEX_VALUE_SET_ID = B.FLEX_VALUE_SET_ID and B.FLEX_VALUE_SET_ID = C.FLEX_VALUE_SET_ID and C.FLEX_VALUE between B.FLEX_VALUE_LOW and B.FLEX_VALUE_HIGH and B.INCLUDE_EXCLUDE_INDICATOR = 'I' and C.SUMMARY_FLAG = 'Y' and TO_CHAR(a.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_BALANCING_VALUESETS____EBS) and TO_CHAR(a.RESPONSIBILITY_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_EBS_RESP_ID) and a.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e146 d131585e118">
<p>GL_SEC_BALANCING_FILTEREDACCESS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e158" headers="d131585e114">
<p>Dim &ndash; GL Segment&lt;n&gt;</p>
</td>
<td class="cellalignment154" headers="d131585e158 d131585e116">
<p>select DISTINCT 'GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESS____EBS', TO_CHAR(C.FLEX_VALUE_SET_ID) ||'~'||C.FLEX_VALUE from FND_FLEX_VALUE_RULE_USAGES a, FND_FLEX_VALUE_RULE_LINES B, FND_FLEX_VALUES C</p>
<p>where a.FLEX_VALUE_RULE_ID = B.FLEX_VALUE_RULE_ID and a.FLEX_VALUE_SET_ID = B.FLEX_VALUE_SET_ID and B.FLEX_VALUE_SET_ID = C.FLEX_VALUE_SET_ID and C.FLEX_VALUE between B.FLEX_VALUE_LOW and B.FLEX_VALUE_HIGH and B.INCLUDE_EXCLUDE_INDICATOR = 'I' and C.SUMMARY_FLAG = 'Y' and TO_CHAR(a.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_SEGMENT&lt;n&gt;_VALUESETS____EBS) and TO_CHAR(a.RESPONSIBILITY_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_EBS_RESP_ID) and a.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e158 d131585e118">
<p>GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESS____EBS</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Connection Pool: "Oracle EBS OLTP"."Oracle EBS OLTP DbAuth Connection Pool"</p>
<div class="infobox-note" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-B9ACEEBC-7B1B-4A16-99AD-4E1B6642B110">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>The 2nd highlighted variable name in the SQL comes from the variable names defined in Step 1. Make sure you use the same names.</p>
</li>
<li>
<p>Use the default value for these variables as 'Default'</p>
</li>
<li>
<p>All the variables created above should end with ____EBS (4 '_' followed by the string EBS). This is for multi source implementation where the same variable can be initialized using multiple SQL's for multiple source systems.</p>
</li>
</ul>
</div>
</div>
</li>
<li class="stepexpand"><span>Create a 'row wise' session initialization block and a corresponding session variable to get the level in the hierarchy the above nodes fall in a hierarchical value set. Use the SQL queries and session variable names as given in the table below depending on the dimension that is secured.</span>
<div>
<div class="tblformal" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-74B33671-A43C-4A3A-852C-294820DCA0EA">
<table class="cellalignment156" summary="Initialization Blocks and Session Variables">
<thead>
<tr class="cellalignment128">
<th class="cellalignment161" id="d131585e195">Dimension</th>
<th class="cellalignment152" id="d131585e197">SQL</th>
<th class="cellalignment152" id="d131585e199">Variable Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e203" headers="d131585e195">
<p>Dim &ndash; Cost Center</p>
</td>
<td class="cellalignment154" headers="d131585e203 d131585e197">
<p>SELECT DISTINCT 'GL_SEC_COSTCENTER_FILTEREDACCESSLEVELS____EBS', FIXED_HIER_LEVEL FROM W_COST_CENTER_DH WHERE LEVEL0_SECURITY_ID IN (VALUELISTOF(NQ_SESSION.GL_SEC_COSTCENTER_FILTEREDACCESS____EBS)) AND CURRENT_FLG='Y'</p>
</td>
<td class="cellalignment154" headers="d131585e203 d131585e199">
<p>GL_SEC_COSTCENTER_FILTEREDACCESSLEVELS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e213" headers="d131585e195">
<p>Dim &ndash; Natural Account</p>
</td>
<td class="cellalignment154" headers="d131585e213 d131585e197">
<p>SELECT DISTINCT 'GL_SEC_ACCOUNT_FILTEREDACCESSLEVELS____EBS', FIXED_HIER_LEVEL FROM W_NATURAL_ACCOUNT_DH WHERE LEVEL0_SECURITY_ID IN (VALUELISTOF(NQ_SESSION.GL_SEC_ ACCOUNT_FILTEREDACCESS____EBS)) AND CURRENT_FLG='Y'</p>
</td>
<td class="cellalignment154" headers="d131585e213 d131585e199">
<p>GL_SEC_ACCOUNT_FILTEREDACCESSLEVELS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e223" headers="d131585e195">
<p>Dim &ndash; Balancing Segment</p>
</td>
<td class="cellalignment154" headers="d131585e223 d131585e197">
<p>SELECT DISTINCT 'GL_SEC_BALANCING_FILTEREDACCESSLEVELS____EBS', FIXED_HIER_LEVEL FROM W_BALANCING_SEGMENT_DH WHERE LEVEL0_SECURITY_ID IN (VALUELISTOF(NQ_SESSION.GL_SEC_ BALANCING_FILTEREDACCESS____EBS)) AND CURRENT_FLG='Y'</p>
</td>
<td class="cellalignment154" headers="d131585e223 d131585e199">
<p>GL_SEC_BALANCING_FILTEREDACCESSLEVELS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e233" headers="d131585e195">
<p>Dim &ndash; GL Segment&lt;n&gt;</p>
</td>
<td class="cellalignment154" headers="d131585e233 d131585e197">
<p>SELECT DISTINCT 'GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESSLEVELS____EBS', FIXED_HIER_LEVEL FROM W_GL_SEGMENT_DH WHERE LEVEL0_SECURITY_ID IN (VALUELISTOF(NQ_SESSION.GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESS____EBS)) AND CURRENT_FLG='Y'</p>
</td>
<td class="cellalignment154" headers="d131585e233 d131585e199">
<p>GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESSLEVELS____EBS</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Connection Pool: "Oracle Data Warehouse"."Oracle Data Warehouse Repository Initblocks Connection Pool"</p>
<div class="infobox-note" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-10553330-0C7B-42A0-9486-6106D2464851">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>The 2nd highlighted variable name in the SQL comes from the variable names defined in Step 2. Make sure you use the same names.</p>
</li>
<li>
<p>Use the default value for these variables as 0.</p>
</li>
<li>
<p>All the variables created above should end with ____EBS (4 '_' followed by the string EBS). This is for multi source implementation where the same variable can be initialized using multiple SQL's for multiple source systems.</p>
</li>
</ul>
</div>
</div>
</li>
<li class="stepexpand"><span>Create a 'row wise' session initialization block and a corresponding session variable to get all the value sets to which user has partial access for a given segment. Use the SQL queries and session variable names as given in the table below depending on the dimension that is secured.</span>
<div>
<div class="tblformal" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-F23AFFB2-6F80-4D5C-A31C-1E8E6075743E">
<table class="cellalignment156" summary="Initialization Blocks and Session Variables">
<thead>
<tr class="cellalignment128">
<th class="cellalignment161" id="d131585e268">Dimension</th>
<th class="cellalignment152" id="d131585e271">SQL</th>
<th class="cellalignment152" id="d131585e274">Variable Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e279" headers="d131585e268">
<p>Dim &ndash; Cost Center</p>
</td>
<td class="cellalignment154" headers="d131585e279 d131585e271">
<p>select DISTINCT 'GL_SEC_COSTCENTER_FILTEREDACCESSVALUESETS____EBS', TO_CHAR(A.FLEX_VALUE_SET_ID) FROM FND_FLEX_VALUE_RULE_USAGES A WHERE TO_CHAR(A.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_COSTCENTER_VALUESETS____EBS) AND TO_CHAR(A.RESPONSIBILITY_ID) = VALUELISTOF(GL_SEC_EBS_RESP_ID)AND A.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e279 d131585e274">
<p>GL_SEC_COSTCENTER_FILTEREDACCESSVALUESETS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e289" headers="d131585e268">
<p>Dim &ndash; Natural Account</p>
</td>
<td class="cellalignment154" headers="d131585e289 d131585e271">
<p>select DISTINCT 'GL_SEC_ACCOUNT_FILTEREDACCESSVALUESETS____EBS', TO_CHAR(A.FLEX_VALUE_SET_ID) FROM FND_FLEX_VALUE_RULE_USAGES A WHERE TO_CHAR(A.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_ACCOUNT_VALUESETS____EBS) AND TO_CHAR(A.RESPONSIBILITY_ID) = VALUELISTOF(GL_SEC_EBS_RESP_ID)AND A.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e289 d131585e274">
<p>GL_SEC_ACCOUNT_FILTEREDACCESSVALUESETS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e299" headers="d131585e268">
<p>Dim &ndash; Balancing Segment</p>
</td>
<td class="cellalignment154" headers="d131585e299 d131585e271">
<p>select DISTINCT 'GL_SEC_BALANCING_FILTEREDACCESSVALUESETS____EBS', TO_CHAR(A.FLEX_VALUE_SET_ID) FROM FND_FLEX_VALUE_RULE_USAGES A WHERE TO_CHAR(A.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_BALANCING_VALUESETS____EBS) AND TO_CHAR(A.RESPONSIBILITY_ID) = VALUELISTOF(GL_SEC_EBS_RESP_ID)AND A.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e299 d131585e274">
<p>GL_SEC_BALANCING_FILTEREDACCESSVALUESETS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment162" id="d131585e309" headers="d131585e268">
<p>Dim &ndash; GL Segment&lt;n&gt;</p>
</td>
<td class="cellalignment154" headers="d131585e309 d131585e271">
<p>select DISTINCT 'GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESSVALUESETS____EBS', TO_CHAR(A.FLEX_VALUE_SET_ID) FROM FND_FLEX_VALUE_RULE_USAGES A WHERE TO_CHAR(A.FLEX_VALUE_SET_ID) = VALUELISTOF(NQ_SESSION.GL_SEC_SEGMENT&lt;n&gt;_VALUESETS____EBS) AND TO_CHAR(A.RESPONSIBILITY_ID) = VALUELISTOF(GL_SEC_EBS_RESP_ID)AND A.APPLICATION_ID = 101</p>
</td>
<td class="cellalignment154" headers="d131585e309 d131585e274">
<p>GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESSVALUESETS____EBS</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Connection Pool: "Oracle EBS OLTP"."Oracle EBS OLTP DbAuth Connection Pool"</p>
<div class="infobox-note" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-D4702223-EC6F-4475-9D52-F2251AA3984A">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>The 2nd highlighted variable name in the SQL comes from the variable names defined in Step 1. Make sure you use the same names.</p>
</li>
<li>
<p>Use the default value for these variables as 'Default'.</p>
</li>
<li>
<p>All the variables created above should end with ____EBS (4 '_' followed by the string EBS). This is for multi source implementation where the same variable can be initialized using multiple SQL's for multiple source systems.</p>
</li>
</ul>
</div>
<div class="tblformal" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-B06F68EB-9E5E-41BD-8FBB-AB3D601A0ADB">
<table class="cellalignment156" summary="Initialization Blocks and Session Variables">
<thead>
<tr class="cellalignment128">
<th class="cellalignment142" id="d131585e340">Dimension</th>
<th class="cellalignment142" id="d131585e342">SQL</th>
<th class="cellalignment143" id="d131585e344">Variable Name</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment128">
<td class="cellalignment144" id="d131585e348" headers="d131585e340">
<p>Dim &ndash; Cost Center</p>
</td>
<td class="cellalignment144" headers="d131585e348 d131585e342">
<p>SELECT DISTINCT 'GL_SEC_COSTCENTER_FULLACCESS____EBS', COST_CENTER_LOV_ID, FROM W_COST_CENTER_D WHERE COST_CENTER_LOV_ID NOT IN VALUELISTOF(NQ_SESSION.GL_SEC_COSTCENTER_FILTEREDACCESSVALUESETS____EBS)</p>
</td>
<td class="cellalignment145" headers="d131585e348 d131585e344">
<p>GL_SEC_COSTCENTER_FULLACCESS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment144" id="d131585e358" headers="d131585e340">
<p>Dim &ndash; Natural Account</p>
</td>
<td class="cellalignment144" headers="d131585e358 d131585e342">
<p>SELECT DISTINCT 'GL_SEC_ACCOUNT_FULLACCESS____EBS', NATURAL_ACCOUNT_LOV_ID, FROM W_ NATURAL_ACCOUNT _D WHERE NATURAL_ACCOUNT_LOV_ID NOT IN VALUELISTOF(NQ_SESSION.GL_SEC_ACCOUNT_FILTEREDACCESSVALUESETS____EBS)</p>
</td>
<td class="cellalignment145" headers="d131585e358 d131585e344">
<p>GL_SEC_ACCOUNT_ FULLACCESS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment144" id="d131585e368" headers="d131585e340">
<p>Dim &ndash; Balancing Segment</p>
</td>
<td class="cellalignment144" headers="d131585e368 d131585e342">
<p>SELECT DISTINCT 'GL_SEC_BALANCING_FULLACCESS____EBS', BALANCING_SEGMENT_LOV_ID, FROM W_ BALANCING_SEGMENT_D WHERE BALANCING_SEGMENT _LOV_ID NOT IN VALUELISTOF(NQ_SESSION.GL_SEC_BALANCING_FILTEREDACCESSVALUESETS____EBS)</p>
</td>
<td class="cellalignment145" headers="d131585e368 d131585e344">
<p>GL_SEC_BALANCING_ FULLACCESS TS____EBS</p>
</td>
</tr>
<tr class="cellalignment128">
<td class="cellalignment144" id="d131585e378" headers="d131585e340">
<p>Dim &ndash; GL Segment&lt;n&gt;</p>
</td>
<td class="cellalignment144" headers="d131585e378 d131585e342">
<p>SELECT DISTINCT 'GL_SEC_SEGMENT&lt;n&gt;_FULLACCESS____EBS', SEGMENT&lt;n&gt;_ATTRIB, FROM W_GLACCT_SEG_CONFIG_TMP WHERE SEGMENT&lt;n&gt;_ATTRIB NOT IN VALUELISTOF(NQ_SESSION.GL_SEC_SEGMENT&lt;n&gt;_FILTEREDACCESSVALUESETS____EBS)</p>
</td>
<td class="cellalignment145" headers="d131585e378 d131585e344">
<p>GL_SEC_SEGMENT&lt;n&gt;_ FULLACCESS____EBS</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Connection Pool: "Oracle Data Warehouse"."Oracle Data Warehouse Repository Initblocks Connection Pool"</p>
<div class="infobox-note" id="GUID-06888A0D-07FF-4E1C-91A2-D12B13E77143__GUID-0C14C264-FF5C-4D1E-BA7A-517F68627308">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>For the generic GL Segment dimensions, Dim &ndash; GL Segment 1 - 10, you will need to select the corresponding segment column from W_GLACCT_SEG_CONFIG_TMP which will have all the value sets corresponding to that segment.</p>
</li>
<li>
<p>The 2nd highlighted variable name in the SQL comes from the variable names defined in Step 4. Make sure you use the same names.</p>
</li>
<li>
<p>Use the default value for these variables as 'Default'.</p>
</li>
<li>
<p>All the variables created above should end with ____EBS (4 '_' followed by the string EBS). This is for multi source implementation where the same variable can be initialized using multiple SQL's for multiple source systems.</p>
</li>
</ul>
-</div>
</div>
</li>
</ol>
</div>
<div class="sect2"><a id="LOGICAL_COLUMN_EXPRESSIONS"></a>
<h2 id="BIAFC-LOGICAL_COLUMN_EXPRESSIONS" class="sect2">Setting Logical Column Expressions in the BMM Layer</h2>
<div>
<p>Each dimension has 32 security columns Level 0 Security Id through Level 31 Security Id as shown below.</p>
<ol>
<li class="stepexpand"><span>Modify the expression for each of these logical columns using the hierarchy level variable you created.</span>
<div>
<div class="figure" id="LOGICAL_COLUMN_EXPRESSIONS__GUID-2BA8410E-A77F-4314-B563-21F8F23F80D2"><img width="425" height="478" src="img/GUID-3C22C445-3D20-44AD-98B0-F3DD94FE983E-default.gif" alt="This screenshot is described in surrounding text." title="This screenshot is described in surrounding text." /></div>
<!-- class="figure" -->
<p>Each dimension has 32 security columns Level 0 Security Id through Level 31 Security Id as shown below. Modify the expression for each of these logical columns using the hierarchy level variable you created.</p>
</div>
</li>
<li class="stepexpand"><span>Open the logical table source of the dimension that maps to the warehouse dimension table and set the expression for each of these columns using the example from "Dim &ndash; Cost Center" dimension.</span>
<div>
<p>For example, if you are securing by "Dim &ndash; GL Segment3" and the hierarchy level variable for this segment is "GL_SEC_SEGMENT3_FILTEREDACCESSLEVELS", you would set the expression for each of the "Level &lt;n&gt; Security Id" column:</p>
<pre dir="ltr">
INDEXCOL( IFNULL( VALUEOF(&lt;n&gt;, NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESSLEVELS"),  VALUEOF(0, NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESSLEVELS")), 
"Oracle Data Warehouse"."Catalog"."dbo"."Dim_W_GL_SEGMENT_DH_Security_Segment3"."LEVEL31_SECURITY_ID", 
"Oracle Data Warehouse"."Catalog"."dbo"."Dim_W_GL_SEGMENT_DH_Security_Segment3"."LEVEL30_SECURITY_ID", 
"Oracle Data Warehouse"."Catalog"."dbo"."Dim_W_GL_SEGMENT_DH_Security_Segment3"."LEVEL29_SECURITY_ID", 
&hellip;and so on for each security id column&hellip;
"Oracle Data Warehouse"."Catalog"."dbo"."Dim_W_GL_SEGMENT_DH_Security_Segment3"."LEVEL1_SECURITY_ID", 
"Oracle Data Warehouse"."Catalog"."dbo"."Dim_W_GL_SEGMENT_DH_Security_Segment3"."LEVEL0_SECURITY_ID")
</pre></div>
</li>
</ol>
</div>
</div>
<div class="sect2"><a id="SECURITY_FILTERS"></a>
<h2 id="BIAFC-SECURITY_FILTERS" class="sect2">Applying Security Filters in the Data Security Application Notes</h2>
<div>
<p>Apply security filters to the appropriate segement dimensions.</p>
<ol>
<li class="stepexpand"><span>Navigate to <span class="bold">Manage</span>, then <span class="bold">Identity</span> from the menu, open the 'General Ledger Data Security' application role and navigate to <span class="bold">Permissions</span>, then <span class="bold">Data Filters</span>.</span>
<div>
<p>For each of the logical facts secured under this role, you will see some existing filters, which are handling ledger security. You will need to append the segment security filters to this with an 'AND' condition. A snippet of the segment security filters to be appended for a given segment dimension is given below, assuming the security is on 'Dim &ndash; GL Segment3' and the session variable prefix used in the previous steps was 'GL_SEC_SEGMENT3'.</p>
<pre dir="ltr">
(
"Core"."Dim - GL Segment3"."Segment Value Set Code" IS NULL OR 
((
"Core"."Dim - GL Segment3"."Segment Value Set Code" = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FULLACCESS") OR
"Core"."Dim - GL Segment3"."Level 0 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
"Core"."Dim - GL Segment3"."Level 1 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
"Core"."Dim - GL Segment3"."Level 2 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
...and so on for each security id column...
"Core"."Dim - GL Segment3"."Level 30 Security Id"   = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
"Core"."Dim - GL Segment3"."Level 31 Security Id"   = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS")
)
AND 
"Core"."Dim - GL Segment3"."Current Flag Security" = 'Y')
)
</pre></div>
</li>
<li class="stepexpand"><span>Repeat the above for each segment dimension that is secured using appropriate variable names for each segment and appending each block of filters with an AND.</span>
<div>
<p>For example, if you are securing by cost center and segment3 dimensions, the filter will look like this, which includes the ledger security:</p>
<pre dir="ltr">
/* Ledger security filters */
(
"Core"."Dim - Ledger"."Key Id" = VALUEOF(NQ_SESSION."LEDGER")
)
/* cost center segment security filters */
AND
 (
"Core"."Dim - Cost Center"."Cost Center Value Set Code" IS NULL OR 
((
"Core"."Dim - Cost Center"."Cost Center Value Set Code" = VALUEOF(NQ_SESSION."GL_SEC_COST_CENTER_FULLACCESS") OR
"Core"."Dim - Cost Center"."Cost Center Level 0 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_COST_CENTER _FILTEREDACCESS") OR 
"Core"."Dim - Cost Center"."Cost Center Level 1 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_COST_CENTER _FILTEREDACCESS") OR 
"Core"."Dim - Cost Center"."Cost Center Level 2 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_COST_CENTER _FILTEREDACCESS") OR 
...and so on for each security id column...
"Core"."Dim - Cost Center"."Cost Center Level 30 Security Id"   = VALUEOF(NQ_SESSION."GL_SEC_COST_CENTER _FILTEREDACCESS") OR 
"Core"."Dim - Cost Center"."Cost Center Level 31 Security Id"   = VALUEOF(NQ_SESSION."GL_SEC_COST_CENTER _FILTEREDACCESS")
)
AND 
"Core"."Dim - Cost Center"."Current Flag Security" = 'Y')
)
/* segment3 security filters */
AND
 (
"Core"."Dim - GL Segment3"."Segment Value Set Code" IS NULL OR 
((
"Core"."Dim - GL Segment3"."Segment Value Set Code" = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FULLACCESS") OR
"Core"."Dim - GL Segment3"."Level 0 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3 _FILTEREDACCESS") OR 
"Core"."Dim - GL Segment3"."Level 1 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
"Core"."Dim - GL Segment3"."Level 2 Security Id"    = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
...and so on for each security id column...
"Core"."Dim - GL Segment3"."Level 30 Security Id"   = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3_FILTEREDACCESS") OR 
"Core"."Dim - GL Segment3"."Level 31 Security Id"   = VALUEOF(NQ_SESSION."GL_SEC_SEGMENT3 _FILTEREDACCESS")
)
AND 
"Core"."Dim - GL Segment3"."Current Flag Security" = 'Y')
)
</pre>
<div class="infobox-note" id="SECURITY_FILTERS__GUID-3096C179-03C2-4892-8E03-ED5F79C5EE81">
<p class="notep1">Note:</p>
When a tree has more than one version, the security filters are always applied on the current version for that tree (CURRENT_FLG='Y'). However you can navigate through any other version of the tree in the reports but security will always be applied on the current version.</div>
</div>
</li>
</ol>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment127">
<tr>
<td class="cellalignment134">
<table class="cellalignment132">
<tr>
<td class="cellalignment131"><a href="GUID-15127BB3-BEBD-4F1C-9F67-C03A9160389D.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment131"><a href="GUID-46A53C66-888F-43FE-953E-03E8A2404386.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2015, 2017, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment136">
<table class="cellalignment130">
<tr>
<td class="cellalignment131"><a href="../index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment131"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment131"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
