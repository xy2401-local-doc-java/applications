<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>Tasks for Setting Up Oracle GoldenGate and the Source Dependent Schema</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="Perform these detailed tasks to set up Oracle GoldenGate and SDS." />
<meta name="dcterms.created" content="2018-09-25T06:56:20Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Business Intelligence Applications Administrator's Guide" />
<meta name="dcterms.identifier" content="E72283-05" />
<meta name="dcterms.isVersionOf" content="BIASA" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2014, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="GUID-01DE67C0-52A8-4F63-83D5-6C1A66349D9B.htm" title="Previous" type="text/html" />
<link rel="Next" href="GUID-1A0EA88B-88FF-4580-BF38-9DFBB0CBD6A9.htm" title="Next" type="text/html" />
<link rel="alternate" href="BIASA.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD"></a> <span id="PAGE" style="display:none;">30/34</span> <!-- End Header -->
<a id="BIASA24761"></a>
<h1 id="BIASA-GUID-053B68C7-4D41-4E93-B98A-398E746F80FD" class="sect1">Tasks for Setting Up <span>Oracle GoldenGate</span> and the Source Dependent Schema</h1>
<div>
<p>Perform these detailed tasks to set up <span>Oracle GoldenGate</span> and SDS.</p>
<div class="infobox-note" id="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD__GUID-A9221AB0-0D2E-4EB9-B942-E94B6E1AED03">
<p class="notep1">Note:</p>
You must perform the tasks in this section in the listed sequence.</div>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE" title="In this step, you create Oracle GoldenGate database users on source and target databases. Unlike other database schemas used by Oracle BI Applications, the SDS and OGG schemas are not automatically created during installation.">Setup Step: Configure Source and Target Database</a></p>
</li>
<li>
<p><a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-76E3B2AC-54F1-42FE-8D40-7880D1577381" title="Download and install Oracle GoldenGate software first on the source and then on the target machines. The software is available from Oracle Technology Network.">Setup Step: Install Oracle GoldenGate on Source and Target Systems</a></p>
</li>
<li>
<p><a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-354755C8-C673-4AEE-93B5-91D69A8B620D" title="Configure Configuration Manager and ODI to support the Source Dependent Schema.">Setup Step: Configure BI Applications Configuration Manager and Oracle Data Integrator to Support the Source Dependent Schema</a></p>
</li>
<li>
<p><a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1" title="Generate and run the Data Definition Language (DDL) to create the SDS tables on the SDS schema in the target database.">Setup Step: Generate, Deploy, and Populate the Source Dependent Schema Tables on Target Database</a></p>
</li>
<li>
<p><a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF" title="Parameter files are used to control how Oracle GoldenGate operates. These files are deployed to the source system, where the Extract and Data Pump processes are executed, and the target system, where the Replicat process is executed.">Setup Step: Generate and Deploy Oracle GoldenGate Parameter Files to Source and Target Systems</a></p>
</li>
<li>
<p><a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-21C187A0-6862-4A41-9853-2F37C0339D5F" title="Start Oracle GoldenGate on source and target systems.">Setup Step: Start Oracle GoldenGate on Source and Target Systems</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<a id="BIASA24628"></a><a id="BIASA24762"></a><a id="BIASA24763"></a><a id="BIASA24764"></a><a id="BIASA24791"></a>
<div class="sect2"><a id="GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE"></a>
<h2 id="BIASA-GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE" class="sect2">Setup Step: Configure Source and Target Database</h2>
<div>
<p>In this step, you create <span>Oracle GoldenGate</span> database users on source and target databases. Unlike other database schemas used by <span>Oracle BI Applications</span>, the SDS and OGG schemas are not automatically created during installation.</p>
<div class="section">
<p>Only the installation process can automatically create database users; because datasources are defined in <span>Oracle BI Applications Configuration Manager</span> (<span>Configuration Manager</span>) after installation is complete, the required Source Dependent Schemas associated with these datasources must be manually created. For this reason, an SDS schema must be manually defined on the target database. Additionally, the <span>Oracle BI Applications</span> installer is not able to create the OGG database user on the source OLTP system. This section describes how to create the OGG database user on the source database system and the OGG and SDS database users on the target database system.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Create the OLTP <span>Oracle GoldenGate</span> database user.</span>
<div>
<p>Each OGG process requires a dedicated database user. On the source system, the OGG user needs to be able to query various metadata.</p>
<p>Secure database practice is to avoid granting privileges to tables not in use, so <code class="codeph">SELECT ANY TABLE</code> is not granted to the OGG database user. Instead, as part of the SDS DDL, <code class="codeph">SELECT</code> privileges are granted only to those tables in the OLTP schema being replicated.</p>
<p>The user creation scripts use the following parameters:</p>
<div class="tblformal" id="GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE__GUID-78D8A7D7-D112-4273-9B95-230987ACE90B">
<table class="cellalignment258" summary="Parameters used during OGG user creation.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment245" id="d11022e176">Parameter</th>
<th class="cellalignment246" id="d11022e178">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e182" headers="d11022e176">
<p>&amp;BIAPPS_OGG</p>
</td>
<td class="cellalignment248" headers="d11022e182 d11022e178">
<p><span>Oracle GoldenGate</span> Database User Name</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e191" headers="d11022e176">
<p>&amp;BIAPPS_OGG_PW</p>
</td>
<td class="cellalignment248" headers="d11022e191 d11022e178">
<p><span>Oracle GoldenGate</span> Database User Password</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Run the following script on the source database to create the source database OGG user.</p>
<pre dir="ltr">
-- Create OGG User
CREATE USER &amp;BIAPPS_OGG
IDENTIFIED BY &amp;BIAPPS_OGG_PW
DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;
 
GRANT CREATE SESSION TO &amp;BIAPPS_OGG;
GRANT ALTER SESSION TO &amp;BIAPPS_OGG;
GRANT SELECT ANY DICTIONARY TO &amp;BIAPPS_OGG;
GRANT FLASHBACK ANY TABLE TO &amp;BIAPPS_OGG;
 
 
-- OGG user requires ALTER ANY table to set up supplemental logging for individual tables. Once accomplished, this privilege can be revoked:
GRANT ALTER ANY TABLE TO &amp;BIAPPS_OGG;
</pre></div>
</li>
<li class="stepexpand"><span>Prepare the OLTP database and redo logs.</span>
<div>
<p><span>Oracle GoldenGate</span> requires that the database be configured for supplemental logging. Execute the following statement in the source database with a user with sufficient privileges.</p>
<pre dir="ltr">
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;
</pre></div>
</li>
<li class="stepexpand"><span>Create the target <span>Oracle GoldenGate</span> database user.</span>
<div>
<p>Each OGG process requires a dedicated database user. On the target system, the OGG user needs to be able to execute various DML operations on the SDS tables as well as optionally create a checkpoint table. Secure database practice is to avoid granting privileges to tables not in use, so <code class="codeph">SELECT ANY TABLE</code>, <code class="codeph">INSERT ANY TABLE</code> and so on are not granted to the OGG database user. Instead, as part of the SDS DDL, required privileges are granted only to those tables in the SDS schema for the OGG database user.</p>
<p>The user creation scripts use the following parameters:</p>
<div class="tblformal" id="GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE__GUID-9340BCE0-8C5F-4920-9812-C0210580C758">
<table class="cellalignment258" summary="Parameters used during OGG user creation.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment245" id="d11022e238">Parameter</th>
<th class="cellalignment246" id="d11022e240">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e244" headers="d11022e238">
<p>&amp;BIAPPS_OGG</p>
</td>
<td class="cellalignment248" headers="d11022e244 d11022e240">
<p><span>Oracle GoldenGate</span> Database User Name</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e253" headers="d11022e238">
<p>&amp;BIAPPS_OGG_PW</p>
</td>
<td class="cellalignment248" headers="d11022e253 d11022e240">
<p><span>Oracle GoldenGate</span> Database User Password</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Run the following script on the target table to create the target database OGG user.</p>
<pre dir="ltr">
-- Create OGG User
CREATE USER &amp;BIAPPS_OGG
IDENTIFIED BY &amp;BIAPPS_OGG_PW
DEFAULT TABLESPACE USERS QUOTA UNLIMITED ON USERS;
 
GRANT CREATE SESSION TO &amp;BIAPPS_OGG;
GRANT ALTER SESSION TO &amp;BIAPPS_OGG;
GRANT SELECT ANY DICTIONARY TO &amp;BIAPPS_OGG;

-- Create Table privilege only required to create checkpoint table. Can be revoked once table is created. Not required if not creating this table
GRANT CREATE TABLE TO &amp;BIAPPS_OGG;
</pre></div>
</li>
<li class="stepexpand"><span>Create the SDS database user.</span>
<div>
<p>A separate SDS database user must be configured in the target database for each OLTP system that will leverage the SDS. Each supported source instance requires a separate SDS schema. The recommended naming convention for the schema owner is <span class="variable">BIAPPS</span>SDS<span class="variable">Model Code</span>_<span class="variable">DSN Number</span> where <span class="variable">BIAPPS</span> is a user defined code representing <span>Oracle BI Applications</span> content, <span class="variable">Model Code</span> is the unique code assigned to each datasource type and <span class="variable">DSN Number</span> is the unique datasource ID assigned to a specific datasource instance. For example, if you have the following two datasources defined as supported source systems in the <span>Configuration Manager</span>, you would have the corresponding SDS schemas defined in the data warehouse database:</p>
<div class="tblformal" id="GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE__GUID-5B8B96A4-A42A-48C8-8E38-E294CA7BAD16">
<table class="cellalignment258" summary="Lists SDS schema examples.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment259" id="d11022e306">Source Instance Name</th>
<th class="cellalignment259" id="d11022e308">Model Code</th>
<th class="cellalignment260" id="d11022e310">Data Source Number</th>
<th class="cellalignment254" id="d11022e312">SDS</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment261" id="d11022e316" headers="d11022e306">
<p>Oracle EBS 11.5.10</p>
</td>
<td class="cellalignment261" headers="d11022e316 d11022e308">
<p>EBS_11_5_10</p>
</td>
<td class="cellalignment262" headers="d11022e316 d11022e310">
<p>310</p>
</td>
<td class="cellalignment256" headers="d11022e316 d11022e312">
<p>BIAPPS_SDS_ EBS_11_5_10_310</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment261" id="d11022e329" headers="d11022e306">
<p>Siebel CRM 8.1.1</p>
</td>
<td class="cellalignment261" headers="d11022e329 d11022e308">
<p>SEBL_8_1_1</p>
</td>
<td class="cellalignment262" headers="d11022e329 d11022e310">
<p>625</p>
</td>
<td class="cellalignment256" headers="d11022e329 d11022e312">
<p>BIAPPS_SDS_ SEBL_8_1_1_625</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>Use the following DDL as a template for creating each SDS database user. The following only represents a bare minimum of the required DDL statements; adjust for your environment as necessary. Rerun for each supported source instance.</p>
<div class="tblformal" id="GUID-CBE1CA51-68DF-4317-A502-6A8341C303CE__GUID-578BABB1-06CE-418A-BC0B-E53CE527BB7D">
<table class="cellalignment258" summary="Lists SDS database user parameters.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment245" id="d11022e351">Parameter</th>
<th class="cellalignment246" id="d11022e353">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e357" headers="d11022e351">
<p>&amp;BIAPPS_SDS_DATA_TS</p>
</td>
<td class="cellalignment248" headers="d11022e357 d11022e353">
<p>Tablespace name</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e364" headers="d11022e351">
<p>&amp;ORADATA</p>
</td>
<td class="cellalignment248" headers="d11022e364 d11022e353">
<p>Path where tablespace should be located</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e371" headers="d11022e351">
<p>&amp;BIAPPS_SDS</p>
</td>
<td class="cellalignment248" headers="d11022e371 d11022e353">
<p>SDS User name</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e378" headers="d11022e351">
<p>&amp;BIAPPS_SDS_PW</p>
</td>
<td class="cellalignment248" headers="d11022e378 d11022e353">
<p>SDS User password</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e385" headers="d11022e351">
<p>&amp;BIAPPS_OGG</p>
</td>
<td class="cellalignment248" headers="d11022e385 d11022e353">
<p><span>Oracle GoldenGate</span> Database User Name</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<pre dir="ltr">
-- Create tablespace. Following is only an example and may not reflect PSR guidance:
CREATE TABLESPACE &amp;BIAPPS_SDS_DATA_TS
DATAFILE '&amp;ORADATA/&amp;BIAPPS_SDS_DATA_TS..dbf' SIZE 100M AUTOEXTEND ON NEXT 10M
LOGGING
DEFAULT COMPRESS FOR OLTP;
 
-- Create SDS User
CREATE USER &amp;BIAPPS_SDS
IDENTIFIED BY &amp;BIAPPS_SDS_PW
DEFAULT TABLESPACE &amp;BIAPPS_SDS_DATA_TS QUOTA UNLIMITED ON &amp;BIAPPS_SDS_DATA_TS;
 
-- Required Grants
GRANT CREATE SESSION TO &amp;BIAPPS_SDS;
GRANT CREATE TABLE TO &amp;BIAPPS_SDS;
 
-- OGG user must be granted Quota to insert and update data
ALTER USER &amp;BIAPPS_OGG QUOTA UNLIMITED ON &amp;BIAPPS_SDS_DATA_TS;
</pre></div>
</li>
</ol>
</div>
</div>
<a id="BIASA24633"></a><a id="BIASA24634"></a><a id="BIASA24765"></a>
<div class="sect2"><a id="GUID-76E3B2AC-54F1-42FE-8D40-7880D1577381"></a>
<h2 id="BIASA-GUID-76E3B2AC-54F1-42FE-8D40-7880D1577381" class="sect2">Setup Step: Install <span>Oracle GoldenGate</span> on Source and Target Systems</h2>
<div>
<p>Download and install <span>Oracle GoldenGate</span> software first on the source and then on the target machines. The software is available from Oracle Technology Network.</p>
<div class="section">
<p>See the <span>Oracle GoldenGate</span> Installation and Setup guides for your platform and database:</p>
<ul style="list-style-type: disc;">
<li>
<p><cite>Oracle GoldenGate for Oracle Installation and Setup Guide</cite></p>
</li>
<li>
<p><cite>Oracle GoldenGate for DB2 LUW Installation and Setup Guide</cite></p>
</li>
<li>
<p><cite>Oracle GoldenGate for c-tree Installation and Setup Guide</cite></p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-76E3B2AC-54F1-42FE-8D40-7880D1577381__GUID-AB47B621-F644-4112-89B0-7CFF6B28F453">Installation Recommendations</p>
<p>When installing and configuring the <span>Oracle GoldenGate</span> software, consider the following recommendations:</p>
<ul style="list-style-type: disc;">
<li>
<p>For each OLTP instance supported, install a separate Replicate process on the target machine. As each OLTP instance has its own separate SDS schema on the target database, the Replicate process is populating different targets so a separate Replicate process is required for each.</p>
</li>
<li>
<p>Install a Data Pump process on the source machine.</p>
</li>
<li>
<p>The name of the Extract, Data Pump and Replicat processes are limited to eight characters. The suggested naming convention is as follows:</p>
<div class="tblformal" id="GUID-76E3B2AC-54F1-42FE-8D40-7880D1577381__GUID-195F745E-8478-432C-AE1D-36EF4B7FA242">
<table class="cellalignment258" summary="Process naming convention">
<thead>
<tr class="cellalignment238">
<th class="cellalignment254" id="d11022e476">Process</th>
<th class="cellalignment245" id="d11022e478">Naming Convention</th>
<th class="cellalignment254" id="d11022e480">Example</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment256" id="d11022e484" headers="d11022e476">
<p>Extract</p>
</td>
<td class="cellalignment247" headers="d11022e484 d11022e478">
<p>EXT_<span class="wintitle">Datasource Num Id</span></p>
</td>
<td class="cellalignment256" headers="d11022e484 d11022e480">
<p>EXT_310</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment256" id="d11022e496" headers="d11022e476">
<p>Data Pump</p>
</td>
<td class="cellalignment247" headers="d11022e496 d11022e478">
<p>DP_<span class="variable">Datasource Num Id</span></p>
</td>
<td class="cellalignment256" headers="d11022e496 d11022e480">
<p>DP_310</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment256" id="d11022e508" headers="d11022e476">
<p>Replicate</p>
</td>
<td class="cellalignment247" headers="d11022e508 d11022e478">
<p>REP_<span class="variable">Datasource Num Id</span></p>
</td>
<td class="cellalignment256" headers="d11022e508 d11022e480">
<p>REP_310</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></li>
<li>
<p>Follow the steps in the <span>Oracle GoldenGate</span> documentation to configure an instance of <span>Oracle GoldenGate</span> on the source and target systems up to the point of starting the OGG processes.</p>
</li>
<li>
<p>Note that as part of the installation and configuration, a procedure is run to generate <span>Oracle BI Applications</span>-specific parameter files, as discussed in the following section. See <a href="GUID-053B68C7-4D41-4E93-B98A-398E746F80FD.htm#GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF" title="Parameter files are used to control how Oracle GoldenGate operates. These files are deployed to the source system, where the Extract and Data Pump processes are executed, and the target system, where the Replicat process is executed.">Setup Step: Generate and Deploy Oracle GoldenGate Parameter Files to Source and Target Machines</a>. The install and configuration of the OGG processes are completed at this point.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-76E3B2AC-54F1-42FE-8D40-7880D1577381__GUID-2D3C21F2-99E5-4BC8-8EAA-68A0A930E41B">Example Steps to configure the Oracle GoldenGate processes</p>
<p>These example steps illustrate how to configure the OGG processes. Modify these steps as appropriate for your environment.</p>
<p>For the source system, configure Extract and Data Pump processes. The initial steps in the example below effectively remove an existing instance of both processes. If none already exist, start with the <code>START MGR</code> command.</p>
<pre dir="ltr">
--Stop Manager on primary database
dblogin USERID &lt;GG User's DB ID, requirement depends on database&gt;,
PASSWORD &lt;GG User's DB password, requirement depends on database &gt;

STOP MGR

--Stop GG processes
STOP &lt;name of Extract process&gt;
DELETE EXTTRAIL &lt;relative or fully qualified path where Extract Trail files are created on source system&gt;/*
DELETE &lt;name of Extract process&gt;

STOP &lt;name of Data Pump process&gt;
DELETE RMTTRAIL &lt;relative or fully qualified path where Replicat Trail files are created on target system&gt;/*
DELETE &lt;name of Data Pump process&gt;

--Delete Previous Trail Files
SHELL rm &lt;relative or fully qualified path where Extract Trail files are created on source system&gt;/*

--Start Manager on primary database
START MGR

--Primary database capture configuration
ADD EXTRACT &lt;name of Extract process&gt;, TRANLOG, BEGIN NOW
ADD EXTTRAIL &lt;relative or fully qualified path where Extract Trail files are to be created on source system&gt;, EXTRACT &lt;name of Extract process&gt;, MEGABYTES 50

--Primary database pump configuration:
ADD EXTRACT&lt;name of Data Pump process&gt;, EXTTRAILSOURCE &lt;relative or fully qualified path where Extract Trail files are to be created on source system&gt;,
ADD RMTTRAIL &lt;relative or fully qualified path where Replicat Trail files are to be created on target system&gt;, EXTRACT&lt;name of Data Pump process&gt;, MEGABYTES 50
</pre>
<p>Example:</p>
<pre dir="ltr">
--Stop Manager on primary database
dblogin userid gg, password gg
STOP MGR
 
--Stop GG processes
STOP EXT_310
DELETE EXTTRAIL ./dirdat/*
DELETE EXT_310
 
STOP DP_310
DELETE RMTTRAIL ./dirdat/*
DELETE DP_310
 
--Delete Previous Trail Files
SHELL rm ./dirdat/*
 
--Start Manager on primary database
START MGR
 
--Primary database capture configuration
ADD EXTRACT EXT_310, TRANLOG, BEGIN NOW
ADD EXTTRAIL ./dirdat/tr, EXTRACT EXT_310, MEGABYTES 50
 
--Primary database pump configuration:
ADD EXTRACT DP_310, EXTTRAILSOURCE ./dirdat/tr
ADD RMTTRAIL ./dirdat/tr, EXTRACT DP_310, MEGABYTES 50
</pre>
<p>Implement similar steps for the Replicate process in the target system. The initial steps effectively remove an existing instance of the Replicate process. If none already exist, start with the START MGR command.</p>
<pre dir="ltr">
--Stop Manager on target database
dblogin USERID &lt;GG User's DB ID, requirement depends on database&gt;,
PASSWORD &lt;GG User's DB password, requirement depends on database &gt;
STOP MGR
 
--Stop GG processes
STOP &lt;name of Replicat process&gt;
DELETE &lt;name of Replicat process&gt;
 
--Delete CHECKPOINTTABLE
DELETE CHECKPOINTTABLE &lt;GG User's DB ID&gt;.GGSCHKPT
 
--Delete Previous Trail Files
SHELL rm &lt;relative or fully qualified path where Replicat Trail files are created on target system&gt;/*
 
--Start Manager on target database
START MGR
 
--Create CHECKPOINTTABLE in target database
dblogin USERID &lt;GG User's DB ID&gt;,
PASSWORD &lt;GG User's DB password&gt;
ADD CHECKPOINTTABLE &lt;GG User's DB ID&gt;.GGSCHKPT
 
--Target database delivery configuration
ADD REPLICAT &lt;name of Replicat process&gt;, exttrail &lt;relative or fully qualified path where Replicat Trail files are to be created on target system&gt;
</pre>
<p>Example:</p>
<pre dir="ltr">
--Stop Manager on target database
dblogin userid gg, password gg
STOP MGR
 
--Stop GG processes
STOP REP_310
DELETE REP_310
 
--Delete CHECKPOINTTABLE
DELETE CHECKPOINTTABLE
 
--Delete Previous Trail Files
SHELL rm ./dirdat/*
 
--Start Manager on target database
START MGR
 
--Create CHECKPOINTTABLE in target database
dblogin userid gg, password gg
ADD CHECKPOINTTABLE
 
--Target database delivery configuration
ADD REPLICAT REP_310, exttrail ./dirdat/tr
</pre></div>
<!-- class="section" --></div>
</div>
<a id="BIASA24767"></a><a id="BIASA24768"></a><a id="BIASA24766"></a>
<div class="sect2"><a id="GUID-354755C8-C673-4AEE-93B5-91D69A8B620D"></a>
<h2 id="BIASA-GUID-354755C8-C673-4AEE-93B5-91D69A8B620D" class="sect2">Setup Step: Configure <span>Configuration Manager</span> and ODI to Support the Source Dependent Schema</h2>
<div>
<p>Configure <span>Configuration Manager</span> and ODI to support the Source Dependent Schema.</p>
<div class="section">
<p>Enable the SDS option for each datasource defined in <span>Configuration Manager</span>. You can enable the SDS option for the entire datasource or for individual Fact Groups. The SDS option is enabled by setting the value for the IS_SDS_DEPLOYED parameter to Yes.</p>
</div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>In <span>Configuration Manager</span>, select the <span class="bold">Source Instance</span>.</span></li>
<li class="stepexpand"><span>Click <span class="bold">Manage Data Load Parameters</span>.</span></li>
<li class="stepexpand"><span>Locate the IS_SDS_DEPLOYED parameter in the list.</span></li>
<li class="stepexpand"><span>In the Global Parameter Value, replace &lt;Edit Value&gt; with <span class="bold">Yes</span>.</span>
<div>
<p>A warning is displayed indicating that the parameter is being updated globally for all Fact and Dimension Groups.</p>
</div>
</li>
<li class="stepexpand"><span>Click <span class="bold">Yes</span> to confirm or, if you prefer, set the global parameter to <span class="bold">No</span>, and then edit the parameter value at the Fact Group or Dimension Group level.</span></li>
</ol>
</div>
<div class="sect3"><a id="ADD_SDS_PHYSICAL_SCHEMAS"></a>
<h3 id="BIASA-ADD_SDS_PHYSICAL_SCHEMAS" class="sect3">Adding SDS Physical Schemas in ODI</h3>
<div>
<p>For each source instance, you must manually add a corresponding physical schema under the 'BIAPPS_DW' physical server in ODI.</p>
<ol>
<li class="stepexpand"><span>In ODI Studio's Topology Navigator, expand the Oracle technology in the Physical Architecture.</span></li>
<li class="stepexpand"><span>Right-click <span class="bold">Oracle_BI_Apps_DW</span> and select <span class="bold">New Physical Schema</span>.</span></li>
<li class="stepexpand"><span>In the Definition, set Schema (Schema) and Schema (Work Schema) both to the SDS schema owner.</span></li>
<li class="stepexpand"><span>Select <span class="bold">Flexfields</span>.</span></li>
<li class="stepexpand"><span>For the DATASOURCE_NUM_ID flex field, uncheck the <span class="bold">Default</span> checkbox and assign the DSN value associated with that source as defined in <span>Configuration Manager</span>.</span></li>
<li class="stepexpand"><span>Save the physical schema definition.</span>
<div>
<p>Ignore the message about the physical server not being assigned a context.</p>
</div>
</li>
</ol>
</div>
</div>
</div>
<a id="BIASA24770"></a><a id="BIASA24771"></a><a id="BIASA24772"></a><a id="BIASA24773"></a><a id="BIASA24774"></a><a id="BIASA24775"></a><a id="BIASA24776"></a><a id="BIASA24769"></a>
<div class="sect2"><a id="GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1"></a>
<h2 id="BIASA-GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1" class="sect2">Setup Step: Generate, Deploy, and Populate the Source Dependent Schema Tables on Target Database</h2>
<div>
<p>Generate and run the Data Definition Language (DDL) to create the SDS tables on the SDS schema in the target database.</p>
<ol>
<li class="stepexpand"><span>Generate the SDS DDL.</span>
<div>
<p>Procedures are provided to generate the required objects to enable the SDS. To generate the required DDL, in ODI Designer execute the 'Generate DDL - SDS' scenario found under <span class="bold">BI Apps Project</span>, <span class="bold">Components</span>, <span class="bold">SDS</span>, <span class="bold">Oracle</span>, then <span class="bold">Generate SDS DDL</span>. Provide an appropriate context when prompted. As the procedure can only accept a single source type, this process needs to be repeated for each different type of Source system to be enabled.</p>
<p>To execute the scenario, right-click it and select <span class="bold">Execute</span>. When the scenario is executed, a prompt appears to provide values for the DDL execution options. Refer to the following table describing the options to provide appropriate values.</p>
<div class="tblformal" id="GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1__GUID-B7CFD90C-69C9-4119-BC41-0C3A352285F1">
<table class="cellalignment258" summary="A list of SDS DDL variable values.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment263" id="d11022e757">Option</th>
<th class="cellalignment264" id="d11022e759">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e763" headers="d11022e757">
<p>GG_USER_DW</p>
</td>
<td class="cellalignment266" headers="d11022e763 d11022e759">
<p><span>Oracle GoldenGate</span> database user on the <span>Oracle BI Applications</span> database</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e775" headers="d11022e757">
<p>GG_USER_SOURCE</p>
</td>
<td class="cellalignment266" headers="d11022e775 d11022e759">
<p><span>Oracle GoldenGate</span> database user on the OLTP database.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e784" headers="d11022e757">
<p>SDS_MODEL</p>
</td>
<td class="cellalignment266" headers="d11022e784 d11022e759">
<p>The OLTP model to be used to generate the SDS schema. Each model is associated with a logical schema. The logical schema is associated with a physical schema. The logical and physical schema DSN flexfields must match an SDS physical schema's DSN flexfield defined under the BI Apps DW physical server in order for this utility to determine the appropriate schema name to be used for the SDS. The SDS physical schema with the matching DSN flexfield value is used to identify changes and execute the DDL against if the RUN_DDL option is set to Y.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e791" headers="d11022e757">
<p>CREATE_SCRIPT_FILE</p>
</td>
<td class="cellalignment266" headers="d11022e791 d11022e759">
<p>Y or N. Set to Y if you want to review the DDL or manually execute the script.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e798" headers="d11022e757">
<p>REFRESH_MODE</p>
</td>
<td class="cellalignment266" headers="d11022e798 d11022e759">
<p>FULL or INCREMENTAL. Full drops and creates all tables. Incremental compares the repository with the SDS schema and applies changes using <code class="codeph">ALTER</code> statements without dropping tables. Incremental process can take much longer than Full mode and should be used with filters to limit the number of tables compared.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e808" headers="d11022e757">
<p>CHAR_CLAUSE</p>
</td>
<td class="cellalignment266" headers="d11022e808 d11022e759">
<p>Y or N. For Unicode support, will include the <code class="codeph">CHAR</code> clause when defining string columns. For example <code class="codeph">FULL_NAME VARCHAR2(10)</code> would be created as <code class="codeph">FULL_NAME VARCHAR2(10 CHAR)</code>. This ensures that the right length is chosen when the underlying database is a unicode database.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e824" headers="d11022e757">
<p>RUN_DDL</p>
</td>
<td class="cellalignment266" headers="d11022e824 d11022e759">
<p>Y or N. Determines whether to execute the DDL commands. The script will be executed against the physical SDS schema associated with the SDS_MODEL. Note that this script will be executed via the user defined in the BIAPPS_DW physical server which is usually the owner of the BIAPPS_DW schema and which may not have appropriate privileges to create or alter tables in another schema. To have the utility execute the DDL script, you may need to grant <code class="codeph">CREATE ANY TABLE</code>, <code class="codeph">CREATE ANY INDEX</code>, <code class="codeph">ALTER ANY TABLE</code> and <code class="codeph">ALTER ANY INDEX</code> to the BIAPPS_DW database user.</p>
<p>It is recommended to set this option to N. If set to Y, both the tables and indexes will be created. Having the indexes on the tables will impact the performance of initially loading the tables. Rather, it is recommended that you set this option to N, manually execute the Table DDL, perform the initial load of the tables, then manually execute the Index DDL.</p>
<p>Also, if an index or primary key constraint is not defined correctly in ODI, uniqueness or not null errors could be generated and a table could fail to be loaded. Indexes and primary keys are useful for <span>Oracle GoldenGate</span> but are not required. It is better to build the indexes and primary keys after the data is loaded and make any necessary corrections to the constraint's definition in ODI and attempt to build the index or primary key again.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e850" headers="d11022e757">
<p>SCRIPT_LOCATION</p>
</td>
<td class="cellalignment266" headers="d11022e850 d11022e759">
<p>The location where the script should be created if the CREATE_SCRIPT_FILE option is true.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e857" headers="d11022e757">
<p>TABLE_MASK</p>
</td>
<td class="cellalignment266" headers="d11022e857 d11022e759">
<p>To generate the DDL for all tables, use a wildcard (the default). To generate for only a subset of tables with names matching a particular pattern, use that pattern with a wildcard, such as PER_%.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>If you set CREATE_SCRIPT_FILE to Y, four files are generated by the Generate SDS DDL procedure in the location specified by SCRIPT_LOCATION. One is a .SQL script to creates the tables. Another is a .SQL script to create the indexes and analyze the tables. This allows you to create the tables, perform an initial load of the tables without any indexes that could hurt performance, and then create the indexes and analyze the tables after they are loaded. Another .SQL script is generated which grants <code class="codeph">SELECT</code> privileges to the OGG database user only for those tables that need to be selected from. The final file is a log file.</p>
</div>
</li>
<li class="stepexpand"><span>Grant privileges to OLTP tables.</span>
<div>
<p>The OGG user must be able to select from the tables in the OLTP database. Rather than grant the <code class="codeph">SELECT ANY TABLE</code> privilege to the OGG user, <code class="codeph">SELECT</code> privileges are granted only to those tables that actually need to be replicated to the target system.</p>
<p>The SDS DDL generator procedure creates a script to grant <code class="codeph">SELECT</code> privileges to the OGG user. Refer to the script <code>BIA_SDS_Schema_Source_Grants_DDL_<span class="variable">unique ID</span>.sql</code> and execute the contents in the OLTP database with a user with sufficient privileges to grant <code class="codeph">SELECT</code> privileges on the OLTP tables.</p>
</div>
</li>
<li class="stepexpand"><span>Create the SDS tables.</span>
<div>
<p>The SDS DDL generator procedure creates a .SQL script that follows the naming convention BIA_SDS_Schema_DDL_&lt;<span class="italic">unique ID</span>&gt;.sql which contains the <code class="codeph">CREATE</code> or <code class="codeph">ALTER</code> DDL statements to create or alter the tables in the SDS schema. Execute the SQL in this file against the SDS schema.</p>
<p>The ETL process must be able to select from the SDS tables. Typically, the ETL process uses the <span>Oracle BI Applications</span> data warehouse schema owner. This must be granted <code class="codeph">SELECT</code> privileges on the SDS tables. In addition, the OGG user needs read and write access to these same tables. The SDS Generate DDL procedure grants <code class="codeph">SELECT</code> privileges to the <span>Oracle BI Applications</span> data warehouse schema owner and <code class="codeph">SELECT</code>, <code class="codeph">INSERT</code>, <code class="codeph">UPDATE</code> and <code class="codeph">DELETE</code> privileges to the OGG user.</p>
</div>
</li>
<li class="stepexpand"><span>Perform initial Load of the SDS tables: create database link to OLTP database.</span>
<div>
<p>A variety of methods can be used to initially load the data from the source database to the target database. A procedure is provided to generate a script to perform an initial load as described in the steps below. Note however, that you may opt for other methods. The procedure generates a script that executes DML statements that extract data over a database link.</p>
<div class="infobox-note" id="GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1__GUID-EBA13F30-9194-4C48-8565-D09E397E9201">
<p class="notep1">Note:</p>
<p>LOB and LONG datatype columns are created in the SDS, but the provided utilities to initially copy data from the source to target system cannot support these datatypes, so columns with these datatypes are specifically excluded by these utilities. If data in these columns are required, an alternate method for performing an initial load of the SDS will need to be implemented.</p>
</div>
<div class="infobox-note" id="GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1__GUID-FC9FC6FC-1483-46A8-9CA9-3B69A8AF9F6F">
<p class="notep1">Note:</p>
<p>In Siebel implementations, a small number of tables in the Siebel database are created when installing the <span>Oracle BI Applications</span>. These tables must be manually created and always have S_ETL as a prefix. Be sure these tables have already been created prior to executing these steps. If these tables do not already exist, a "table or view does not exist" error can occur when executing the following commands.</p>
</div>
<p>First, create a database link to the OLTP database on the target database. The procedure to generate the DML script requires that a database link already exist named "DW_TO_OLTP" prior to being executed. The procedure executes using the BIAPPS_DW physical server so the database link has to either be defined in the same schema as used in the BIAPPS_DW physical server or else defined as a public database link. This database link must be manually created, it is not automatically created.</p>
<p>The procedure only populates a single SDS schema at a time. If creating multiple SDS schemas to accommodate multiple sources, this database link will need to be updated prior to each run to point to a different OLTP instance.</p>
<div class="infobox-note" id="GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1__GUID-E94FB486-1B37-4B0D-A735-7D23A2484B24">
<p class="notep1">Note:</p>
<p>The JDE application spreads data across four databases and is tracked under four different submodels under a single JDE specific model. The DML option will need to be executed for each separate submodel and the "DW_TO_OLTP" database link will need to be updated prior to executing the DML script.</p>
</div>
</div>
</li>
<li class="stepexpand"><span>Perform initial load of the SDS tables: execute procedure to generate DML script.</span>
<div>
<p>This DML script generation procedure requires that the ODI topology is set up correctly, ensuring the OLTP model logical schema DSN matches with the desired target warehouse SDS physical schema DSN. The DSNs are set in the logical or physical schema flexfields.</p>
<p>In ODI Designer, execute the COPY_OLTP_TO_SDS scenario found under BI Apps Project &gt; Components &gt; SDS &gt; Oracle &gt; Copy OLTP to SDS.</p>
<p>To execute the scenario, right-click it and select Execute. Provide an appropriate context when prompted. When the scenario is executed, a prompt appears to provide values for the DML execution options. Refer to the following table describing the options to provide appropriate values.</p>
<div class="tblformal" id="GUID-6BAF081E-3ADE-44DF-9AF4-9B3787AEBBF1__GUID-FC81B80A-E068-4FF1-9CD0-4E56064113B8">
<table class="cellalignment258" summary="List of options for DML execution.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment263" id="d11022e976">Option</th>
<th class="cellalignment264" id="d11022e978">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e982" headers="d11022e976">
<p>TABLE_LIST</p>
</td>
<td class="cellalignment266" headers="d11022e982 d11022e978">
<p>A comma-separated list of tables. A wildcard match % may be used to match multiple tables. Do not include any line breaks.</p>
<p>For example:</p>
<p>PER_ALL_ASSIGNMENTS_F,PER%ORG%INFO%,HR%UNIT,FND_LOOKUP_TYPES</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e993" headers="d11022e976">
<p>CREATE_SCRIPT_FILE</p>
</td>
<td class="cellalignment266" headers="d11022e993 d11022e978">
<p>Y or N. Set to <span class="bold">Y</span> if you want to review the DDL or manually execute the script.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e1003" headers="d11022e976">
<p>RUN_DDL</p>
</td>
<td class="cellalignment266" headers="d11022e1003 d11022e978">
<p>Y or N. Whether to execute the DML commands. The script will be executed against the physical SDS schema associated with the SDS_MODEL. Note that this script will be executed via the user defined in the BIAPPS_DW physical server which is usually the owner of the BIAPPS_DW schema and which may not have appropriate privileges to insert data into tables in another schema. To have the utility execute the DDL script, you may need to grant <code class="codeph">SELECT ANY TABLE</code> and <code class="codeph">INSERT ANY TABLE</code> to the BIAPPS_DW database user.</p>
<p>Alternatively, rather than have the procedure execute the script, create the script file and connect to the database as the SDS schema owner and execute the contents of the script file directly.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e1018" headers="d11022e976">
<p>SDS_MODEL</p>
</td>
<td class="cellalignment266" headers="d11022e1018 d11022e978">
<p>The OLTP model to be used to generate the SDS schema.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment265" id="d11022e1025" headers="d11022e976">
<p>SCRIPT_LOCATION</p>
</td>
<td class="cellalignment266" headers="d11022e1025 d11022e978">
<p>The location where the script should be created if the CREATE_SCRIPT_FILE option is true.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</li>
<li class="stepexpand"><span>Perform initial load of the SDS tables: execute DML script on SDS database.</span>
<div>
<p>The resulting DML script can be executed using the SDS schema owner or the BIAPPS DW schema owner. If executed by the BIAPPS DW schema owner, this user must be granted the <code class="codeph">SELECT ANY TABLE</code> and <code class="codeph">INSERT ANY TABLE</code> privileges in order to populate data in another schema. If executed using the SDS schema owner, a private database link named "DW_TO_OLTP" must be created in the SDS schema (the SDS user must be granted the <code class="codeph">CREATE DATABASE LINK</code> privilege to create this database link) or already created as a public database link.</p>
<p>The DML script that is generated includes all tables used by all ETL tasks. If you are not executing all ETL tasks, you may want to consider identifying the tasks you are not executing and removing the corresponding tables from this script so that they are not replicated, thus keeping the overall size of the SDS down. Refer to the parameter files to determine the tasks that use each table and edit this script to remove the tables you do not need to replicate.</p>
</div>
</li>
<li class="stepexpand"><span>Create SDS indexes and analyze the SDS schema.</span>
<div>
<p>When the tables are populated, execute the <code>BIA_SDS_Schema_Index_DDL_<span class="variable">unique ID</span>.sql</code> script to create indexes and analyze the SDS tables.</p>
</div>
</li>
</ol>
</div>
</div>
<a id="BIASA24779"></a><a id="BIASA24780"></a><a id="BIASA24651"></a><a id="BIASA24652"></a><a id="BIASA24653"></a><a id="BIASA24783"></a><a id="BIASA24784"></a><a id="BIASA24777"></a>
<div class="sect2"><a id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF"></a>
<h2 id="BIASA-GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF" class="sect2">Setup Step: Generate and Deploy <span>Oracle GoldenGate</span> Parameter Files to Source and Target Systems</h2>
<div>
<p>Parameter files are used to control how <span>Oracle GoldenGate</span> operates. These files are deployed to the source system, where the Extract and Data Pump processes are executed, and the target system, where the Replicat process is executed.</p>
<div class="section">
<p>An ODI procedure generates these parameter files based on the metadata defined in ODI. A scenario that executes this procedure is provided to generate the <span>Oracle GoldenGate</span> parameter files to populate the SDS.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-DF98C739-6A1C-4C4B-B316-346BE65888AA">Generate <span>Oracle GoldenGate</span>Parameter Files</p>
<p>To generate the required parameter files, execute the 'GENERATE_SDS_OGG_PARAM_FILES' scenario found under <span class="bold">BI Apps Project</span>, <span class="bold">Components</span>, <span class="bold">SDS</span>, then <span class="bold">Generate SDS OGG Param Files</span>. When the scenario is executed, a prompt appears to provide values for the parameter file options. Refer to the following table describing the options to provide appropriate values to match your environment. As the procedure can only accept a single Source type, this process needs to be repeated for each different type of Source system to be enabled.</p>
<div class="tblformal" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-5F1CBC6E-1031-4540-8B1E-25830213BA95">
<table class="cellalignment244" summary="This table lists the options to provide appropriate values to match your environment.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment245" id="d11022e1135">Parameter</th>
<th class="cellalignment246" id="d11022e1137">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1141" headers="d11022e1135">
<p>PARAM_FILE_LOCATION</p>
</td>
<td class="cellalignment248" headers="d11022e1141 d11022e1137">
<p>Location on machine where ODI client is running where parameter files will be created. Example: <code>C:\temp\</code></p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1150" headers="d11022e1135">
<p>DATASOURCE_NUM_ID</p>
</td>
<td class="cellalignment248" headers="d11022e1150 d11022e1137">
<p>Datasource Num ID value associated with the particular source for which parameter files are to be generated. Example: 310</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1157" headers="d11022e1135">
<p>DATAPUMP_NAME</p>
</td>
<td class="cellalignment248" headers="d11022e1157 d11022e1137">
<p>Name of the Datapump Process specified when installing <span>Oracle GoldenGate</span> on the source machine. Limit is eight characters. Suggested naming convention is DP_<span class="variable">Datasource Num Id</span>, for example DP_310.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1170" headers="d11022e1135">
<p>EXTRACT_NAME</p>
</td>
<td class="cellalignment248" headers="d11022e1170 d11022e1137">
<p>Name of the Primary Extract Process specified when installing <span>Oracle GoldenGate</span> on the source machine. Limit is eight characters. Suggested naming convention is EX_<span class="variable">Datasource Num Id</span>, for example EXT_310.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1183" headers="d11022e1135">
<p>EXTRACT_TRAIL</p>
</td>
<td class="cellalignment248" headers="d11022e1183 d11022e1137">
<p>Path and name of trail file on source system. Can be a relative or fully qualified path, though actual file name must be two characters. In the example below, 'tr' is the name of the trail file.</p>
<p>Example: <code>./dirdat/tr</code></p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1194" headers="d11022e1135">
<p>DEFSFILE</p>
</td>
<td class="cellalignment248" headers="d11022e1194 d11022e1137">
<p>The relative or fully qualified path on the source system where the DEFGEN definition file should be created and file name. This value is included in the DEFGEN.prm parameter file that is generated by this procedure. The DEFGEN utility is executed on the source database, so the path provided must be a path available on the system the source database runs on. Suggested naming convention is DEF_<span class="variable">Datasource Num Id</span>.def. Example: <code>./dirdef/DEF_310.de</code>f</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1207" headers="d11022e1135">
<p>SOURCE_GG_USER_ID</p>
</td>
<td class="cellalignment248" headers="d11022e1207 d11022e1137">
<p>Database user dedicated to the Oracle GoldenGate processes on the source database. Example: GG_USER</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1214" headers="d11022e1135">
<p>SOURCE_GG_PASSWORD</p>
</td>
<td class="cellalignment248" headers="d11022e1214 d11022e1137">
<p>Password for the database user dedicated to the <span>Oracle GoldenGate</span> processes on the source database.</p>
<p>By default, the password is stored as clear text in the generated parameter file. If an encrypted value is desired, use the ENCRYPT PASSWORD utility and edit the generated parameter files accordingly. Example: GG_PASSWORD</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1228" headers="d11022e1135">
<p>SOURCE_PORT</p>
</td>
<td class="cellalignment248" headers="d11022e1228 d11022e1137">
<p>Port used by the <span>Oracle GoldenGate</span> Manager Process on the source system. The default value when <span>Oracle GoldenGate</span> is installed is 7809.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1241" headers="d11022e1135">
<p>REPLICAT_NAME</p>
</td>
<td class="cellalignment248" headers="d11022e1241 d11022e1137">
<p>Name of the Replicat Process specified when installing <span>Oracle GoldenGate</span> on the target machine. Limit is eight characters. Suggested naming convention is REP_<span class="variable">Datasource Num Id</span>, for example REP_310</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1254" headers="d11022e1135">
<p>SOURCE_DEF</p>
</td>
<td class="cellalignment248" headers="d11022e1254 d11022e1137">
<p>This is the Source Definitions file created by executing the DEFGEN utility on the source database and copied over to the target machine. This can be either a relative or fully qualified path to this definition file on the target system. Include the /dirdef subfolder as part of the path. Suggested naming convention is DEF_<span class="variable">Datasource Num Id</span>.def, for example ./dirdef/DEF_310.def</p>
<p>Note that the file name is usually the same as the one defined for DEFSFILE but the paths are usually different as DEFSFILE includes the path where <span>Oracle GoldenGate</span> is stored on the source system, while SOURCE_DEFS includes the path where <span>Oracle GoldenGate</span> is installed on the target system.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1273" headers="d11022e1135">
<p>REMOTE_HOST</p>
</td>
<td class="cellalignment248" headers="d11022e1273 d11022e1137">
<p>IP address or Host Name of the target machine where the Replicat process runs.</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1280" headers="d11022e1135">
<p>REMOTE_TRAIL</p>
</td>
<td class="cellalignment248" headers="d11022e1280 d11022e1137">
<p>Path and name of the trail file on target system. Can be a relative or fully qualified path though the actual file name must be two characters. In the example below, 'tr' is the name of the trail file.</p>
<p>Example: <code>./dirdat/tr</code></p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1291" headers="d11022e1135">
<p>BIA_GG_USER_ID</p>
</td>
<td class="cellalignment248" headers="d11022e1291 d11022e1137">
<p>Database user dedicated to the <span>Oracle GoldenGate</span> processes on the target database, for example GG_USER</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1301" headers="d11022e1135">
<p>BIA_GG_PASSWORD</p>
</td>
<td class="cellalignment248" headers="d11022e1301 d11022e1137">
<p>Password for the database user dedicated to the <span>Oracle GoldenGate</span> processes on the target database.</p>
<p>By default, the password is stored as clear text in the generated parameter file. If an encrypted value is desired, use the ENCRYPT PASSWORD utility and edit the generated parameter files accordingly. Example: GG_PASSWORD</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment247" id="d11022e1313" headers="d11022e1135">
<p>BIA_GG_PORT</p>
</td>
<td class="cellalignment248" headers="d11022e1313 d11022e1137">
<p>Port used by the <span>Oracle GoldenGate</span> Manager Process on the target system. The default value when <span>Oracle GoldenGate</span> is installed is 7809.</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" -->
<p>The procedure automatically creates subfolders under a folder you specify. The naming convention is DSN_<span class="variable">DATASOURCE_NUM_ID</span> where <span class="variable">DATASOURCE_NUM_ID</span> is the value you specify when executing this procedure. For example, if you specify 310 as the value for DATASOURCE_NUM_ID, there will be a folder named DSN_310. Under this folder are two more subfolders, 'source' and 'target'. The 'source' folder contains all of the files that need to be copied to the source system, while 'target' contains all of the files that need to be copied to the target system.</p>
<div class="infobox-tip" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-BEF5FCAC-D45E-4423-A2F7-19FC3E2D2AF1">
<p class="notep1">Tip:</p>
<p>The parameter files that are generated include all tables used by all ETL references. The reference that uses the table is identified in the parameter file. If you are not executing all ETL references, you may want to consider identifying the references you are not executing and removing the corresponding tables from the parameter files so that they are not replicated. This keeps the overall size of the SDS down.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-1DA69554-22D9-45A7-8245-6D372163231E">About JD Edwards Support</p>
<p>The JDE application spreads data across up to four databases. Each database instance must be assigned its own extract/datapump processes and a separate corresponding replicat process. If the JDE components are on a single database, generate a single set of parameter files. If the JDE components are spread across two, three or four databases, generate a corresponding number of parameter files.</p>
<p>Keep the following in mind when generating the parameter files. Execute the procedure for each database instance. The name of each process and trail file should be unique. The following example assumes all four components are on different databases:</p>
<div class="tblformalwide" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-9FB8FA9B-AAA3-4620-9B31-C4B90B0D1B65">
<table class="cellalignment267" summary="Component details for JD Edwards parameter files.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment260" id="d11022e1357">Component</th>
<th class="cellalignment268" id="d11022e1359">Extract Name</th>
<th class="cellalignment268" id="d11022e1361">Data Pump Name</th>
<th class="cellalignment268" id="d11022e1363">Extract Trail</th>
<th class="cellalignment269" id="d11022e1365">Defs File</th>
<th class="cellalignment268" id="d11022e1367">Replicat Name</th>
<th class="cellalignment268" id="d11022e1369">Replicat Trail</th>
<th class="cellalignment269" id="d11022e1371">Source Defs</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment262" id="d11022e1375" headers="d11022e1357">
<p>Control</p>
</td>
<td class="cellalignment270" headers="d11022e1375 d11022e1359">
<p>EX_410A</p>
</td>
<td class="cellalignment270" headers="d11022e1375 d11022e1361">
<p>DP_410A</p>
</td>
<td class="cellalignment270" headers="d11022e1375 d11022e1363">
<p>./dirdat/ta</p>
</td>
<td class="cellalignment271" headers="d11022e1375 d11022e1365">
<p>./dirdef/DEF_310A.def</p>
</td>
<td class="cellalignment270" headers="d11022e1375 d11022e1367">
<p>REP_410A</p>
</td>
<td class="cellalignment270" headers="d11022e1375 d11022e1369">
<p>./dirdat/ta</p>
</td>
<td class="cellalignment271" headers="d11022e1375 d11022e1371">
<p>./dirdef/DEF_310A.def</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment262" id="d11022e1400" headers="d11022e1357">
<p>Data</p>
</td>
<td class="cellalignment270" headers="d11022e1400 d11022e1359">
<p>EX_410B</p>
</td>
<td class="cellalignment270" headers="d11022e1400 d11022e1361">
<p>DP_410B</p>
</td>
<td class="cellalignment270" headers="d11022e1400 d11022e1363">
<p>./dirdat/tb</p>
</td>
<td class="cellalignment271" headers="d11022e1400 d11022e1365">
<p>./dirdef/DEF_310B.def</p>
</td>
<td class="cellalignment270" headers="d11022e1400 d11022e1367">
<p>REP_410B</p>
</td>
<td class="cellalignment270" headers="d11022e1400 d11022e1369">
<p>./dirdat/tb</p>
</td>
<td class="cellalignment271" headers="d11022e1400 d11022e1371">
<p>./dirdef/DEF_310B.def</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment262" id="d11022e1425" headers="d11022e1357">
<p>Data Dictionary</p>
</td>
<td class="cellalignment270" headers="d11022e1425 d11022e1359">
<p>EX_410C</p>
</td>
<td class="cellalignment270" headers="d11022e1425 d11022e1361">
<p>DP_410C</p>
</td>
<td class="cellalignment270" headers="d11022e1425 d11022e1363">
<p>./dirdat/tc</p>
</td>
<td class="cellalignment271" headers="d11022e1425 d11022e1365">
<p>./dirdef/DEF_310C.def</p>
</td>
<td class="cellalignment270" headers="d11022e1425 d11022e1367">
<p>REP_410C</p>
</td>
<td class="cellalignment270" headers="d11022e1425 d11022e1369">
<p>./dirdat/tc</p>
</td>
<td class="cellalignment271" headers="d11022e1425 d11022e1371">
<p>./dirdef/DEF_310C.def</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment262" id="d11022e1450" headers="d11022e1357">
<p>System</p>
</td>
<td class="cellalignment270" headers="d11022e1450 d11022e1359">
<p>EX_410D</p>
</td>
<td class="cellalignment270" headers="d11022e1450 d11022e1361">
<p>DP_410D</p>
</td>
<td class="cellalignment270" headers="d11022e1450 d11022e1363">
<p>./dirdat/td</p>
</td>
<td class="cellalignment271" headers="d11022e1450 d11022e1365">
<p>./dirdef/DEF_310D.def</p>
</td>
<td class="cellalignment270" headers="d11022e1450 d11022e1367">
<p>REP_410D</p>
</td>
<td class="cellalignment270" headers="d11022e1450 d11022e1369">
<p>./dirdat/td</p>
</td>
<td class="cellalignment271" headers="d11022e1450 d11022e1371">
<p>./dirdef/DEF_310D.def</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-5EECF521-F923-4455-9AB1-D96399EBDE0A">About PeopleSoft Learning Management Support</p>
<p>PeopleSoft has a Learning Management pillar which is tightly integrated with the Human Capital Management pillar. HCM can be deployed without LM but LM cannot be deployed without HCM. When both are deployed, BI Applications treats the HCM with LM pillars in a similar fashion as it treats JDE: the data is spread across two databases but is treated as a single application. As with the JDE application, in this configuration each database instance must be assigned its own extract/datapump processes and a separate corresponding replicat process.</p>
<p>Keep the following in mind when generating the parameter files.Execute the procedure for each database instance. The name of each process and trail file should be unique.</p>
<div class="tblformalwide" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-8E9D08F4-6DE5-4F9E-8A79-A9191D3DDE1F">
<table class="cellalignment267" summary="Component details for PeopleSoft Learning Management parameter files.">
<thead>
<tr class="cellalignment238">
<th class="cellalignment260" id="d11022e1495">Component</th>
<th class="cellalignment268" id="d11022e1497">Extract Name</th>
<th class="cellalignment268" id="d11022e1499">Data Pump Name</th>
<th class="cellalignment268" id="d11022e1501">Extract Trail</th>
<th class="cellalignment269" id="d11022e1503">Defs File</th>
<th class="cellalignment268" id="d11022e1505">Replicat Name</th>
<th class="cellalignment268" id="d11022e1507">Replicat Trail</th>
<th class="cellalignment269" id="d11022e1509">Source Defs</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment238">
<td class="cellalignment262" id="d11022e1513" headers="d11022e1495">
<p>HCM Pillar</p>
</td>
<td class="cellalignment270" headers="d11022e1513 d11022e1497">
<p>EX_518A</p>
</td>
<td class="cellalignment270" headers="d11022e1513 d11022e1499">
<p>DP_518A</p>
</td>
<td class="cellalignment270" headers="d11022e1513 d11022e1501">
<p>./dirdat/ta</p>
</td>
<td class="cellalignment271" headers="d11022e1513 d11022e1503">
<p>./dirdef/DEF_518A.def</p>
</td>
<td class="cellalignment270" headers="d11022e1513 d11022e1505">
<p>REP_518A</p>
</td>
<td class="cellalignment270" headers="d11022e1513 d11022e1507">
<p>./dirdat/ta</p>
</td>
<td class="cellalignment271" headers="d11022e1513 d11022e1509">
<p>./dirdef/DEF_518A.def</p>
</td>
</tr>
<tr class="cellalignment238">
<td class="cellalignment262" id="d11022e1538" headers="d11022e1495">
<p>LM Pillar</p>
</td>
<td class="cellalignment270" headers="d11022e1538 d11022e1497">
<p>EX_518B</p>
</td>
<td class="cellalignment270" headers="d11022e1538 d11022e1499">
<p>DP_518B</p>
</td>
<td class="cellalignment270" headers="d11022e1538 d11022e1501">
<p>./dirdat/tb</p>
</td>
<td class="cellalignment271" headers="d11022e1538 d11022e1503">
<p>./dirdef/DEF_518B.def</p>
</td>
<td class="cellalignment270" headers="d11022e1538 d11022e1505">
<p>REP_518B</p>
</td>
<td class="cellalignment270" headers="d11022e1538 d11022e1507">
<p>./dirdat/tb</p>
</td>
<td class="cellalignment271" headers="d11022e1538 d11022e1509">
<p>./dirdef/DEF_518B.def</p>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-41BBCE63-1EAE-417A-B331-DB0F08BD187E">Configure the Source System</p>
<p>Copy all of the files from the 'source' directory on the ODI client to the corresponding directories in the source system:</p>
<p>Copy the following file to the &lt;ORACLE OGG HOME&gt; directory:</p>
<ul style="list-style-type: disc;">
<li>
<p>ADD_TRANDATA.txt</p>
</li>
</ul>
<p>Copy the following files to the &lt;ORACLE OGG HOME&gt;/dirprm directory:</p>
<ul style="list-style-type: disc;">
<li>
<p>DEFGEN.prm</p>
</li>
<li>
<p><span class="variable">EXTRACT_NAME</span>.prm where &lt;EXTRACT_NAME&gt; is the value specified when generating the parameter files.</p>
</li>
<li>
<p><span class="variable">DATAPUMP_NAME</span>.prm where &lt;DATAPUMP_NAME&gt; is the value specified when generating the parameter files.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-7071618B-9C3D-41B5-B082-CE9099DA4C13">Edit the Extract parameter file</p>
<p>By default, the procedure creates a basic set of parameter files that do not include support for a variety of features. For example, the parameter files do not include support for Transparent Data Encryption (TDE) or unused columns. The procedure also does not include the options to encrypt data.</p>
<p>If your source tables have unused columns, edit the Extract parameter file to include DBOPTIONS ALLOWUNUSEDCOLUMN. If encrypting the data is desired, edit the parameter files to add the ENCRYPTTRAIL and DECRYPTTRAIL options.</p>
<p>To support such features, edit the generated parameter files using the GGSCI EDIT PARAMS &lt;parameter file&gt; command. Also edit the generated param files to implement various tuning options that are specific to the environment.</p>
<p>Start the GGSCI command utility from the &lt;ORACLE OGG HOME&gt; directory. Execute the following command to edit the Extract parameter file - this should open the Extract parameter file you copied to &lt;ORACLE OGG HOME&gt;/dirprm:</p>
<pre dir="ltr">
GGSCI&gt;EDIT PARAMS &lt;EXTRACT_NAME&gt;
</pre>
<p>Save and close the file.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-D6EC7A64-D32C-4104-8F0B-59E8DC3A6C0C">Enable Table Level Logging</p>
<p>Oracle GoldenGate requires table-level supplemental logging. This level of logging is only enabled for those tables actually being replicated to the target system. The SDS Parameter file generator creates 'ADD_TRANDATA.txt' file to enable the table-level logging. This script is executed using the GGSCI command with the OGG database user. This user must be granted the <code class="codeph">ALTER ANY TABLE</code> privilege prior to executing this script. Once the script completes, this privilege can be removed. Alternatively, edit the script file to use a database user with this privilege. When the OGG database user is originally created, the <code class="codeph">ALTER ANY TABLE</code> privilege is granted at that time. Once the script to enable table level supplemental logging completes, this privilege can be revoked from the OGG user.</p>
<p>Start the GGSCI command utility from the &lt;ORACLE OGG HOME&gt; directory and execute the following command:</p>
<pre dir="ltr">
GGSCI&gt; obey ADD_TRANDATA.txt
</pre>
<p>Exit GGSCI, then connect to the database and revoke the <code class="codeph">ALTER ANY TABLE</code> privilege.</p>
<div class="infobox-note" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-B93710E9-E0A4-4EEF-AFB4-96DBD97DB987">
<p class="notep1">Note:</p>
<p>If a table does not have a primary key or any unique indexes defined, you may see a warning message like the following. This is a warning that a 'pseudo' unique key is being constructed and used by <span>Oracle GoldenGate</span> to identify a record. Performance is better if a primary key or unique index is available to identify a record but as we generally cannot add such constraints to an OLTP table when they do not already exists, <span>Oracle GoldenGate</span> creates this pseudo unique key.</p>
<p>WARNING OGG-00869 No unique key is defined for table 'FA_ASSET_HISTORY'. All viable columns will be used to represent the key, but may not guarantee uniqueness. KEYCOLS may be used to define the key.</p>
</div>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-C7D3DF9E-1CF8-4D22-A501-1DFBC55BE2B7">Generate Data Definition File on the Source System</p>
<p>As the source and target tables do not match exactly, configure the Replicat process to use a data definition file which contains definitions of the tables on the source system required to map and convert data. The procedure generates a basic DEFGEN.prm file used to create a data definition file. If required, edit this file to reflect your environment. For example, the DEFGEN.prm file does not leverage the encryption option, so if this or other options are desired, edit the parameter file to enable them.</p>
<p>To edit the DEFGEN.prm file, start the GGSCI command utility from the <span>Oracle GoldenGate</span> home directory. Execute the following command to open and edit the DEFGEN.prm file you copied to &lt;ORACLE OGG HOME&gt;/dirprm:</p>
<pre dir="ltr">
GGSCI&gt;EDIT PARAMS DEFGEN
</pre>
<p>Save and close the file and exit GGSCI, then run the DEFGEN utility. The following is an example of executing this command on UNIX:</p>
<pre dir="ltr">
defgen paramfile dirprm/defgen.prm
</pre>
<p>A data definition file is created in the <code><span class="variable">ORACLE OGG HOME</span>/</code> folder with the path and name specified using the DEFSFILE parameter. FTP the data definition file to the <code><span class="variable">ORACLE OGG HOME</span>/dirdef</code> folder on the remote system using ASCII mode. Use BINARY mode to FTP the data definitions file to the remote system if the local and remote operating systems are different and the definitions file is created for the remote operating system character set.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-BA25D8BF-E97B-4E1F-93F8-DB2B204F3EED">Configure the Target System</p>
<p>Copy all of the files from the 'target' directory on the ODI client to the corresponding directories in the target system.</p>
<p>Copy the following file to the &lt;ORACLE OGG HOME&gt;/dirprm directory in the target system:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="variable">REPLICAT_NAME</span>.prm where &lt;REPLICAT_NAME&gt; is the value specified when generating the parameter files.</p>
</li>
</ul>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-047CE181-5045-42D8-A520-81A2E90BE54C">Edit the Replicat Parameter File</p>
<p>By default, the procedure creates a basic set of parameter files that do not include support for a variety of features. For example, the parameter files do not include support for Transparent Data Encryption (TDE) or unused columns. The procedure also does not include the options to encrypt data.If encrypting the data is desired, edit the generated parameter files to add the ENCRYPTTRAIL and DECRYPTTRAIL options. To support such features, edit the generated parameter files using the GGSCI EDIT PARAMS <span class="variable">parameter file</span> command. Also edit the generated param files to implement various tuning options that are specific to the environment.</p>
<p>Start the GGSCI command utility from the &lt;ORACLE OGG HOME&gt; directory. Execute the following command to edit the Extract parameter file. This should open the Replicat parameter file - this should open the Replicat parameter file you copied to <code><span class="variable">ORACLE OGG HOME</span>/dirprm</code>:</p>
<pre dir="ltr">
GGSCI&gt;EDIT PARAMS &lt;REPLICAT_NAME&gt;
</pre>
<p>Save and close the file, and exit GGSCI.</p>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead2" id="GUID-D5FE7DDB-E9DB-43A6-9D53-C2C7D8C1BCFF__GUID-8C593D21-40CF-4D7E-ABEE-7DEF1B8E6466">Create a Checkpoint Table (Optional)</p>
<p>The procedure does not account for a checkpoint table in the target system. A checkpoint table is not required but is recommended; in which case, create a checkpoint table and edit the GLOBALS param file to reference this table.</p>
<p>Start the GGSCI command utility:</p>
<pre dir="ltr">
GGSCI&gt; EDIT PARAMS ./GLOBALS 
CHECKPOINTTABLE &lt;OGG User&gt;.&lt;<span class="italic">Table Name</span>&gt; 
</pre>
<p>Save and close the file, then run the following commands:</p>
<pre dir="ltr">
GGSCI&gt; DBLOGIN USERID &lt;OGG User&gt; PASSWORD &lt;OGG Password&gt;GGSCI&gt; ADD CHECKPOINTTABLE &lt;OGG User&gt;.&lt;Table Name&gt; 
</pre></div>
<!-- class="section" --></div>
</div>
<a id="BIASA24658"></a><a id="BIASA24659"></a><a id="BIASA24785"></a>
<div class="sect2"><a id="GUID-21C187A0-6862-4A41-9853-2F37C0339D5F"></a>
<h2 id="BIASA-GUID-21C187A0-6862-4A41-9853-2F37C0339D5F" class="sect2">Setup Step: Start <span>Oracle GoldenGate</span> on Source and Target Systems</h2>
<div>
<p>Start <span>Oracle GoldenGate</span> on source and target systems.</p>
<div class="section"></div>
<!-- class="section" -->
<ol>
<li class="stepexpand"><span>Start <span>Oracle GoldenGate</span> on the source system.</span>
<div>
<p>Use the following command to start the Extract and Data Pump processes on the source system.</p>
<pre dir="ltr">
START MGR
--Start capture on primary database
START &lt;<span class="italic">name of Extract process</span>&gt;

--Start pump on primary database
START &lt;<span class="italic">name of Data Pump process</span>&gt;
</pre>
<p>Example:</p>
<pre dir="ltr">
START MGR
--Start capture on primary database
START EXT_310

--Start pump on primary database
START DP_310
</pre></div>
</li>
<li class="stepexpand"><span>Start <span>Oracle GoldenGate</span> on the target system.</span>
<div>
<p>Use the following command to start the Replicat process in the target system.</p>
<pre dir="ltr">
START MGR
--Start delivery on target database
START &lt;<span class="italic">name of Replicat process</span>&gt;
</pre>
<p>Example:</p>
<pre dir="ltr">
START MGR

--Start capture on primary database
START REP_310
</pre></div>
</li>
</ol>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment237">
<tr>
<td class="cellalignment251">
<table class="cellalignment242">
<tr>
<td class="cellalignment241"><a href="GUID-01DE67C0-52A8-4F63-83D5-6C1A66349D9B.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment241"><a href="GUID-1A0EA88B-88FF-4580-BF38-9DFBB0CBD6A9.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2014, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment253">
<table class="cellalignment240">
<tr>
<td class="cellalignment241"><a href="../index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment241"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment241"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
