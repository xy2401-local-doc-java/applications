
{
    "info":{
        "description":"<div><em><span><span style=\"color: #FF0000;\">This REST API document applies to Release 12.<br>\nPrevious version:</span> <span style=\"color: #226aa8;\"></span><a class=\"xref\" href=\"http://docs.oracle.com/cloud/farel11/projectcs_gs/FAPAP\">Release 11</a> </span></em><br>\n<br> \n<p>\nOracle Project Portfolio Management Cloud delivers REST APIs to facilitate integration with third-party applications. For example, using these REST APIs project administrators can easily update and maintain projects.\n<p>\n</div>",
        "version":"2017.03.06",
        "title":"REST API for Oracle Project Portfolio Management Cloud Release 12",
        "x-summary":"This REST API document applies to Release 12."
    },
    "definitions":{
        "collectionQuery":{
            "properties":{
                "dependency":{
                    "type":"string",
                    "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                },
                "expand":{
                    "type":"string",
                    "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers)."
                },
                "fields":{
                    "type":"string",
                    "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2"
                },
                "finder":{
                    "type":"string",
                    "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findProgressByProjectIdAndDate: Finds the published progress of the specified project till the specified date. Finder Variables:<ul><li>ProgressAsOfDate; string; Date through which progress is determined for the project.</li><li>ProjectId; integer; The unique identifier of the project.</li></ul></li><li>findDraftProgressByProjectId: Finds the draft progress of  the specified project. Finder Variables:<ul><li>ProjectId; integer; The unique identifier of the project.</li></ul></li><li>findProgressBySourceReference: Finds the draft project progress for the specified source project reference and application code. Finder Variables:<ul><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li><li>SourceApplicationCode; string; The third-party application from which the project originates.</li><li>SourceProjectReference; string; The identifier of the project in the external system where it was originally entered.</li></ul></li><li>findProgressByProjectId: Finds the draft or published progress of the specified project ID. Finder Variables:<ul><li>ProjectId; integer; The unique identifier of the project.</li><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li></ul></li><li>findProgressByProjectName: Finds the draft or published progress of the specified project name. Finder Variables:<ul><li>ProjectName; string; The name of the project being queried.</li><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li></ul></li><li>findProgressByProjectNumber: Finds the draft or published progress of the specified project number. Finder Variables:<ul><li>ProjectNumber; string; Number of the project that is being queried.</li><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li></ul></li></ul>"
                },
                "limit":{
                    "type":"integer",
                    "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                },
                "offset":{
                    "type":"integer",
                    "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                },
                "onlyData":{
                    "type":"boolean",
                    "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                },
                "orderBy":{
                    "type":"string",
                    "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                },
                "q":{
                    "type":"string",
                    "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2"
                },
                "totalResults":{
                    "type":"boolean",
                    "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                }
            },
            "type":"object"
        },
        "link":{
            "properties":{
                "href":{
                    "type":"string",
                    "description":"The URI to the related resource.",
                    "title":"hyperlink reference"
                },
                "rel":{
                    "type":"string",
                    "description":"The name of the relation to the resource instance.  Example: self.",
                    "title":"relation"
                }
            },
            "type":"object"
        },
        "projects":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-ProjectCustomers":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-ProjectCustomers-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-ProjectCustomers-item":{
            "properties":{
                "PartyId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project customer party.",
                    "title":"Customer Party ID"
                },
                "PartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of a person or group of persons who constitute the project customer.",
                    "title":"Customer Party Name"
                },
                "PartyNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Unique number of a person or group of persons who constitute the project customer.",
                    "title":"Customer Party Number"
                },
                "ProjectId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project.",
                    "title":"Project ID"
                },
                "ProjectPartyId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of a party assignment to the project.",
                    "title":"Project Party ID"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "projects-ProjectOpportunities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-ProjectOpportunities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-ProjectOpportunities-item":{
            "properties":{
                "OpportunityAltNumber":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Unique identifier of the opportunity that is created in third-party application.",
                    "title":"External Opportunity ID"
                },
                "OpportunityAmount":{
                    "type":"number",
                    "description":"Total amount of a customer deal in the opportunity management application.",
                    "title":"Opportunity Deal Amount"
                },
                "OpportunityCurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Currency code of the deal amount for the opportunity.",
                    "title":"Opportunity Currency Code"
                },
                "OpportunityCustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the customer with whom the deal is made for the project.",
                    "title":"Opportunity Customer ID"
                },
                "OpportunityCustomerName":{
                    "maxLength":900,
                    "type":"string",
                    "description":"Name of the customer with whom the deal is made for the project.",
                    "title":"Opportunity Project Customer Name"
                },
                "OpportunityCustomerNumber":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Customer number in the opportunity management application.",
                    "title":"Opportunity Project Customer Number"
                },
                "OpportunityDescription":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Description of the opportunity that the project is associated with.",
                    "title":"Opportunity Description"
                },
                "OpportunityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the opportunity associated with the project.",
                    "title":"Opportunity ID"
                },
                "OpportunityName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the opportunity that the project is associated with.",
                    "title":"Opportunity Name"
                },
                "OpportunityNumber":{
                    "maxLength":240,
                    "type":"string",
                    "description":"The public unique identifier for an opportunity in the opportunity management application.",
                    "title":"Opportunity Number"
                },
                "OpportunityStatus":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Status of an opportunity in the opportunity management application.",
                    "title":"Opportunity Status"
                },
                "OpportunityWinConfPercent":{
                    "type":"number",
                    "description":"Percentage probability of winning an opportunity in the opportunity management application.",
                    "title":"Opportunity Win Probability Percentage"
                },
                "ProjectId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project.",
                    "title":"Project ID"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "projects-ProjectTeamMembers":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-ProjectTeamMembers-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-ProjectTeamMembers-item":{
            "properties":{
                "FinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which the assignment of the project team member to the project is scheduled to end.",
                    "title":"Team Member End Date"
                },
                "PersonEmail":{
                    "maxLength":240,
                    "type":"string",
                    "description":"E-mail of the person who is assigned as a team member to the project.",
                    "title":"Team Member E-Mail"
                },
                "PersonName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the team member assigned to the project.",
                    "title":"Team Member Name"
                },
                "ProjectId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project.",
                    "title":"Project ID"
                },
                "ProjectRole":{
                    "maxLength":240,
                    "type":"string",
                    "description":"A classification of the relationship that an employee has to a project. You use project roles to define an employee's level of access to project information. Examples are Project Manager, Project Accountant, and Technical Lead.",
                    "title":"Project Role"
                },
                "StartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date from which the assignment of the team member to the project is scheduled to begin.",
                    "title":"Team Member Start Date"
                },
                "TeamMemberId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the team member assigned to the project.",
                    "title":"Team Member ID"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "projects-Tasks":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-Tasks-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-Tasks-ExpenseResourceAssignments":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-Tasks-ExpenseResourceAssignments-item":{
            "properties":{
                "ExpenseResourceActualAmount":{
                    "type":"number",
                    "description":"Specifies the actual expense cost amount of a specific expense resource assigned to the task.",
                    "title":"Actual Amount"
                },
                "ExpenseResourceAssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the expense resource assignment to the project task.",
                    "title":"Expense Resource Assignment ID"
                },
                "ExpenseResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier of the expense resource assigned to the project task.",
                    "title":"Expense Resource ID"
                },
                "ExpenseResourceName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the expense resource assigned to the project task.",
                    "title":"Expense Resource"
                },
                "ExpenseResourcePlannedAmount":{
                    "type":"number",
                    "description":"Specifies the planned expense cost amount of a specific expense resource assigned to the task.",
                    "title":"Planned Amount"
                },
                "ExpenseResourceRemainingAmount":{
                    "type":"number",
                    "description":"The sum of remaining expense cost amounts of a specific expense resource assigned to the task.",
                    "title":"Remaining Amount"
                },
                "ProjElementId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier of the task to which the expense resource is assigned.",
                    "title":"Task ID"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "projects-Tasks-LaborResourceAssignments":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projects-Tasks-LaborResourceAssignments-item":{
            "properties":{
                "LaborBilledAmount":{
                    "type":"number",
                    "description":"Specifies the labor bill amount of the task.",
                    "title":"Labor Bill Amount"
                },
                "LaborCostAmount":{
                    "type":"number",
                    "description":"Specifies the labor cost of the task.",
                    "title":"Labor Cost"
                },
                "LaborPrimaryResource":{
                    "type":"string",
                    "description":"Indicates that the resource is the primary labor resource for the project task.",
                    "title":"Primary Labor Resource ID"
                },
                "LaborResourceAssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the labor resource assignment for the project task.",
                    "title":"Labor Resource Assignment ID"
                },
                "LaborResourceEmail":{
                    "maxLength":240,
                    "type":"string",
                    "description":"E-mail address of the labor resource assigned to the task. Required if the resource type is Labor.",
                    "title":"Resource E-Mail"
                },
                "LaborResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the labor resource assigned to the project task.",
                    "title":"Labor Resource ID"
                },
                "LaborResourceName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the labor resource assigned to the project task.",
                    "title":"Labor Resource Name"
                },
                "ProjElementId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier of the task to which the labor resource is assigned.",
                    "title":"Task ID"
                },
                "ResourceAllocationPercent":{
                    "type":"number",
                    "description":"Allocation percentage of the labor resource assigned to the task.",
                    "title":"Labor Resource Allocation"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "projects-Tasks-item":{
            "properties":{
                "BillableFlag":{
                    "type":"boolean",
                    "description":"Indicates that transactions charged to that task can be billed to customers.",
                    "title":"Billable"
                },
                "ChargeableFlag":{
                    "type":"boolean",
                    "description":"Indicates that something is eligible to be charged to a task.",
                    "title":"Chargeable"
                },
                "CriticalFlag":{
                    "type":"boolean",
                    "description":"A task that must be completed on schedule or it will impact the finish date of the entire project.",
                    "title":"Critical"
                },
                "ElementType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Title for the exposed attribute for element type task attributes in OTBI.",
                    "title":"Element Type"
                },
                "ExpenseResourceAssignments":{
                    "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments",
                    "description":"An object that includes the attributes that are used to store values while creating or updating expense resource assignments for a project task. For example, hotel expenses can be planned on a project task.",
                    "title":"Expense Resource Assignments"
                },
                "ExternalParentTaskId":{
                    "maxLength":100,
                    "type":"string",
                    "description":"Unique identifier of the parent project task that is created in the third-party application.",
                    "title":"External Parent Task ID"
                },
                "ExternalTaskId":{
                    "maxLength":100,
                    "type":"string",
                    "description":"Unique identifier of the project task that is created in the third-party application.",
                    "title":"External Task ID"
                },
                "LaborResourceAssignments":{
                    "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments",
                    "description":"An object that includes the attributes that are used to store values while creating or updating labor resource assignments for a project task. For example, a DBA can be assigned as labor resource for a project task.",
                    "title":"Labor Resource Assignments"
                },
                "MilestoneFlag":{
                    "type":"boolean",
                    "description":"Indicates the project milestone during which the task must be completed.",
                    "title":"Milestone Indicator"
                },
                "TaskActualFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"The actual finish date for the task as opposed to a planned finish date for the task.",
                    "title":"Actual Finish Date"
                },
                "TaskActualStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"The date that work commenced on a task as opposed to the planned start date for the task.",
                    "title":"Actual Start Date"
                },
                "TaskCode01Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 1"
                },
                "TaskCode02Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 2"
                },
                "TaskCode03Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 3"
                },
                "TaskCode04Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 4"
                },
                "TaskCode05Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 5"
                },
                "TaskCode06Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 6"
                },
                "TaskCode07Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 7"
                },
                "TaskCode08Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 8"
                },
                "TaskCode09Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 9"
                },
                "TaskCode10Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 10"
                },
                "TaskCode11Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 11"
                },
                "TaskCode12Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 12"
                },
                "TaskCode13Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 13"
                },
                "TaskCode14Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 14"
                },
                "TaskCode15Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 15"
                },
                "TaskCode16Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 16"
                },
                "TaskCode17Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 17"
                },
                "TaskCode18Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 18"
                },
                "TaskCode19Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 19"
                },
                "TaskCode20Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 20"
                },
                "TaskCode21Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 21"
                },
                "TaskCode22Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 22"
                },
                "TaskCode23Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 23"
                },
                "TaskCode24Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 24"
                },
                "TaskCode25Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 25"
                },
                "TaskCode26Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 26"
                },
                "TaskCode27Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 27"
                },
                "TaskCode28Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 28"
                },
                "TaskCode29Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 29"
                },
                "TaskCode30Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 30"
                },
                "TaskCode31Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 31"
                },
                "TaskCode32Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 32"
                },
                "TaskCode33Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 33"
                },
                "TaskCode34Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 34"
                },
                "TaskCode35Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 35"
                },
                "TaskCode36Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 36"
                },
                "TaskCode37Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 37"
                },
                "TaskCode38Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 38"
                },
                "TaskCode39Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 39"
                },
                "TaskCode40Id":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Task code defined during implementation that provides a list of values to capture additional information for a project task.",
                    "title":"List of Values Task Code 40"
                },
                "TaskDescription":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text description of the project task that is being created.",
                    "title":"Task Description"
                },
                "TaskDuration":{
                    "type":"number",
                    "description":"Length of time within which the project task is scheduled to be completed.",
                    "title":"Task Duration"
                },
                "TaskFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Scheduled end date of the project task.",
                    "title":"Task Finish Date"
                },
                "TaskId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project task.",
                    "title":"Task ID"
                },
                "TaskManagerEmail":{
                    "maxLength":240,
                    "type":"string",
                    "description":"E-mail of the person who is assigned as task manager to the task.",
                    "title":"Task Manager E-Mail"
                },
                "TaskManagerName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"The resource who manages the task.",
                    "title":"Task Manager"
                },
                "TaskManagerPersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the person who leads the project task and who has the authority and responsibility for meeting the task objectives.",
                    "title":"Task Manager ID"
                },
                "TaskName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"The name of the task. A task is a subdivision of the project work. Each project can have a set of top tasks and a hierarchy of subtasks below each top task.",
                    "title":"Task Name"
                },
                "TaskNumberAttr01":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 1"
                },
                "TaskNumberAttr02":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 2"
                },
                "TaskNumberAttr03":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 3"
                },
                "TaskNumberAttr04":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 4"
                },
                "TaskNumberAttr05":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 5"
                },
                "TaskNumberAttr06":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 6"
                },
                "TaskNumberAttr07":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 7"
                },
                "TaskNumberAttr08":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 8"
                },
                "TaskNumberAttr09":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 9"
                },
                "TaskNumberAttr10":{
                    "type":"number",
                    "description":"Task code defined during implementation that provides the ability to capture a numeric value as additional information for a project task.",
                    "title":"Numeric Task Code 10"
                },
                "TaskPercentComplete":{
                    "type":"number",
                    "description":"Percentage of work completed for a task.",
                    "title":"Percent Complete"
                },
                "TaskPhysicalPercentComplete":{
                    "type":"number",
                    "description":"The amount of physical work achieved on a task.",
                    "title":"Physical Percent Complete"
                },
                "TaskPriority":{
                    "type":"number",
                    "description":"Indicates the importance of a project task based on a predefined scale.",
                    "title":"Task Priority"
                },
                "TaskQuantity":{
                    "type":"number",
                    "description":"Measure of the effort required to complete the project task.",
                    "title":"Task Quantity"
                },
                "TaskResourceAllocationPercent":{
                    "type":"number",
                    "description":"Percentage of hours that a resource is allocated to the project task for a specified duration.",
                    "title":"Resource Allocation Percentage"
                },
                "TaskSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Position of the project task in a hierarchical arrangement.",
                    "title":"Task Sequence"
                },
                "TaskStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Scheduled start date of the project task.",
                    "title":"Task Start Date"
                },
                "TaskTextAttr01":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 1"
                },
                "TaskTextAttr02":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 2"
                },
                "TaskTextAttr03":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 3"
                },
                "TaskTextAttr04":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 4"
                },
                "TaskTextAttr05":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 5"
                },
                "TaskTextAttr06":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 6"
                },
                "TaskTextAttr07":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 7"
                },
                "TaskTextAttr08":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 8"
                },
                "TaskTextAttr09":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 9"
                },
                "TaskTextAttr10":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 10"
                },
                "TaskTextAttr11":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 11"
                },
                "TaskTextAttr12":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 12"
                },
                "TaskTextAttr13":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 13"
                },
                "TaskTextAttr14":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 14"
                },
                "TaskTextAttr15":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 15"
                },
                "TaskTextAttr16":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 16"
                },
                "TaskTextAttr17":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 17"
                },
                "TaskTextAttr18":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 18"
                },
                "TaskTextAttr19":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 19"
                },
                "TaskTextAttr20":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Task code defined during implementation that provides free-form text entry to capture additional information for a project task.",
                    "title":"Text Task Code 20"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "projects-item":{
            "properties":{
                "BusinessUnitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the business unit to which the project belongs.",
                    "title":"Business Unit ID"
                },
                "BusinessUnitName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the business unit to which the project belongs.",
                    "title":"Business Unit"
                },
                "ExternalProjectId":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Unique identifier of the project that is created in the third-party application.",
                    "title":"External Project ID"
                },
                "HoursPerDay":{
                    "type":"number",
                    "description":"Number of hours that a resource works on the project in a day.",
                    "title":"Hours per Day"
                },
                "LegalEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the legal entity associated with the project.",
                    "title":"Legal Entity ID"
                },
                "LegalEntityName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the legal entity associated with the project.",
                    "title":"Legal Entity"
                },
                "NumberAttr01":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 1"
                },
                "NumberAttr02":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 2"
                },
                "NumberAttr03":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 3"
                },
                "NumberAttr04":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 4"
                },
                "NumberAttr05":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 5"
                },
                "NumberAttr06":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 6"
                },
                "NumberAttr07":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 7"
                },
                "NumberAttr08":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 8"
                },
                "NumberAttr09":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 9"
                },
                "NumberAttr10":{
                    "type":"number",
                    "description":"Project code defined during implementation that provides the ability to capture a numeric value as additional information for a project.",
                    "title":"Numeric Project Code 10"
                },
                "OwningOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the organization that owns the project.",
                    "title":"Owning Organization ID"
                },
                "OwningOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"An organizing unit in the internal or external structure of the enterprise. Organization structures provide the framework for performing legal reporting, financial control, and management reporting for the project.",
                    "title":"Organization"
                },
                "ProjectCalendarId":{
                    "type":"number",
                    "description":"Unique identifier of the calendar associated to the project.",
                    "title":"Project Calendar ID"
                },
                "ProjectCalendarName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the calendar associated to the project.",
                    "title":"Project Calendar Name"
                },
                "ProjectCode01":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 1"
                },
                "ProjectCode02":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 2"
                },
                "ProjectCode03":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 3"
                },
                "ProjectCode04":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 4"
                },
                "ProjectCode05":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 5"
                },
                "ProjectCode06":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 6"
                },
                "ProjectCode07":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 7"
                },
                "ProjectCode08":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 8"
                },
                "ProjectCode09":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 9"
                },
                "ProjectCode10":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 10"
                },
                "ProjectCode11":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 11"
                },
                "ProjectCode12":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 12"
                },
                "ProjectCode13":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 13"
                },
                "ProjectCode14":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 14"
                },
                "ProjectCode15":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 15"
                },
                "ProjectCode16":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 16"
                },
                "ProjectCode17":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 17"
                },
                "ProjectCode18":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 18"
                },
                "ProjectCode19":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 19"
                },
                "ProjectCode20":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 20"
                },
                "ProjectCode21":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 21"
                },
                "ProjectCode22":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 22"
                },
                "ProjectCode23":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 23"
                },
                "ProjectCode24":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 24"
                },
                "ProjectCode25":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 25"
                },
                "ProjectCode26":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 26"
                },
                "ProjectCode27":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 27"
                },
                "ProjectCode28":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 28"
                },
                "ProjectCode29":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 29"
                },
                "ProjectCode30":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 30"
                },
                "ProjectCode31":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 31"
                },
                "ProjectCode32":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 32"
                },
                "ProjectCode33":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 33"
                },
                "ProjectCode34":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 34"
                },
                "ProjectCode35":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 35"
                },
                "ProjectCode36":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 36"
                },
                "ProjectCode37":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 37"
                },
                "ProjectCode38":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 38"
                },
                "ProjectCode39":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 39"
                },
                "ProjectCode40":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Project code defined during implementation that provides a list of values to capture additional information for a project.",
                    "title":"List of Values Project Code 40"
                },
                "ProjectCurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"The currency code for the project. The currency code is a three-letter ISO code associated with a currency.",
                    "title":"Project Currency"
                },
                "ProjectCustomers":{
                    "$ref":"#/definitions/projects-ProjectCustomers",
                    "description":"An object that includes the attributes which are used to store values while creating or updating the customers for a project. This represents the name of the customer with whom an agreement has been made on the contract or project.",
                    "title":"Project Customers"
                },
                "ProjectDescription":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"A description about the project. This might include high-level information about the work being performed.",
                    "title":"Project Description"
                },
                "ProjectEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"The date that work or information tracking completes for a project.",
                    "title":"Project Finish Date"
                },
                "ProjectId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project.",
                    "title":"Project ID"
                },
                "ProjectManagerEmail":{
                    "maxLength":240,
                    "type":"string",
                    "description":"E-mail of the person who leads the project team and who has the authority and responsibility for meeting the project objectives.",
                    "title":"Project Manager E-Mail"
                },
                "ProjectManagerName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the person who leads the project team and who has the authority and responsibility for meeting project objectives.",
                    "title":"Project Manager"
                },
                "ProjectManagerResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the person who leads the project team and who has the authority and responsibility for meeting the project objectives.",
                    "title":"Project Manager ID"
                },
                "ProjectName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the project that is being created.",
                    "title":"Project Name"
                },
                "ProjectNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Number of the project that is being created.",
                    "title":"Project Number"
                },
                "ProjectOpportunities":{
                    "$ref":"#/definitions/projects-ProjectOpportunities",
                    "description":"An object that includes attributes that are used to store values while creating or updating the opportunity details for a project. An opportunity is defined as a potential revenue-generating event.",
                    "title":"Project Opportunities"
                },
                "ProjectPriorityCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Unique identifier of the importance of a project based on a predefined scale.",
                    "title":"Project Priority"
                },
                "ProjectStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"The date that work or information tracking begins on a project.",
                    "title":"Project Start Date"
                },
                "ProjectStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"An implementation-defined classification of the status of a project. Typical project statuses are Active and Closed.",
                    "title":"Project Status"
                },
                "ProjectTeamMembers":{
                    "$ref":"#/definitions/projects-ProjectTeamMembers",
                    "description":"An object that includes attributes that are used to store values while creating or updating team members on a project. A project team member is a person who is assigned a role on a project.",
                    "title":"Project Team Members"
                },
                "ProjectTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the set of project options that determine the nature of the project.",
                    "title":"Project Type ID"
                },
                "ProjectTypeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the set of project options that determine the nature of the project.",
                    "title":"Project Type"
                },
                "ProjectUnitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project unit assigned to the project.",
                    "title":"Project Unit ID"
                },
                "ProjectUnitName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the project unit assigned to the project.",
                    "title":"Project Unit"
                },
                "SourceApplicationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"The third-party application from which the project originates.",
                    "title":"Source Application"
                },
                "SourceProjectReference":{
                    "maxLength":25,
                    "type":"string",
                    "description":"The identifier of the project in the external system where it was originally entered.",
                    "title":"Source Reference"
                },
                "SourceTemplateId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the template that is used to create the project.",
                    "title":"Project Template ID"
                },
                "SourceTemplateName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"If the project was created from a template, the name of the project template that was used to create the current project.",
                    "title":"Source Template"
                },
                "Tasks":{
                    "$ref":"#/definitions/projects-Tasks",
                    "description":"The task resource includes the attributes that are used to store values while creating or updating project tasks. Tasks are units of project work assigned or performed as part of the duties of a resource. Tasks can be a portion of project work to be performed within a defined period by a specific resource or multiple resources.",
                    "title":"Tasks"
                },
                "TextAttr01":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 1"
                },
                "TextAttr02":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 2"
                },
                "TextAttr03":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 3"
                },
                "TextAttr04":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 4"
                },
                "TextAttr05":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 5"
                },
                "TextAttr06":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 6"
                },
                "TextAttr07":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 7"
                },
                "TextAttr08":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 8"
                },
                "TextAttr09":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 9"
                },
                "TextAttr10":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 10"
                },
                "TextAttr11":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 11"
                },
                "TextAttr12":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 12"
                },
                "TextAttr13":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 13"
                },
                "TextAttr14":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 14"
                },
                "TextAttr15":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 15"
                },
                "TextAttr16":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 16"
                },
                "TextAttr17":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 17"
                },
                "TextAttr18":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 18"
                },
                "TextAttr19":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 19"
                },
                "TextAttr20":{
                    "maxLength":200,
                    "type":"string",
                    "description":"Project code defined during implementation that provides free-form text entry to capture additional information for a project.",
                    "title":"Text Project Code 20"
                },
                "WorkplanTemplateId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the work plan template used for the project.",
                    "title":"Work Plan Template ID"
                },
                "WorkplanTemplateName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the work plan template used for the project.",
                    "title":"Work Plan Template"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "squery":{
            "properties":{
                "dependency":{
                    "type":"string",
                    "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                },
                "expand":{
                    "type":"string",
                    "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers)."
                },
                "fields":{
                    "type":"string",
                    "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2"
                },
                "onlyData":{
                    "type":"boolean",
                    "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                }
            },
            "type":"object"
        },
        "projectProgress":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projectProgress-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projectProgress-TaskProgress":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/projectProgress-TaskProgress-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "projectProgress-TaskProgress-item":{
            "properties":{
                "ActualAmountsDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which actual amounts are most recently summarized.",
                    "title":"Progress Actual Amounts Summarization Date"
                },
                "ActualAmountsThroughPeriod":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Period through which actual amounts are summarized for project progress.",
                    "title":"Actual Amounts Through Period"
                },
                "ActualFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which work completed on the task as opposed to the planned end date of the task.",
                    "title":"Actual Finish Date"
                },
                "ActualStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which work commenced on the task as opposed to the planned start date of the task.",
                    "title":"Actual Start Date"
                },
                "BaselineFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Planned end date of the task in baseline project plan. Used to compare the deviation of the current task end from the original planned end date.",
                    "title":"Baseline Finish Date"
                },
                "BaselineStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Planned start date of the task in baseline project plan. Used to compare the deviation of the current task start from the original planned start date.",
                    "title":"Baseline Start Date"
                },
                "CurrentActualAmountsDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which actual amounts are most recently summarized.",
                    "title":"Current Actual Amounts Summarization Date"
                },
                "CurrentActualAmountsPeriod":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Period through which actual amounts are most recently summarized.",
                    "title":"Current Actual Amount Period"
                },
                "EstimatedFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Projected end date of the task.",
                    "title":"Estimated Finish Date"
                },
                "EstimatedStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Projected start date of the task.",
                    "title":"Estimated Start Date"
                },
                "PercentComplete":{
                    "type":"number",
                    "description":"The amount of physical work achieved on the task.",
                    "title":"Physical Percent Complete"
                },
                "PlannedFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Scheduled end date of the task.",
                    "title":"Planned Finish Date"
                },
                "PlannedStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Scheduled start date of the task.",
                    "title":"Planned Start Date"
                },
                "PreviousPercentComplete":{
                    "type":"number",
                    "description":"The amount of physical work achieved on the task in the most recently captured progress.",
                    "title":"Previous Physical Percent Complete"
                },
                "ProgressAsOfDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date through which progress is captured for the project.",
                    "title":"Progress As-of Date"
                },
                "ProgressAsOfPeriod":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Period through which progress is captured for the project.",
                    "title":"Progress As-of Period"
                },
                "ProgressStatus":{
                    "type":"string",
                    "description":"Status, such as In Trouble, On Track or At Risk, that indicates the overall progress of the task.",
                    "title":"Progress Status"
                },
                "ProgressStatusCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Code of the status, such as In Trouble, On Track or At Risk, that indicates the overall progress of the task.",
                    "title":"Progress Status Code"
                },
                "ProjectBurdenedActualCost":{
                    "type":"number",
                    "description":"Cost that is actualy charged to the task in project currency. Burdened cost is the sum of raw cost and the overhead.",
                    "title":"Actual Burdened Cost in Project Currency"
                },
                "ProjectCurrency":{
                    "maxLength":15,
                    "type":"string",
                    "description":"The currency code for the project. The currency code is a three-letter ISO code associated with a currency.",
                    "title":"Project Currency"
                },
                "ProjectId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project.",
                    "title":"Project ID"
                },
                "ProjectLedgerBurdenedActualCost":{
                    "type":"number",
                    "description":"Cost that is actualy charged to the task in project ledger currency. Burdened cost is the sum of raw cost and the overhead.",
                    "title":"Actual Burdened Cost in Ledger Currency"
                },
                "ProjectLedgerCurrency":{
                    "maxLength":15,
                    "type":"string",
                    "description":"The currency code used for accounting and reporting in the project ledger. The currency code is a three-letter ISO code associated with a currency.",
                    "title":"Project Ledger Currency"
                },
                "ProjectLedgerRawActualCost":{
                    "type":"number",
                    "description":"Actual amount paid or actual amount incurred for the task in project ledger currency.",
                    "title":"Actual Raw Cost in Ledger Currency"
                },
                "ProjectName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name assigned to the project.",
                    "title":"Project Name"
                },
                "ProjectNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Alphanumeric identifier of the project.",
                    "title":"Project Number"
                },
                "ProjectRawActualCost":{
                    "type":"number",
                    "description":"Actual amount paid or actual amount incurred for the task in project currency.",
                    "title":"Actual Raw Cost in Project Currency"
                },
                "PublicationStatus":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Status of current project progress. The status can either be Draft or Published.",
                    "title":"Progress Publication Status"
                },
                "SourceApplicationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"The third-party application from which the project originated.",
                    "title":"Source Application"
                },
                "SourceProjectReference":{
                    "maxLength":25,
                    "type":"string",
                    "description":"The identifier of the project in the external application where it was originally created.",
                    "title":"Source Reference"
                },
                "TaskId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the task.",
                    "title":"Task ID"
                },
                "TaskName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name assigned to the task.",
                    "title":"Task Name"
                },
                "TaskNumber":{
                    "maxLength":100,
                    "type":"string",
                    "description":"Alphanumeric identifier of the task.",
                    "title":"Task Number"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"PublicationStatus LOV",
                    "description":"The list of valid publication statuses allowed for task progress.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PublicationStatus; Target Attribute: PublicationStatus</li><li>Display Attribute: PublicationStatus</li></ul>",
                    "method":"get",
                    "href":"/projectsFinancialsApi/resources/11.12.1.0/projectProgress/{ProjectId}/child/TaskProgress/{TaskId}/lov/PublicationStatusLOV?fields=PublicationStatus",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PublicationStatus":{
                                "type":"string",
                                "description":"Publication status of task progress."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PublicationStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProgressStatusCode LOV",
                    "description":"The list of valid progress status codes allowed for task progress.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgressStatusCode; Target Attribute: ProgressStatusCode</li><li>Source Attribute: ProgressStatus; Target Attribute: ProgressStatus</li><li>Display Attribute: ProgressStatusCode</li></ul>",
                    "method":"get",
                    "href":"/projectsFinancialsApi/resources/11.12.1.0/projectProgress/{ProjectId}/child/TaskProgress/{TaskId}/lov/ProgressStatusCodeLOV?fields=ProgressStatusCode,ProgressStatus",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ProgressStatusCode":{
                                "type":"string",
                                "description":"Progress status code of task progress."
                            },
                            "ProgressStatus":{
                                "type":"string",
                                "description":"Progress status of task progress."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProgressStatusCode",
                        "ProgressStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProgressStatus LOV",
                    "description":"The list of valid progress statuses allowed for task progress.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgressStatus; Target Attribute: ProgressStatus</li><li>Source Attribute: ProgressStatusCode; Target Attribute: ProgressStatusCode</li><li>Display Attribute: ProgressStatus</li></ul>",
                    "method":"get",
                    "href":"/projectsFinancialsApi/resources/11.12.1.0/projectProgress/{ProjectId}/child/TaskProgress/{TaskId}/lov/ProgressStatusLOV?fields=ProgressStatus,ProgressStatusCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ProgressStatus":{
                                "type":"string",
                                "description":"Progress status of task progress."
                            },
                            "ProgressStatusCode":{
                                "type":"string",
                                "description":"Progress status code of task progress."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProgressStatus",
                        "ProgressStatusCode"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "projectProgress-item":{
            "properties":{
                "ActualAmountsDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which actual amounts are summarized for project progress.",
                    "title":"Progress Actual Amounts Summarization Date"
                },
                "ActualAmountsThroughPeriod":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Period through which actual amounts are summarized for project progress.",
                    "title":"Actual Amounts Through Period"
                },
                "ActualFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which work completed on the project as opposed to the planned end date of the project.",
                    "title":"Actual Finish Date"
                },
                "ActualStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which work commenced on the project as opposed to the planned start date of the project.",
                    "title":"Actual Start Date"
                },
                "BaselineFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Planned end date of the project in baseline project plan. Used to compare the deviation of the current project end from the original planned end date.",
                    "title":"Baseline Finish Date"
                },
                "BaselineStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Planned start date of the project in baseline project plan. Used to compare the deviation of the current project start from the original planned start date.",
                    "title":"Baseline Start Date"
                },
                "CurrentActualAmountsDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date on which actual amounts are most recently summarized.",
                    "title":"Current Actual Amounts Summarization Date"
                },
                "CurrentActualAmountsPeriod":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Period through which actual amounts are most recently summarized.",
                    "title":"Current Actual Amount Period"
                },
                "EstimatedFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Projected end date of the project.",
                    "title":"Estimated Finish Date"
                },
                "EstimatedStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Projected start date of the project.",
                    "title":"Estimated Start Date"
                },
                "PercentComplete":{
                    "type":"number",
                    "description":"The amount of physical work achieved on the project.",
                    "title":"Physical Percent Complete"
                },
                "PlannedFinishDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Scheduled end date of the project.",
                    "title":"Planned Finish Date"
                },
                "PlannedStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Scheduled start date of the project.",
                    "title":"Planned Start Date"
                },
                "PreviousPercentComplete":{
                    "type":"number",
                    "description":"The amount of physical work achieved on the project in the most recently captured progress.",
                    "title":"Previous Physical Percent Complete"
                },
                "ProgressAsOfDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date through which progress is captured for the project.",
                    "title":"Progress As-of Date"
                },
                "ProgressAsOfPeriod":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Period through which progress is captured for the project.",
                    "title":"Progress As-of Period"
                },
                "ProgressStatus":{
                    "type":"string",
                    "description":"Status, such as In Trouble, On Track or At Risk, that indicates the overall progress of the project.",
                    "title":"Progress Status"
                },
                "ProgressStatusCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Code of the status, such as In Trouble, On Track or At Risk, that indicates the overall progress of the project.",
                    "title":"Progress Status Code"
                },
                "ProjectBurdenedActualCost":{
                    "type":"number",
                    "description":"Cost that is actualy charged to the project in project currency. Burdened cost is the sum of raw cost and the overhead.",
                    "title":"Actual Burdened Cost in Project Currency"
                },
                "ProjectCurrency":{
                    "maxLength":15,
                    "type":"string",
                    "description":"The currency code for the project. The currency code is a three-letter ISO code associated with a currency.",
                    "title":"Project Currency"
                },
                "ProjectId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier of the project.",
                    "title":"Project ID"
                },
                "ProjectLedgerBurdenedActualCost":{
                    "type":"number",
                    "description":"Cost that is actualy charged to the project in project ledger currency. Burdened cost is the sum of raw cost and the overhead.",
                    "title":"Actual Burdened Cost in Ledger Currency"
                },
                "ProjectLedgerCurrency":{
                    "maxLength":15,
                    "type":"string",
                    "description":"The currency code used for accounting and reporting in the project ledger. The currency code is a three-letter ISO code associated with a currency.",
                    "title":"Project Ledger Currency"
                },
                "ProjectLedgerRawActualCost":{
                    "type":"number",
                    "description":"Actual amount paid or actual amount incurred for the project in project ledger currency.",
                    "title":"Actual Raw Cost in Ledger Currency"
                },
                "ProjectName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name assigned to the project.",
                    "title":"Project Name"
                },
                "ProjectNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Alphanumeric identifier of the project.",
                    "title":"Project Number"
                },
                "ProjectRawActualCost":{
                    "type":"number",
                    "description":"Actual amount paid or actual amount incurred for the project in project currency.",
                    "title":"Actual Raw Cost in Project Currency"
                },
                "PublicationStatus":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Status of current project progress. The status can either be Draft or Published.",
                    "title":"Progress Publication Status"
                },
                "SourceApplicationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"The third-party application from which the project originated.",
                    "title":"Source Application"
                },
                "SourceProjectReference":{
                    "maxLength":25,
                    "type":"string",
                    "description":"The identifier of the project in the external application where it was originally created.",
                    "title":"Source Reference"
                },
                "TaskProgress":{
                    "$ref":"#/definitions/projectProgress-TaskProgress",
                    "description":"An object that includes the attributes that are used to store the progress data for a project task.",
                    "title":"Task Progress"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"PublicationStatus LOV",
                    "description":"The list of valid publication statuses allowed for project progress.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PublicationStatus; Target Attribute: PublicationStatus</li><li>Display Attribute: PublicationStatus</li></ul>",
                    "method":"get",
                    "href":"/projectsFinancialsApi/resources/11.12.1.0/projectProgress/{ProjectId}/lov/PublicationStatusLOV?fields=PublicationStatus",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PublicationStatus":{
                                "type":"string",
                                "description":"Publication status of project progress."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PublicationStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProgressStatusCode LOV",
                    "description":"The list of valid progress status codes allowed for project progress.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgressStatusCode; Target Attribute: ProgressStatusCode</li><li>Source Attribute: ProgressStatus; Target Attribute: ProgressStatus</li><li>Display Attribute: ProgressStatusCode</li></ul>",
                    "method":"get",
                    "href":"/projectsFinancialsApi/resources/11.12.1.0/projectProgress/{ProjectId}/lov/ProgressStatusCodeLOV?fields=ProgressStatusCode,ProgressStatus",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ProgressStatusCode":{
                                "type":"string",
                                "description":"Progress status code of project progress."
                            },
                            "ProgressStatus":{
                                "type":"string",
                                "description":"Progress status of project progress."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProgressStatusCode",
                        "ProgressStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProgressStatus LOV",
                    "description":"The list of valid progress statuses allowed for project progress.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgressStatus; Target Attribute: ProgressStatus</li><li>Source Attribute: ProgressStatusCode; Target Attribute: ProgressStatusCode</li><li>Display Attribute: ProgressStatus</li></ul>",
                    "method":"get",
                    "href":"/projectsFinancialsApi/resources/11.12.1.0/projectProgress/{ProjectId}/lov/ProgressStatusLOV?fields=ProgressStatus,ProgressStatusCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ProgressStatus":{
                                "type":"string",
                                "description":"Progress status of project progress."
                            },
                            "ProgressStatusCode":{
                                "type":"string",
                                "description":"Progress status code of project progress."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProgressStatus",
                        "ProgressStatusCode"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        }
    },
    "tags":[
        {
            "name":"Project Progress",
            "description":"An object that includes the attributes that are used to store the progress data for a project."
        },
        {
            "name":"Project Progress/Task Progress",
            "description":"An object that includes the attributes that are used to store the progress data for a project task."
        },
        {
            "name":"Projects",
            "description":"The project resource is used to view, create, or modify a project. A project is the effort and resources required to achieve a significant business objective within a specific, usually finite, time frame."
        },
        {
            "name":"Projects/Project Customers",
            "description":"An object that includes the attributes which are used to store values while creating or updating the customers for a project. This represents the name of the customer with whom an agreement has been made on the contract or project."
        },
        {
            "name":"Projects/Project Opportunities",
            "description":"An object that includes attributes that are used to store values while creating or updating the opportunity details for a project. An opportunity is defined as a potential revenue-generating event."
        },
        {
            "name":"Projects/Project Team Members",
            "description":"An object that includes attributes that are used to store values while creating or updating team members on a project. A project team member is a person who is assigned a role on a project."
        },
        {
            "name":"Projects/Tasks",
            "description":"The task resource includes the attributes that are used to store values while creating or updating project tasks. Tasks are units of project work assigned or performed as part of the duties of a resource. Tasks can be a portion of project work to be performed within a defined period by a specific resource or multiple resources."
        },
        {
            "name":"Projects/Tasks/Expense Resource Assignments",
            "description":"An object that includes the attributes that are used to store values while creating or updating expense resource assignments for a project task. For example, hotel expenses can be planned on a project task."
        },
        {
            "name":"Projects/Tasks/Labor Resource Assignments",
            "description":"An object that includes the attributes that are used to store values while creating or updating labor resource assignments for a project task. For example, a DBA can be assigned as labor resource for a project task."
        }
    ],
    "basePath":"/projectsFinancialsApi/resources/11.12.1.0",
    "paths":{
        "/projects":{
            "get":{
                "summary":"Get all projects",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByProjectName: Finds all projects with the specified project name. Finder Variables:<ul><li>ProjectName; string; The name of the project being queried.</li></ul></li><li>findByProjectStatus: Finds all projects with the specified project status. Finder Variables:<ul><li>ProjectStatus; string; An implementation-defined classification of the status of a project, for example, Active and Closed.</li></ul></li><li>findByOrg: Finds all projects with the specified project-owning organization name. Finder Variables:<ul><li>OwningOrganizationName; string; The name of the organization that owns the project.</li></ul></li><li>findByProjectId: Finds all projects with the specified project ID. Finder Variables:<ul><li>ProjectId; integer; The unique identifier of the project.</li></ul></li><li>findBySourceApplication: Finds a project with the specified source application code and source project reference. Finder Variables:<ul><li>SourceApplicationCode; string; The third-party application from which the project originates.</li><li>SourceProjectReference; string; The identifier of the project in the external application where it was originally created.</li></ul></li><li>PrimaryKey: Finds all projects with the specified project ID. Finder Variables:<ul><li>ProjectId; integer; The unique identifier of the project.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects"
                ],
                "x-internal-id":"projects-get"
            },
            "post":{
                "summary":"Create a project",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects"
                ],
                "x-internal-id":"projects-post"
            }
        },
        "/projects/{ProjectId}":{
            "get":{
                "summary":"Get a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects"
                ],
                "x-internal-id":"projects-{ProjectId}-get"
            },
            "patch":{
                "summary":"Update a project",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects"
                ],
                "x-internal-id":"projects-{ProjectId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/ProjectCustomers":{
            "get":{
                "summary":"Get all customers for a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all projects with the specified project party ID. Finder Variables:<ul><li>ProjectPartyId; integer; The unique assignment identifier of a customer.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectCustomers"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects/Project Customers"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectCustomers-get"
            },
            "post":{
                "summary":"Create a project customer",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectCustomers-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectCustomers-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Customers"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectCustomers-post"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/ProjectCustomers/{ProjectPartyId}":{
            "get":{
                "summary":"Get a project customer",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectCustomers-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Customers"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectCustomers-{ProjectPartyId}-get"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"ProjectPartyId",
                    "description":"Unique identifier of a party assignment to the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/ProjectOpportunities":{
            "get":{
                "summary":"Get all opportunities for a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all projects with the specified opportunity ID. Finder Variables:<ul><li>OpportunityId; integer; The unique identifier of the opportunity associated with the project.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectOpportunities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects/Project Opportunities"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectOpportunities-get"
            },
            "post":{
                "summary":"Create a project opportunity",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectOpportunities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectOpportunities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Opportunities"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectOpportunities-post"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/ProjectOpportunities/{OpportunityId}":{
            "get":{
                "summary":"Get a project opportunity",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectOpportunities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Opportunities"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectOpportunities-{OpportunityId}-get"
            },
            "patch":{
                "summary":"Update a project opportunity",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectOpportunities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectOpportunities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Opportunities"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectOpportunities-{OpportunityId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"OpportunityId",
                    "description":"Unique identifier of the opportunity associated with the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/ProjectTeamMembers":{
            "get":{
                "summary":"Get all team members for a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all projects with the specified team member ID. Finder Variables:<ul><li>TeamMemberId; integer; The unique assignment identifier of a team member.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectTeamMembers"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects/Project Team Members"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectTeamMembers-get"
            },
            "post":{
                "summary":"Create a project team member",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectTeamMembers-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectTeamMembers-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Team Members"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectTeamMembers-post"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/ProjectTeamMembers/{TeamMemberId}":{
            "get":{
                "summary":"Get a project team member",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectTeamMembers-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Team Members"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectTeamMembers-{TeamMemberId}-get"
            },
            "patch":{
                "summary":"Update a project team member",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectTeamMembers-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-ProjectTeamMembers-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Project Team Members"
                ],
                "x-internal-id":"projects-{ProjectId}-child-ProjectTeamMembers-{TeamMemberId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TeamMemberId",
                    "description":"Unique identifier of the team member assigned to the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/Tasks":{
            "get":{
                "summary":"Get all tasks for a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByTaskId: Finds all project tasks with the specified task ID. Finder Variables:<ul><li>TaskId; integer; The unique identifier for the project task.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects/Tasks"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-get"
            },
            "post":{
                "summary":"Create a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-post"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/Tasks/{TasksUniqID}":{
            "get":{
                "summary":"Get a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-get"
            },
            "delete":{
                "summary":"Delete a project task",
                "description":"",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Projects/Tasks"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-delete"
            },
            "patch":{
                "summary":"Update a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TasksUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- ProjElementId, ElementVersionId and Id ---for the Tasks resource and used to uniquely identify an instance of Tasks. The client should not generate the hash key value.  Instead, the client should query on the Tasks collection resource with a filter on the primary key values in order to navigate to a specific instance of Tasks.<br><br>For example: Tasks?q=ProjElementId=&lt;value1&gt;;ElementVersionId=&lt;value2&gt;;Id=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/Tasks/{TasksUniqID}/child/ExpenseResourceAssignments":{
            "get":{
                "summary":"Get all expense resource assignments for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all projects with the specified expense resource assignment ID. Finder Variables:<ul><li>ExpenseResourceAssignmentId; integer; The unique identifier of the expense resource assignment on a project task.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects/Tasks/Expense Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-ExpenseResourceAssignments-get"
            },
            "post":{
                "summary":"Create an expense resource assignment for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks/Expense Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-ExpenseResourceAssignments-post"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TasksUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- ProjElementId, ElementVersionId and Id ---for the Tasks resource and used to uniquely identify an instance of Tasks. The client should not generate the hash key value.  Instead, the client should query on the Tasks collection resource with a filter on the primary key values in order to navigate to a specific instance of Tasks.<br><br>For example: Tasks?q=ProjElementId=&lt;value1&gt;;ElementVersionId=&lt;value2&gt;;Id=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/Tasks/{TasksUniqID}/child/ExpenseResourceAssignments/{ExpenseResourceAssignmentId}":{
            "get":{
                "summary":"Get an expense resource assignment for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks/Expense Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-ExpenseResourceAssignments-{ExpenseResourceAssignmentId}-get"
            },
            "delete":{
                "summary":"Delete an expense resource assignment for a project task",
                "description":"",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Projects/Tasks/Expense Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-ExpenseResourceAssignments-{ExpenseResourceAssignmentId}-delete"
            },
            "patch":{
                "summary":"Update an expense resource assignment for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-ExpenseResourceAssignments-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks/Expense Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-ExpenseResourceAssignments-{ExpenseResourceAssignmentId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TasksUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- ProjElementId, ElementVersionId and Id ---for the Tasks resource and used to uniquely identify an instance of Tasks. The client should not generate the hash key value.  Instead, the client should query on the Tasks collection resource with a filter on the primary key values in order to navigate to a specific instance of Tasks.<br><br>For example: Tasks?q=ProjElementId=&lt;value1&gt;;ElementVersionId=&lt;value2&gt;;Id=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"ExpenseResourceAssignmentId",
                    "description":"Unique identifier of the expense resource assignment to the project task.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/Tasks/{TasksUniqID}/child/LaborResourceAssignments":{
            "get":{
                "summary":"Get all labor resource assignments for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all projects with the specified labor resource assignment ID. Finder Variables:<ul><li>LaborResourceAssignmentId; integer; The unique identifier of a labor resource assignment on a project task.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Projects/Tasks/Labor Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-LaborResourceAssignments-get"
            },
            "post":{
                "summary":"Create a labor resource assignment for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks/Labor Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-LaborResourceAssignments-post"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TasksUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- ProjElementId, ElementVersionId and Id ---for the Tasks resource and used to uniquely identify an instance of Tasks. The client should not generate the hash key value.  Instead, the client should query on the Tasks collection resource with a filter on the primary key values in order to navigate to a specific instance of Tasks.<br><br>For example: Tasks?q=ProjElementId=&lt;value1&gt;;ElementVersionId=&lt;value2&gt;;Id=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projects/{ProjectId}/child/Tasks/{TasksUniqID}/child/LaborResourceAssignments/{LaborResourceAssignmentId}":{
            "get":{
                "summary":"Get a labor resource assignment for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks/Labor Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-LaborResourceAssignments-{LaborResourceAssignmentId}-get"
            },
            "delete":{
                "summary":"Delete a labor resource assignment for a project task",
                "description":"",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Projects/Tasks/Labor Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-LaborResourceAssignments-{LaborResourceAssignmentId}-delete"
            },
            "patch":{
                "summary":"Update a labor resource assignment for a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projects-Tasks-LaborResourceAssignments-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Projects/Tasks/Labor Resource Assignments"
                ],
                "x-internal-id":"projects-{ProjectId}-child-Tasks-{TasksUniqID}-child-LaborResourceAssignments-{LaborResourceAssignmentId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TasksUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- ProjElementId, ElementVersionId and Id ---for the Tasks resource and used to uniquely identify an instance of Tasks. The client should not generate the hash key value.  Instead, the client should query on the Tasks collection resource with a filter on the primary key values in order to navigate to a specific instance of Tasks.<br><br>For example: Tasks?q=ProjElementId=&lt;value1&gt;;ElementVersionId=&lt;value2&gt;;Id=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LaborResourceAssignmentId",
                    "description":"Unique identifier of the labor resource assignment for the project task.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projectProgress":{
            "get":{
                "summary":"Get the progress of all projects",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findProgressByProjectIdAndDate: Finds the published progress of the specified project till the specified date. Finder Variables:<ul><li>ProgressAsOfDate; string; Date through which progress is determined for the project.</li><li>ProjectId; integer; The unique identifier of the project.</li></ul></li><li>findDraftProgressByProjectId: Finds the draft progress of  the specified project. Finder Variables:<ul><li>ProjectId; integer; The unique identifier of the project.</li></ul></li><li>findProgressBySourceReference: Finds the draft project progress for the specified source project reference and application code. Finder Variables:<ul><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li><li>SourceApplicationCode; string; The third-party application from which the project originates.</li><li>SourceProjectReference; string; The identifier of the project in the external system where it was originally entered.</li></ul></li><li>findProgressByProjectId: Finds the draft or published progress of the specified project ID. Finder Variables:<ul><li>ProjectId; integer; The unique identifier of the project.</li><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li></ul></li><li>findProgressByProjectName: Finds the draft or published progress of the specified project name. Finder Variables:<ul><li>ProjectName; string; The name of the project being queried.</li><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li></ul></li><li>findProgressByProjectNumber: Finds the draft or published progress of the specified project number. Finder Variables:<ul><li>ProjectNumber; string; Number of the project that is being queried.</li><li>PublicationStatus; string; Status of current project progress. The status can either be Draft or Published.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Project Progress"
                ],
                "x-internal-id":"projectProgress-get"
            }
        },
        "/projectProgress/{ProjectId}":{
            "get":{
                "summary":"Get the progress of a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Project Progress"
                ],
                "x-internal-id":"projectProgress-{ProjectId}-get"
            },
            "patch":{
                "summary":"Update the progress of a project",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Project Progress"
                ],
                "x-internal-id":"projectProgress-{ProjectId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projectProgress/{ProjectId}/child/TaskProgress":{
            "get":{
                "summary":"Get the progress of all tasks of a project",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findProgressByTaskNumber: Finds task progress of the specified task number. Finder Variables:<ul><li>TaskNumber; string; Number of the project task that is being queried.</li></ul></li><li>findProgressByTaskId: Finds task progress of the specified task ID. Finder Variables:<ul><li>TaskId; integer; The unique identifier of the project task.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-TaskProgress"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Project Progress/Task Progress"
                ],
                "x-internal-id":"projectProgress-{ProjectId}-child-TaskProgress-get"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/projectProgress/{ProjectId}/child/TaskProgress/{TaskId}":{
            "get":{
                "summary":"Get the progress of a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-TaskProgress-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Project Progress/Task Progress"
                ],
                "x-internal-id":"projectProgress-{ProjectId}-child-TaskProgress-{TaskId}-get"
            },
            "patch":{
                "summary":"Update the progress of a project task",
                "description":"",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-TaskProgress-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/projectProgress-TaskProgress-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json",
                    "application/json"
                ],
                "tags":[
                    "Project Progress/Task Progress"
                ],
                "x-internal-id":"projectProgress-{ProjectId}-child-TaskProgress-{TaskId}-patch"
            },
            "parameters":[
                {
                    "name":"ProjectId",
                    "description":"Unique identifier of the project.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TaskId",
                    "description":"Unique identifier of the task.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        }
    },
    "swagger":"2.0",
    "schemes":[
        "https"
    ]
}