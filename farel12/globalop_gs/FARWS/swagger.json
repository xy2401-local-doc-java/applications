{
    "info":{
        "description":"<div><em><span><span style=\"color: #FF0000;\">This REST API document applies to Release 12. <br>Previous version:</span> <span style=\"color: #226aa8;\"></span><a class=\"xref\" href=\"http://docs.oracle.com/cloud/farel11/globalcs_gs/FARWS\">Release 11</a> </span></em><br><br> </div>\nOracle Global Human Resources Cloud delivers Representational State Transfer (REST) APIs to support your integration requirements. The REST APIs enable easy integration of data into new and existing business process flows. They are intended as user-friendly web services involving transactions of smaller volume.<BR><BR>The REST APIs for Oracle Global Human Resources Cloud Release 12 are under controlled availability.",
        "version":"2018.02.21",
        "title":"REST API for Oracle Global Human Resources Cloud Release 12",
        "x-summary":"This REST API document applies to Release 12."
    },
    "definitions":{
        "collectionQuery":{
            "properties":{
                "dependency":{
                    "type":"string",
                    "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                },
                "expand":{
                    "type":"string",
                    "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers)."
                },
                "fields":{
                    "type":"string",
                    "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2"
                },
                "finder":{
                    "type":"string",
                    "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record event request using its unique identifier. Finder Variables:<ul><li>timeRecordEventRequestId; integer; Unique identifier for the time record event request.</li></ul></li></ul>"
                },
                "limit":{
                    "type":"integer",
                    "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                },
                "offset":{
                    "type":"integer",
                    "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                },
                "onlyData":{
                    "type":"boolean",
                    "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                },
                "orderBy":{
                    "type":"string",
                    "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                },
                "q":{
                    "type":"string",
                    "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2"
                },
                "totalResults":{
                    "type":"boolean",
                    "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                }
            },
            "type":"object"
        },
        "link":{
            "properties":{
                "href":{
                    "type":"string",
                    "description":"The URI to the related resource.",
                    "title":"hyperlink reference"
                },
                "rel":{
                    "type":"string",
                    "description":"The name of the relation to the resource instance.  Example: self.",
                    "title":"relation"
                }
            },
            "type":"object"
        },
        "squery":{
            "properties":{
                "dependency":{
                    "type":"string",
                    "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                },
                "expand":{
                    "type":"string",
                    "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers)."
                },
                "fields":{
                    "type":"string",
                    "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2"
                },
                "onlyData":{
                    "type":"boolean",
                    "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                }
            },
            "type":"object"
        },
        "timeRecordEventRequests":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordEventRequests-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordEventRequests-item":{
            "properties":{
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "processMode":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Mode - Save, Submit, or Enter - for processing time records that are stored in the WFM time repository."
                },
                "timeRecordEvent":{
                    "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent",
                    "description":"The timeRecordEvent resource is a unique identifier of a time record event sent using the time records REST API. It corresponds to a time record to be posted in the repository. It is a range expressed as start and stop times or a quantity in hours or units, along with the associated attribution that details the kind of work performed.<br>This resource is currently under controlled availability.",
                    "title":"Time Record Events"
                },
                "timeRecordEventRequestId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record event request."
                }
            },
            "type":"object"
        },
        "timeRecordEventRequests-timeRecordEvent":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordEventRequests-timeRecordEvent-item":{
            "properties":{
                "assignmentNumber":{
                    "type":"string",
                    "description":"Assignment number for the person associated with the time record event."
                },
                "comment":{
                    "maxLength":64,
                    "type":"string",
                    "description":"Comment associated with the time record event."
                },
                "crudStatusValue":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Numerical value of the type of operation - Create, Update, or Delete - to apply when importing the time record event."
                },
                "eventStatus":{
                    "type":"string",
                    "description":"Processing status of the time record event such as new, in process or complete."
                },
                "eventStatusValue":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Numerical value of the processing status of the time record event such as new, in process or complete."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "measure":{
                    "type":"number",
                    "description":"Quantity of the time record event that can be a number of hours or units."
                },
                "operationType":{
                    "type":"string",
                    "description":"Type of operation - Create, Update, or Delete - to apply when importing the time record event."
                },
                "personId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the person associated with the time record event."
                },
                "referenceDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use to process a time record event that spans multiple days."
                },
                "reporterId":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Unique identifier for the worker associated with the time record event."
                },
                "reporterIdType":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Type of identifier for the time reporter, such as Person or Badge."
                },
                "startTime":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Start time of the time record event to import."
                },
                "stopTime":{
                    "maxLength":32,
                    "type":"string",
                    "description":"End time of the time record event to import."
                },
                "subresourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the work assignment for the person associated with the time record event."
                },
                "timeRecordEventAttribute":{
                    "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute",
                    "description":"The timeRecordEventAttribute resource is a qualifier associated with the time record event that reflects how time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates if the time for payroll consumers must be paid.<br>This resource is currently under controlled availability.",
                    "title":"Time Record Event Attributes"
                },
                "timeRecordEventId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record event."
                },
                "timeRecordEventMessage":{
                    "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage",
                    "description":"The timeRecordEventMessage resource is a unique identifier for the message associated with the time record event. A message gives some information on the time record event resulting from rules or validations.<br>This resource is currently under controlled availability.",
                    "title":"Time Record Event Messages"
                },
                "timeRecordEventRequestId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record event request."
                },
                "timeRecordId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record to update or delete."
                },
                "timeRecordVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record stored in the WFM time repository."
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"assignmentNumber LOV",
                    "description":"The list of values containing the assignment numbers of the person associated with the time record.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: assignmentNumber; Target Attribute: AssignmentNumber</li><li>Source Attribute: subresourceId; Target Attribute: AssignmentId</li></ul>",
                    "method":"get",
                    "href":"/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}/lov/AssignmentPVO1?fields=AssignmentNumber,AssignmentId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "assignmentNumber",
                        "subresourceId"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute-item":{
            "properties":{
                "attributeName":{
                    "type":"string",
                    "description":"Name of the attribute to import with the time record event, such as Payroll Time Type."
                },
                "attributeValue":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Value of the attribute to import with the time record event, such as Regular or Overtime."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "timeAttributeFieldId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the field that the time attribute is associated with."
                },
                "timeRecordEventAttributeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record event attribute."
                },
                "timeRecordEventId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record event."
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"attributeName LOV",
                    "description":"The list of values containing the names of the attributes associated with the time record.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: attributeName; Target Attribute: Name</li><li>Source Attribute: timeAttributeFieldId; Target Attribute: TmAtrbFldId</li></ul>",
                    "method":"get",
                    "href":"/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}/child/timeRecordEventAttribute/{timeRecordEventAttributeId}/lov/TimeAttributeFieldPVO1?fields=Name,TmAtrbFldId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "attributeName",
                        "timeAttributeFieldId"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage-item":{
            "properties":{
                "allowException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Indicator that determines whether to allow the exception associated with the time record."
                },
                "attributeType":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Type of the attribute the message is related to, such as Timestamp for startTime."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageField":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Unique identifier for the field that the message is associated with."
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message associated with the time record."
                },
                "messageName":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Name of the message associated with the time record."
                },
                "timeBldgBlkVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record event with specified message."
                },
                "timeRecordEventMessageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message associated with the time record event."
                },
                "timeRecordId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record associated with the message."
                }
            },
            "type":"object"
        },
        "gradeLadders":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeLadders-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeLadders-gradeLadderDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeLadders-gradeLadderDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeLadders-gradeLadderDFF-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade ladder flexfield is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade ladder flexfield is effective."
                },
                "GradeLadderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade ladder."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield for grade ladder."
                },
                "_FLEX_ValidationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for grade ladder."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield for grade ladder.",
                    "title":"Context"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/gradeLadderDFF/{gradeLadderDFFUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for grade ladder."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for grade ladder."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "gradeLadders-grades":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeLadders-grades-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeLadders-grades-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade is effective.",
                    "title":"Effective Start Date"
                },
                "GradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade."
                },
                "GradesInLadderSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Indicates the sequence of the grades within the grade ladder."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "gradeLadders-item":{
            "properties":{
                "ActionReasonCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"User-defined code for the action reason. Specifies the reason for the action performed on the record."
                },
                "ActiveStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a grade ladder is active or inactive.",
                    "title":"Status"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade ladder is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade ladder is effective."
                },
                "GradeLadderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade ladder."
                },
                "GradeLadderName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Denotes the name for grade ladder.",
                    "title":"Name"
                },
                "GradeSetId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier of the grade set."
                },
                "GradeType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of the grade, for example with steps."
                },
                "gradeLadderDFF":{
                    "$ref":"#/definitions/gradeLadders-gradeLadderDFF",
                    "description":"The gradeLadderDFF resource is a child of the gradeLadders resource. It includes descriptive flexfields for a grade ladder, identified by PER_GRADE_LADDERS_DF code.<br>This resource is currently under controlled availability.",
                    "title":"Grade Ladder Descriptive Flexfields"
                },
                "grades":{
                    "$ref":"#/definitions/gradeLadders-grades",
                    "description":"The grades resource is a child of the gradeLadders resource. It includes all the grades that are attached to the grade ladder and also includes the order in which they are attached.<br>This resource is currently under controlled availability.",
                    "title":"Grades"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "stepRates":{
                    "$ref":"#/definitions/gradeLadders-stepRates",
                    "description":"The stepRates resource is a child of the gradeLadders resource. It includes step rates, representing pay rate that is defined for the grade steps, as of the specified date.<br>This resource is currently under controlled availability.",
                    "title":"Step Rates"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"GradeType LOV",
                    "description":"The list of values for grade type.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: GradeType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/lov/ListOfGradeType?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "GradeType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ActiveStatus LOV",
                    "description":"The list of values for grade ladder status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActiveStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/lov/ValidateStatus?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActiveStatus"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "gradeLadders-stepRates":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeLadders-stepRates-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeLadders-stepRates-item":{
            "properties":{
                "ActiveStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a step rate is active or inactive."
                },
                "AnnualizationFactor":{
                    "type":"number",
                    "description":"Annualization Factor value defaults based on the selected Frequency. For example, 1 for Annual, 12 for monthly, 2080 for hourly, manually provided value in the UI."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Currency code for the rate values defined for the rate.",
                    "title":"Currency"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the step rate is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the step rate is effective."
                },
                "LegislationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Legislation code derived from legislative data group."
                },
                "LegislativeDataGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the legislative data group."
                },
                "RateFrequency":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Frequency of the rate: Annual/Monthly/Hourly/Payroll period."
                },
                "RateId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the step rate."
                },
                "RateName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Denotes the name for Rate.",
                    "title":"Name"
                },
                "RateType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Stores rate type, whether it's Salary/Bonus/Overtime."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "stepRateValues":{
                    "$ref":"#/definitions/gradeLadders-stepRates-stepRateValues",
                    "description":"The stepRateValues resource is a child of the gradeLadders resource. It includes monetary values defined for the grade steps and the given step rate, as of the specified date.<br>This resource is currently under controlled availability.",
                    "title":"Step Rate Values"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"RateType LOV",
                    "description":"The list of values for rate type.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RateType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}/lov/ListOfRateType?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RateType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CurrencyCode LOV",
                    "description":"The list of values for currency code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}/lov/ListOfCurrencies?fields=CurrencyCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "CurrencyCode":{
                                "type":"string",
                                "description":"Code of the currency."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the currency."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CurrencyCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"RateFrequency LOV",
                    "description":"The list of values for rate frequency.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RateFrequency; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}/lov/ValidateRateFrequency?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RateFrequency"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ActiveStatus LOV",
                    "description":"The list of values for step rate status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActiveStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}/lov/ValidateStatus?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActiveStatus"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "gradeLadders-stepRates-stepRateValues":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeLadders-stepRates-stepRateValues-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeLadders-stepRates-stepRateValues-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the step rate value is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the step rate value is effective.",
                    "title":"Effective Start Date"
                },
                "RateValueId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the rate value."
                },
                "StepRateValueAmount":{
                    "type":"number",
                    "description":"Value amount of the step rate."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "timeEventRequests":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeEventRequests-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeEventRequests-item":{
            "properties":{
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "requestNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unique identifier for the time event request sent by the time collection device supplier."
                },
                "requestTimestamp":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Date and time when the time event request was created."
                },
                "sourceId":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Unique identifier for the source creating the data.  For example, vendor name or facility identifier."
                },
                "timeEventRequestId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events."
                },
                "timeEvents":{
                    "$ref":"#/definitions/timeEventRequests-timeEvents",
                    "description":"The timeEvents resource is a single IN or OUT time transaction that the time reporter records on a time collection device.<br>This resource is currently under controlled availability.",
                    "title":"Time Events"
                }
            },
            "type":"object"
        },
        "timeEventRequests-timeEvents":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeEventRequests-timeEvents-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeEventRequests-timeEvents-item":{
            "properties":{
                "deviceId":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Identifier for the time collection device used to create the time event."
                },
                "eventDateTime":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Date and time when the time event was recorded on the time collection device. The time stamp in the request must use the ISO 8601 standard with the timezone offset information. The attribute can handle either a start or end time or a start time and duration."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "reporterId":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Identifier for the worker recording the time event on the time collection device."
                },
                "reporterIdType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"The type of reporter identifier, such as Person, Badge, or Assignment that the time reporter uses when swiping on the time collection device."
                },
                "supplierDeviceEvent":{
                    "maxLength":40,
                    "type":"string",
                    "description":"The time events recognized by the supplier that are mapped to the corresponding Workforce Management application event. For example, the supplier device event Clock In is mapped to the application event In."
                },
                "timeEventAttributes":{
                    "$ref":"#/definitions/timeEventRequests-timeEvents-timeEventAttributes",
                    "description":"The timeEventAttributes resource is a qualifier associated with the time event that reflects how time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates if the time for payroll consumers must be paid.<br>This resource is currently under controlled availability.",
                    "title":"Time Event Attributes"
                },
                "timeEventId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the IN or OUT time event that the time reporter records on a time collection device."
                },
                "timeEventRequestId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events."
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"supplierDeviceEvent LOV",
                    "description":"The list of values for the supplier device events lookup code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: supplierDeviceEvent; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}/child/timeEvents/{timeEventId}/lov/TimeLookupSharedAM_OraHwmTcdSupplierEventswithSource1?fields=LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "supplierDeviceEvent"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"reporterIdType LOV",
                    "description":"The list of values for the type of reporter identifier, such as PERSON and BADGE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: reporterIdType; Target Attribute: ReporterIdType</li></ul>",
                    "method":"get",
                    "href":"/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}/child/timeEvents/{timeEventId}/lov/ReporterIdTypeList1?fields=ReporterIdType",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ReporterIdType":{
                                "type":"string",
                                "description":"Type of identifier for the worker recording the time event on the time collection device."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "reporterIdType"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "timeEventRequests-timeEvents-timeEventAttributes":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeEventRequests-timeEvents-timeEventAttributes-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeEventRequests-timeEvents-timeEventAttributes-item":{
            "properties":{
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "name":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the attribute associated with the time event, such as Payroll Time Type."
                },
                "timeEventAttributeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"A qualifier associated with the time event that reflects how the time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates whether time for payroll consumers should be paid."
                },
                "timeEventId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the IN or OUT time event that the time reporter records on a time collection device."
                },
                "value":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Value of the attribute associated with the time event. For example, Regular is a value for the Payroll Time Type time attribute."
                }
            },
            "type":"object"
        },
        "gradeRates":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeRates-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeRates-item":{
            "properties":{
                "ActionReasonCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"User-defined code for the action reason. Specifies the reason for the action performed on the record."
                },
                "ActiveStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status of the rate, whether it is active or inactive."
                },
                "AnnualizationFactor":{
                    "type":"number",
                    "description":"Annualization Factor value defaults based on the selected Frequency. For example, 1 for Annual, 12 for monthly, 2080 for hourly, manually provided value in the UI for Payroll period."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Currency Code for the rate values defined for the rate.",
                    "title":"Currency"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade rate is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade rate is effective."
                },
                "GradeRateName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Denotes the name for rate.",
                    "title":"Name"
                },
                "LegislativeDataGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the legislative data group."
                },
                "RateFrequency":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Frequency of the rate: Annual/Monthly/Hourly/Payroll period."
                },
                "RateId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the rate."
                },
                "RateType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Stores rate type, whether it's Salary/Bonus/Overtime."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "rateValues":{
                    "$ref":"#/definitions/gradeRates-rateValues",
                    "description":"The rateValues resource is a child of the gradeRates resource. It includes monetary values or ranges of values for all grades assigned to the grade rate, as of the specified date.<br>This resource is currently under controlled availability.",
                    "title":"Rate Values"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"RateType LOV",
                    "description":"The list of values for rate type.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RateType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}/lov/ListOfRateType?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RateType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CurrencyCode LOV",
                    "description":"The list of values for currency code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}/lov/ListOfCurrencies?fields=CurrencyCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "CurrencyCode":{
                                "type":"string",
                                "description":"Code of the currency."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the currency."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CurrencyCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"RateFrequency LOV",
                    "description":"The list of values for rate frequency.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RateFrequency; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}/lov/ValidateRateFrequency?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RateFrequency"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ActiveStatus LOV",
                    "description":"The list of values for rate status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActiveStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}/lov/ValidateStatus?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActiveStatus"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "gradeRates-rateValues":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/gradeRates-rateValues-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "gradeRates-rateValues-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade rate value is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade rate value is effective.",
                    "title":"Effective Start Date"
                },
                "MaximumAmount":{
                    "type":"number",
                    "description":"Represents the maximum currency value of a grade in a grade rate."
                },
                "MidValueAmount":{
                    "type":"number",
                    "description":"Represents the average of minimum rate and maximum rate values of grade."
                },
                "MinimumAmount":{
                    "type":"number",
                    "description":"Represents the minimum currency value of a grade in a grade rate."
                },
                "RateValueId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the rate value."
                },
                "ValueAmount":{
                    "type":"number",
                    "description":"Numeric that represents value of grade in a grade rate."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "locations":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/locations-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "locations-LocationDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/locations-LocationDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "locations-LocationDFF-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield.",
                    "title":"Effective Start Date"
                },
                "LocationDetailsId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Descriptive flexfield."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield."
                },
                "_FLEX_ValidationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield.",
                    "title":"Context"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/locations/{locationsUniqID}/child/LocationDFF/{LocationDFFUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for location."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for location."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "locations-item":{
            "properties":{
                "AddressLine1":{
                    "maxLength":240,
                    "type":"string",
                    "description":"First line of the address.",
                    "title":"Address Line 1"
                },
                "AddressLine2":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Second line of the address.",
                    "title":"Address Line 2"
                },
                "AddressLine3":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Third line of the address.",
                    "title":"Address Line 3"
                },
                "AddressLine4":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Fourth line of the address.",
                    "title":"Address Line 4"
                },
                "BillToSiteFlag":{
                    "type":"boolean",
                    "description":"Indicates if the location is a bill-to site.",
                    "title":"Bill-to Site"
                },
                "Country":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Country in which the address is located.",
                    "title":"Country"
                },
                "Description":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description for the location."
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the location is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the location is effective.",
                    "title":"Effective Start Date"
                },
                "EmailAddress":{
                    "maxLength":240,
                    "type":"string",
                    "description":"E-mail address for the location.",
                    "title":"E-Mail"
                },
                "LocationCode":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Short form for the location.",
                    "title":"Code"
                },
                "LocationDFF":{
                    "$ref":"#/definitions/locations-LocationDFF",
                    "description":"The LocationDFF resource is a child of the locations resource. It includes a list of all location flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Location Descriptive Flexfields"
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key column."
                },
                "LocationName":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Name of the location."
                },
                "OfficeSiteFlag":{
                    "type":"boolean",
                    "description":"Indicates if the location is an office site.",
                    "title":"Office Site"
                },
                "PostalCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Postal code of the address.",
                    "title":"Postal Code"
                },
                "ReceivingSiteFlag":{
                    "type":"boolean",
                    "description":"Indicates if the location is a receiving site.",
                    "title":"Receiving Site"
                },
                "Region1":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Primary region in which the address is located.",
                    "title":"Region 1"
                },
                "Region2":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Secondary region within the primary region.",
                    "title":"Region 2"
                },
                "Region3":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Sub-region within the secondary region.",
                    "title":"Region 3"
                },
                "SetId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Set of reference data shared across business units and other entities. Also known as Reference Data Sets, they are used to filter reference data in transactional UIs.",
                    "title":"Set"
                },
                "ShipToSiteFlag":{
                    "type":"boolean",
                    "description":"Indicates if the location is a ship-to site.",
                    "title":"Ship-to Site"
                },
                "TownOrCity":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Town or city in which the address is located.",
                    "title":"Town or City"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "timeRecordGroups":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-item":{
            "properties":{
                "assignmentNumber":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Assignment number of the person associated with the time record group."
                },
                "comment":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Comment associated with the time record group."
                },
                "groupType":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Layer where time record groups are retrieved from, such as processed time card or posted schedule day."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "parentTimeRecordGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group parent."
                },
                "parentTimeRecordGroupVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group parent stored in the WFM time repository."
                },
                "personId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the person associated with the time record group."
                },
                "personNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number of the person assigned with the time record group."
                },
                "timeAttributes":{
                    "$ref":"#/definitions/timeRecordGroups-timeAttributes",
                    "description":"The timeAttributes resource is a qualifier associated with the time record group that reflects how time is recorded as an information entry. For example, a comment can be attached to the time record group.<br>This resource is currently under controlled availability.",
                    "title":"Time Attributes"
                },
                "timeMessages":{
                    "$ref":"#/definitions/timeRecordGroups-timeMessages",
                    "description":"The timeMessages resource is a unique identifier for the message associated with the time record group. A message gives some information on the time record group resulting from rules or validations.<br>This resource is currently under controlled availability.",
                    "title":"Time Messages"
                },
                "timeRecordGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group."
                },
                "timeRecordGroupVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group stored in the WFM time repository."
                },
                "timeRecordGroups":{
                    "$ref":"#/definitions/timeRecordGroups-timeRecordGroups",
                    "description":"The timeRecordGroups resource is a unique identifier for the time record group sent using the time records REST API. A time record group can contain one or more time records.<br>This resource is currently under controlled availability.",
                    "title":"Time Record Groups"
                },
                "timeRecords":{
                    "$ref":"#/definitions/timeRecordGroups-timeRecords",
                    "description":"The timeRecords resource is a unique identifier for the time record sent using the time records REST API. It corresponds to either a range expressed as start and stop times or a quantity in hours or units, along with any associated attribution that details the kind of work performed.<br>This resource is currently under controlled availability.",
                    "title":"Time Records"
                },
                "timeStatuses":{
                    "$ref":"#/definitions/timeRecordGroups-timeStatuses",
                    "description":"The timeStatuses resource is a unique identifier for the status of the time record group sent using the time records REST API.<br>This resource is currently under controlled availability.",
                    "title":"Time Statuses"
                },
                "totalHours":{
                    "type":"number",
                    "description":"Total number of hours reported in the time record group."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeAttributes":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeAttributes-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeAttributes-item":{
            "properties":{
                "attributeId":{
                    "type":"number",
                    "description":"Unique identifier for the time record group attribute."
                },
                "attributeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the attribute for the time record group, such as Comment."
                },
                "attributeType":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Type of the attribute of the time record group, such as Varchar."
                },
                "attributeValue":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Value of the attribute of the time record group, such as a comment text."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "timeBuildingBlockId":{
                    "type":"number",
                    "description":"Unique identifier for the time record group with specified attributes."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group with specified attributes."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeMessages":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeMessages-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeMessages-item":{
            "properties":{
                "allowedException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Indicator that determines whether to allow the exception associated with the time record group."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageCode":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Code of the message associated with the time record group."
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message associated with the time record group."
                },
                "messageText":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Text of the message associated with the time record group."
                },
                "severity":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Severity of the message associated with the time record group."
                },
                "timeBuildingBlockId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group with specified messages."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group with specified messages."
                },
                "timeMessageTokens":{
                    "$ref":"#/definitions/timeRecordGroups-timeMessages-timeMessageTokens",
                    "description":"The timeMessageTokens resource is a unique identifier for the token of the message associated with the time record group.<br>This resource is currently under controlled availability.",
                    "title":"Time Message Tokens"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeMessages-timeMessageTokens":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeMessages-timeMessageTokens-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeMessages-timeMessageTokens-item":{
            "properties":{
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message of the defined token."
                },
                "messageTokenId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message token."
                },
                "tokenName":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Name of the token for the message associated with the time record group."
                },
                "tokenValue":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Value of the token for the message associated with the time record group."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecordGroups":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeRecordGroups-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecordGroups-item":{
            "properties":{
                "assignmentNumber":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Assignment number of the person associated with the time record group."
                },
                "comment":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Comment associated with the time record group."
                },
                "groupType":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Layer where time record groups are retrieved from, such as processed time card or posted schedule day."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "parentTimeRecordGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group parent."
                },
                "parentTimeRecordGroupVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group parent stored in the WFM time repository."
                },
                "personId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the person associated with the time record group."
                },
                "personNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number of the person assigned with the time record group."
                },
                "timeRecordGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group."
                },
                "timeRecordGroupVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group stored in the WFM time repository."
                },
                "totalHours":{
                    "type":"number",
                    "description":"Total number of hours reported in the time record group."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeRecords-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-item":{
            "properties":{
                "assignmentNumber":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Assignment number of the person associated with the time record."
                },
                "comment":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Comment associated with the time record."
                },
                "groupType":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Layer where time record groups are retrieved from, such as processed time or posted schedule shift."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "measure":{
                    "type":"number",
                    "description":"Quantity of the time record, either hours or units."
                },
                "personId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the person associated with the time record."
                },
                "personNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number of the person associated with the time record."
                },
                "recordType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of the time record, either measure or range."
                },
                "referenceDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use to process a time record that spans multiple days."
                },
                "timeAttributes":{
                    "$ref":"#/definitions/timeRecordGroups-timeRecords-timeAttributes",
                    "description":"The timeAttributes resource is a qualifier associated with the time record group that reflects how time is recorded as an information entry. For example, a comment can be attached to the time record group.<br>This resource is currently under controlled availability.",
                    "title":"Time Attributes"
                },
                "timeMessages":{
                    "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages",
                    "description":"The timeMessages resource is a unique identifier for the message associated with the time record group. A message gives some information on the time record group resulting from rules or validations.<br>This resource is currently under controlled availability.",
                    "title":"Time Messages"
                },
                "timeRecordGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group containing the reported time record."
                },
                "timeRecordGroupVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group stored in the WFM time repository."
                },
                "timeRecordId":{
                    "type":"number",
                    "description":"Unique identifier for the time record."
                },
                "timeRecordVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record stored in the WFM time repository."
                },
                "timeStatuses":{
                    "$ref":"#/definitions/timeRecordGroups-timeRecords-timeStatuses",
                    "description":"The timeStatuses resource is a unique identifier for the status of the time record group sent using the time records REST API.<br>This resource is currently under controlled availability.",
                    "title":"Time Statuses"
                },
                "unitOfMeasure":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unit of measure for the time record such as hours or units."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeAttributes":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeRecords-timeAttributes-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeAttributes-item":{
            "properties":{
                "attributeId":{
                    "type":"number",
                    "description":"Unique identifier for the time record group attribute."
                },
                "attributeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the attribute for the time record group, such as Comment."
                },
                "attributeType":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Type of the attribute of the time record group, such as Varchar."
                },
                "attributeValue":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Value of the attribute of the time record group, such as a comment text."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "timeBuildingBlockId":{
                    "type":"number",
                    "description":"Unique identifier for the time record group with specified attributes."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group with specified attributes."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeMessages":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeMessages-item":{
            "properties":{
                "allowedException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Indicator that determines whether to allow the exception associated with the time record group."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageCode":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Code of the message associated with the time record group."
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message associated with the time record group."
                },
                "messageText":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Text of the message associated with the time record group."
                },
                "severity":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Severity of the message associated with the time record group."
                },
                "timeBuildingBlockId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group with specified messages."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group with specified messages."
                },
                "timeMessageTokens":{
                    "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages-timeMessageTokens",
                    "description":"The timeMessageTokens resource is a unique identifier for the token of the message associated with the time record group.<br>This resource is currently under controlled availability.",
                    "title":"Time Message Tokens"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeMessages-timeMessageTokens":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages-timeMessageTokens-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeMessages-timeMessageTokens-item":{
            "properties":{
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message of the defined token."
                },
                "messageTokenId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message token."
                },
                "tokenName":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Name of the token for the message associated with the time record group."
                },
                "tokenValue":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Value of the token for the message associated with the time record group."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeStatuses":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeRecords-timeStatuses-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeRecords-timeStatuses-item":{
            "properties":{
                "displayValue":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Value displayed for the status of the time record group, such as Submitted."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "statusCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Code of the status of the time record group, such as D_TM_UI_STATUS."
                },
                "statusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the status of the time record group."
                },
                "statusName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the status of the time record group, such as Time Card UI Status."
                },
                "statusValue":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value of the status of the time record group, such as SUBMITTED."
                },
                "timeBuildingBlockId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group with specified status."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group with specified status."
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeStatuses":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecordGroups-timeStatuses-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecordGroups-timeStatuses-item":{
            "properties":{
                "displayValue":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Value displayed for the status of the time record group, such as Submitted."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "statusCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Code of the status of the time record group, such as D_TM_UI_STATUS."
                },
                "statusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the status of the time record group."
                },
                "statusName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the status of the time record group, such as Time Card UI Status."
                },
                "statusValue":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value of the status of the time record group, such as SUBMITTED."
                },
                "timeBuildingBlockId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group with specified status."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group with specified status."
                }
            },
            "type":"object"
        },
        "jobFamilies":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/jobFamilies-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "jobFamilies-JobFamilyDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/jobFamilies-JobFamilyDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "jobFamilies-JobFamilyDFF-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield.",
                    "title":"Effective Start Date"
                },
                "JobFamilyId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Descriptive flexfield."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield."
                },
                "_FLEX_ValidationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield.",
                    "title":"Context"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobFamilies/{jobFamiliesUniqID}/child/JobFamilyDFF/{JobFamilyDFFUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for job family."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for job family."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "jobFamilies-item":{
            "properties":{
                "ActiveStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a job family is active or inactive.",
                    "title":"Status"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the job family is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the job family is effective.",
                    "title":"Effective Start Date"
                },
                "JobFamilyDFF":{
                    "$ref":"#/definitions/jobFamilies-JobFamilyDFF",
                    "description":"The JobFamilyDFF resource is a child of the jobFamilies resource. It includes all job family flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Job Family Descriptive Flexfields"
                },
                "JobFamilyId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key column."
                },
                "JobFamilyName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the job family.",
                    "title":"Name"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"ActiveStatus LOV",
                    "description":"The list of values for the status of a job family, such as ACTIVE or INACTIVE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActiveStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobFamilies/{jobFamiliesUniqID}/lov/ActiveStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActiveStatus"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "emps":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-assignments":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-assignments-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-assignments-assignmentDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-assignments-assignmentDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-assignments-assignmentDFF-item":{
            "properties":{
                "AssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Descriptive flexfield for assignment.",
                    "title":"Assignment ID"
                },
                "AssignmentType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield for assignment.",
                    "title":"Assignment Type"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for assignment."
                },
                "EffectiveLatestChange":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield for assignment.",
                    "title":"Effective Latest Change"
                },
                "EffectiveSequence":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield for assignment.",
                    "title":"Effective Sequence"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for assignment."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield for assignment."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield for assignment."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/assignmentDFF/{assignmentDFFUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for assignment."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for assignment."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "emps-assignments-assignmentExtraInformation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-assignments-assignmentExtraInformation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-assignments-assignmentExtraInformation-item":{
            "properties":{
                "AssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Extensible flexfield for assignment.",
                    "title":"Assignment ID"
                },
                "AssignmentType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Extensible flexfield for assignment.",
                    "title":"Assignment Type"
                },
                "CategoryCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Extensible flexfield for assignment."
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Extensible flexfield for assignment."
                },
                "EffectiveLatestChange":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Extensible flexfield for assignment.",
                    "title":"Effective Latest Change"
                },
                "EffectiveSequence":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Extensible flexfield for assignment.",
                    "title":"Effective Sequence"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Extensible flexfield for assignment."
                },
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Used to implement optimistic locking. This number is incremented every time the row is updated. The number is compared at the start and end of each transaction to detect whether another session has updated the row from the time it was queried."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "emps-assignments-empreps":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-assignments-empreps-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-assignments-empreps-item":{
            "properties":{
                "AsgResponsibilityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the system-generated area of responsibility."
                },
                "AssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Internal identifier for the assignment.",
                    "title":"Assignment ID"
                },
                "PersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Internal identifier for the person."
                },
                "ResponsibilityName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name that uniquely indentifies an area of responsibility."
                },
                "ResponsibilityTypeCode":{
                    "type":"string",
                    "description":"Identifier of the responsibility type for which this record is holding the criteria . The value is validated against HCM_LOOKUPS with the lookup type 'PER_RESPONSIBILITY_TYPES'."
                },
                "ResponsibilityTypeName":{
                    "type":"string",
                    "description":"Name of the responsibility type for which this record is holding the criteria, for example, Benefits Representative) ."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "emps-assignments-item":{
            "properties":{
                "ActionCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Action performed on a particular record. For example, HIRE, ADD PENDING WORKER, MANAGER CHANGE, and so on.",
                    "title":"Action Code"
                },
                "ActionReasonCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"User-defined code for the action reason. Specifies the reason for the action performed on the record.",
                    "title":"Reason Code"
                },
                "ActualTerminationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Actual date of termination of employment. This is mandatory during Termination, when the TerminateWorkRelationshipFlag is set to 'Y'."
                },
                "AssignmentCategory":{
                    "maxLength":30,
                    "type":"string",
                    "description":"User-defined category, for example, Full-Time Permanent or Part-Time Permanent. Lookup Type = 'EMP_CAT'.",
                    "title":"Assignment Category"
                },
                "AssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for an assignment. This is a system-generated primary key (surrogate key).",
                    "title":"Assignment ID"
                },
                "AssignmentName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the Assignment.",
                    "title":"Assignment Name"
                },
                "AssignmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Unique identifier for the assignment or terms. Valid for workers and nonworkers.",
                    "title":"Assignment Number"
                },
                "AssignmentProjectedEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"The date the assignment is expected to end.",
                    "title":"Projected End Date"
                },
                "AssignmentStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Assignment status of the record. For example, Active or Inactive.",
                    "title":"Assignment Status"
                },
                "AssignmentStatusTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the user-defined assignment status."
                },
                "BusinessUnitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Determinant for 'Set Enabled' tables and those using BU as a partitioning key."
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of creation of the employee assignment record."
                },
                "DepartmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the department."
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the employee assignment is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the employee assignment is effective."
                },
                "EndTime":{
                    "maxLength":5,
                    "type":"string",
                    "description":"Work day normal end time.",
                    "title":"End Time"
                },
                "Frequency":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Frequency of normal working hours - week, month, year. Valid values are defined in the list FREQUENCY.",
                    "title":"Frequency"
                },
                "FullPartTime":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates whether the position the employee is hired for is full-time or part-time.",
                    "title":"Full Time or Part Time"
                },
                "GradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the grade."
                },
                "GradeLadderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the grade ladder."
                },
                "JobId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the job."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of update of the employee assignment record."
                },
                "LegalEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the legal entity."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the location."
                },
                "ManagerAssignmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the manager's assignment.",
                    "title":"Manager Assignment ID"
                },
                "ManagerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for a manager.",
                    "title":"Manager ID"
                },
                "ManagerType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Role of the manager with regards to the overall organization structure. For example, functional, project leader, and so on.",
                    "title":"Type"
                },
                "OriginalHireDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Original date of hire for employment."
                },
                "PeriodOfServiceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key."
                },
                "PersonTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for a person type."
                },
                "PositionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for a position."
                },
                "PrimaryAssignmentFlag":{
                    "type":"boolean",
                    "description":"Indicates if the current assignment is the primary assignment. Valid values are Yes and No.",
                    "title":"Primary"
                },
                "PrimaryWorkRelationFlag":{
                    "type":"boolean",
                    "description":"Indicates if the current work relationship  is the primary. Valid values are Yes and No.",
                    "title":"Primary"
                },
                "PrimaryWorkTermsFlag":{
                    "type":"boolean",
                    "description":"Indicates if the current employment terms are the primary. Valid values are Yes and No.",
                    "title":"Primary employment terms"
                },
                "ProbationPeriodEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"End date of probation period.",
                    "title":"Probation End Date"
                },
                "ProbationPeriodLength":{
                    "type":"number",
                    "description":"Duration of probation period.",
                    "title":"Probation Period"
                },
                "ProbationPeriodUnitOfMeasure":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Units for the probation period duration. Valid values are defined in the list QUALIFYING_UNITS.",
                    "title":"Probation Unit"
                },
                "ProjectedStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Proposed start date for the pending worker.",
                    "title":"Projected Start Date"
                },
                "ProposedPersonTypeId":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Unique identifier for the worker class. This value is valid only if the PersonTypeId is Pending Worker. It can be any of the Employee or Contingent Worker types.",
                    "title":"Proposed Person Type"
                },
                "RegularTemporary":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates whether the position the employee is hired for is regular or temporary.",
                    "title":"Regular or Temporary"
                },
                "SalaryAmount":{
                    "type":"number",
                    "description":"Salary amount entered based on the salary frequency.",
                    "title":"Salary Amount"
                },
                "SalaryBasisId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the set of details linked to a worker's base pay. It identifies the payroll characteristics used to pay base earnings, the duration for which base pay is quoted, the factor used to annualize base pay, any components used to attribute base pay adjustments to different reasons, and any associated grade rate for salary validation."
                },
                "SalaryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Identifies if the assignment is paid by the hour or by a salary. Either maintained at the assignment level or employment/placement terms but not both.",
                    "title":"Hourly Paid or Salaried"
                },
                "StartTime":{
                    "maxLength":5,
                    "type":"string",
                    "description":"Work day normal start time.",
                    "title":"Start Time"
                },
                "TermsEffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the employee term is effective."
                },
                "WorkTaxAddressId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the address that is used for taxation purposes. This can be different from a mailing address."
                },
                "WorkerCategory":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the worker, for example, Blue Collar, Civil Servant, and so on. Valid values are defined in the list EMPLOYEE_CATG.",
                    "title":"Worker Category"
                },
                "WorkingAsManager":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if the person is a manager. Valid values are Yes and No.",
                    "title":"Working as a Manager"
                },
                "WorkingAtHome":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if the person is working at home. Valid values are Yes and No.",
                    "title":"Working at Home"
                },
                "WorkingHours":{
                    "type":"number",
                    "description":"Normal working hours.",
                    "title":"Working Hours"
                },
                "assignmentDFF":{
                    "$ref":"#/definitions/emps-assignments-assignmentDFF",
                    "description":"The assignmentDFF resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes a list of all employee assignment key flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Assignment Descriptive Flexfields"
                },
                "assignmentExtraInformation":{
                    "$ref":"#/definitions/emps-assignments-assignmentExtraInformation",
                    "description":"The assignmentExtraInformation resource is a child of the emps resource. It includes a list of all the extensible flexfields for additional assignment information as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Assignment Extra Information Extensible FlexFields"
                },
                "empreps":{
                    "$ref":"#/definitions/emps-assignments-empreps",
                    "description":"The empreps resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes a list of all employee representatives as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Employee Representatives"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "peopleGroupKeyFlexfield":{
                    "$ref":"#/definitions/emps-assignments-peopleGroupKeyFlexfield",
                    "description":"The peopleGroupKeyFlexfield resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes a list of all employee assignment key flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"People Group Key Flexfields"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"PersonTypeId LOV",
                    "description":"The list of values for the worker class, such as CONSULTANT, TRAINEE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PersonTypeId; Target Attribute: PersonTypeId</li><li>Display Attribute: PersonTypeId</li><li>Display Attribute: SystemPersonType</li><li>Display Attribute: UserPersonType</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/PersonTypeIdLOV?fields=PersonTypeId,SystemPersonType,UserPersonType",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PersonTypeId":{
                                "type":"integer",
                                "description":"Unique Identifier for a persontypes."
                            },
                            "SystemPersonType":{
                                "type":"string",
                                "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Contingent worker, Employee."
                            },
                            "UserPersonType":{
                                "type":"string",
                                "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Assignee, Consultant, Expatriate, Agency/Temp, Intern, Apprentice, Contractor, Trainee."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PersonTypeId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProposedPersonTypeId LOV",
                    "description":"The list of values for the proposed person type, such as CONSULTANT, CONTRACTOR, EMPLOYEE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProposedPersonTypeId; Target Attribute: PersonTypeId</li><li>Display Attribute: PersonTypeId</li><li>Display Attribute: SystemPersonType</li><li>Display Attribute: UserPersonType</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ProposedPersonTypeIdLOV?fields=PersonTypeId,SystemPersonType,UserPersonType",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PersonTypeId":{
                                "type":"integer",
                                "description":"Unique identifier for a person type."
                            },
                            "SystemPersonType":{
                                "type":"string",
                                "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Contingent Worker, Employee."
                            },
                            "UserPersonType":{
                                "type":"string",
                                "description":"Worker class. This is defined either at the assignment level or in the employment terms, and defaults from the person-organization relationship. For example, Assignee, Consultant, Expatriate, Agency/Temp, Intern, Apprentice, Contractor, Trainee."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProposedPersonTypeId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"BusinessUnitId LOV",
                    "description":"The list of values for business units.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BusinessUnitId; Target Attribute: BusinessUnitId</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/BusinessUnitIdLOV?fields=BusinessUnitId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "BusinessUnitId":{
                                "type":"integer",
                                "description":"Determinant for 'Set Enabled' tables and those using BU as a partitioning key."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "BusinessUnitId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LocationId LOV",
                    "description":"The list of values for locations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LocationId; Target Attribute: LocationId</li><li>Display Attribute: LocationId</li><li>Display Attribute: LocationName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/LocationIdLOV?fields=LocationId,LocationName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LocationId":{
                                "type":"integer",
                                "description":"Unique identifier for a location."
                            },
                            "LocationName":{
                                "type":"string",
                                "description":"Name of a location."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LocationId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"JobId LOV",
                    "description":"The list of values for jobs.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: JobId; Target Attribute: JobId</li><li>Display Attribute: JobId</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/JobIdLOV?fields=JobId,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "JobId":{
                                "type":"integer",
                                "description":"Unique identifier for a job."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of a job."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "JobId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"GradeId LOV",
                    "description":"The list of values for grades.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: GradeId; Target Attribute: GradeId</li><li>Display Attribute: GradeId</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/GradeIdLOV?fields=GradeId,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "GradeId":{
                                "type":"integer",
                                "description":"Unique identifier for a grade."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of a grade."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "GradeId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DepartmentId LOV",
                    "description":"The list of values for departments.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DepartmentId; Target Attribute: OrganizationId</li><li>Display Attribute: OrganizationId</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/DepartmentIdLOV?fields=OrganizationId,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Unique identifier for a department."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of a department."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DepartmentId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"WorkerCategory LOV",
                    "description":"The list of values for worker category.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WorkerCategory; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/WorkerCategoryLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "WorkerCategory"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AssignmentCategory LOV",
                    "description":"The list of values for assignment category.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssignmentCategory; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/AssignmentCategoryLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AssignmentCategory"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SalaryCode LOV",
                    "description":"The list of values for salary code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalaryCode; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/SalaryCodeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SalaryCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Frequency LOV",
                    "description":"The list of values for frequency of working hours, such as HOURLY or WEEKLY.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Frequency; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/FrequencyLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Frequency"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SalaryBasisId LOV",
                    "description":"The list of values for salary basis.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalaryBasisId; Target Attribute: SalaryBasisId</li><li>Display Attribute: SalaryBasisId</li><li>Display Attribute: SalaryBasisCode</li><li>Display Attribute: SalaryBasisName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/SalaryBasisIdLOV?fields=SalaryBasisId,SalaryBasisCode,SalaryBasisName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "SalaryBasisId":{
                                "type":"integer",
                                "description":"Identifier for the set of details linked to a worker's base pay. It identifies the payroll characteristics used to pay base earnings, the duration for which base pay is quoted, the factor used to annualize base pay, any components used to attribute base pay adjustments to different reasons, and any associated grade rate for salary validation."
                            },
                            "SalaryBasisCode":{
                                "type":"string",
                                "description":"Code for the salary basis."
                            },
                            "SalaryBasisName":{
                                "type":"string",
                                "description":"Name of the salary basis."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SalaryBasisId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ActionCode LOV",
                    "description":"The list of values for the action performed on a specific record.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActionCode; Target Attribute: ActionCode</li><li>Display Attribute: ActionCode</li><li>Display Attribute: ActionId</li><li>Display Attribute: ActionName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ActionCodeLOV?fields=ActionCode,ActionId,ActionName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ActionCode":{
                                "type":"string",
                                "description":"Unique code for the action performed on a particular record. For example, HIRE, ADD PENDING WORKER, MANAGER CHANGE, and so on."
                            },
                            "ActionId":{
                                "type":"integer",
                                "description":"Unique identifier for the action performed on a particular record."
                            },
                            "ActionName":{
                                "type":"string",
                                "description":"Name of the action performed on a particular record."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActionCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ActionReasonCode LOV",
                    "description":"The list of values for the action reason.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActionReasonCode; Target Attribute: ActionReasonCode</li><li>Display Attribute: ActionReasonCode</li><li>Display Attribute: ActionReasonId</li><li>Display Attribute: ActionReason</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ActionReasonCodeLOV?fields=ActionReasonCode,ActionReasonId,ActionReason",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ActionReasonCode":{
                                "type":"string",
                                "description":"User-defined code for the action reason."
                            },
                            "ActionReasonId":{
                                "type":"integer",
                                "description":"Unique identifier for the action reason."
                            },
                            "ActionReason":{
                                "type":"string",
                                "description":"Description for the action reason."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActionReasonCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AssignmentStatus LOV",
                    "description":"The list of values for the status of the assignment.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssignmentStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/AssignmentStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AssignmentStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"WorkTaxAddressId LOV",
                    "description":"The list of values for the address that is used for taxation purposes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WorkTaxAddressId; Target Attribute: AddressId</li><li>Display Attribute: AddressId</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/WorkTaxAddressIdLOV?fields=AddressId,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "AddressId":{
                                "type":"integer",
                                "description":"Unique identifier for the address that is used for taxation purposes. This can be different from a mailing address."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "WorkTaxAddressId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PositionId LOV",
                    "description":"The list of values for positions.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PositionId; Target Attribute: PositionId</li><li>Display Attribute: PositionId</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/PositionIdLOV?fields=PositionId,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PositionId":{
                                "type":"integer",
                                "description":"Unique identifier for a position."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of a position."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PositionId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ManagerId LOV",
                    "description":"The list of values for managers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ManagerId; Target Attribute: PersonId</li><li>Display Attribute: PersonId</li><li>Display Attribute: DisplayName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/ManagerIdLOV?fields=PersonId,DisplayName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PersonId":{
                                "type":"integer",
                                "description":"Unique identifier for a manager."
                            },
                            "DisplayName":{
                                "type":"string",
                                "description":"Name of a manager."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ManagerId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"FullPartTime LOV",
                    "description":"The list of values indicating whether the assignment is full time or part time.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FullPartTime; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/FullPartTimeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "FullPartTime"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"RegularTemporary LOV",
                    "description":"The list of values indicating whether the assignment is regular or temporary.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RegularTemporary; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/lov/RegularTemporaryLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RegularTemporary"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "emps-assignments-peopleGroupKeyFlexfield":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-assignments-peopleGroupKeyFlexfield-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-assignments-peopleGroupKeyFlexfield-item":{
            "properties":{
                "EnabledFlag":{
                    "type":"boolean",
                    "description":"Key flexfield."
                },
                "EndDateActive":{
                    "format":"date",
                    "type":"string",
                    "description":"Key flexfield."
                },
                "FND_ACFF_ConcatenatedStorage":{
                    "type":"string",
                    "description":"Key flexfield."
                },
                "FND_ACFF_Delimiter":{
                    "type":"string",
                    "description":"Key flexfield."
                },
                "StartDateActive":{
                    "format":"date",
                    "type":"string",
                    "description":"Key flexfield."
                },
                "_FLEX_StructureInstanceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Key flexfield."
                },
                "_FLEX_StructureInstanceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Key flexfield."
                },
                "_ID_FLEX_NUM":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Key flexfield."
                },
                "_PEOPLE_GROUP_ID":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Key flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "emps-directReports":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-directReports-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-directReports-item":{
            "properties":{
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the employee direct report is effective."
                },
                "FullName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Full name of the manager."
                },
                "ManagerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Internal identifier for the manager."
                },
                "PersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Internal identifier for the person."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "emps-item":{
            "properties":{
                "AddressLine1":{
                    "maxLength":240,
                    "type":"string",
                    "description":"First line of the primary mailing address.",
                    "title":"Address Line 1"
                },
                "AddressLine2":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Second line of the primary mailing address.",
                    "title":"Address Line 2"
                },
                "AddressLine3":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Third line of the primary mailing address.",
                    "title":"Address Line 3"
                },
                "CitizenshipId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key. Surrogate key."
                },
                "CitizenshipLegislationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Legislation code derived from the legal entity.",
                    "title":"Nationality"
                },
                "CitizenshipStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status of person citizenship.",
                    "title":"Citizenship Status"
                },
                "CitizenshipToDate":{
                    "format":"date",
                    "type":"string",
                    "description":"End date of citizenship.",
                    "title":"To Date"
                },
                "City":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Town or city in which the address is located.",
                    "title":"Town or City"
                },
                "CorrespondenceLanguage":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Preferred language for communication.",
                    "title":"Correspondence Language"
                },
                "Country":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Country in which the address is located.",
                    "title":"Country"
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of the creation of the employee record."
                },
                "DateOfBirth":{
                    "format":"date",
                    "type":"string",
                    "description":"Date of birth of the person.",
                    "title":"Date of Birth"
                },
                "DisplayName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Person's display name.",
                    "title":"Name"
                },
                "DriversLicenseExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Expiration date of the driver's license.",
                    "title":"To Date"
                },
                "DriversLicenseId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key. Surrogate key."
                },
                "DriversLicenseIssuingCountry":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country that issued the driver's license.",
                    "title":"Issuing Country"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the employee is effective.",
                    "title":"Effective Start Date"
                },
                "Ethnicity":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Person ethnicity for the legislation code.",
                    "title":"Ethnicity"
                },
                "FirstName":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Person's first name.",
                    "title":"First Name"
                },
                "Gender":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Person's gender.",
                    "title":"Gender"
                },
                "HireDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Employee hire date."
                },
                "HomeFaxAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Area code of the phone number for the home fax machine.",
                    "title":"Area Code"
                },
                "HomeFaxCountryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country code of the phone number for the home fax machine.",
                    "title":"Country Code"
                },
                "HomeFaxExtension":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Extension of the phone number for the home fax machine.",
                    "title":"Extension"
                },
                "HomeFaxNumber":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Phone number for the home fax machine.",
                    "title":"Number"
                },
                "HomePhoneAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Area code of the home phone number.",
                    "title":"Area Code"
                },
                "HomePhoneCountryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country code of the home phone number.",
                    "title":"Country Code"
                },
                "HomePhoneExtension":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Extension of the home phone number.",
                    "title":"Extension"
                },
                "HomePhoneNumber":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Home phone number.",
                    "title":"Number"
                },
                "Honors":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Higher qualification appended to a person's name.",
                    "title":"Honors"
                },
                "LastName":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Person's last name.",
                    "title":"Last Name"
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of the update of the employee record."
                },
                "LegalEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the legal entity."
                },
                "LicenseNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Person's driving license number.",
                    "title":"License Number"
                },
                "MaritalStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Person's marital status.",
                    "title":"Marital Status"
                },
                "MiddleName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Person's middle name.",
                    "title":"Middle Names"
                },
                "MilitaryVetStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if the person is on military service. Valid values are Yes and No."
                },
                "NameSuffix":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Part of the name appended to a person's last name.",
                    "title":"Suffix"
                },
                "NationalId":{
                    "maxLength":30,
                    "type":"string",
                    "description":"System-generated part of primary key for the national identifier. Surrogate key.",
                    "title":"National ID"
                },
                "NationalIdCountry":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country of nationality.",
                    "title":"Place of Issue"
                },
                "NationalIdExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Expiration date of the national identifier.",
                    "title":"Expiration Date"
                },
                "NationalIdType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of national identifier.",
                    "title":"National ID Type"
                },
                "PassportExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Expiration date of the passport.",
                    "title":"Expiration Date"
                },
                "PassportId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key. Surrogate key."
                },
                "PassportIssueDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date of issue of passport.",
                    "title":"Issue Date"
                },
                "PassportIssuingCountry":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country that issued the passport.",
                    "title":"Issuing Country"
                },
                "PassportNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Person's passport number.",
                    "title":"Number"
                },
                "PersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Internal identifier for the person.",
                    "title":"Person ID"
                },
                "PersonNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number assigned to a person to identify the person uniquely. Does not depend on the person type (employee, contingent worker, etc). Search on this attribute is not case sensitive.",
                    "title":"Person Number"
                },
                "PostalCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Postal code of the address.",
                    "title":"Postal Code"
                },
                "PreferredName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Person's preferred first name.",
                    "title":"Known As"
                },
                "PreviousLastName":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Previous last name of the person, if any.",
                    "title":"Previous Last Name"
                },
                "ProjectedTerminationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Projected termination date for the worker."
                },
                "Region":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Primary region in which the address is located.",
                    "title":"Region 1"
                },
                "Region2":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Secondary region within the primary region.",
                    "title":"Region 2"
                },
                "Religion":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Person's religion.",
                    "title":"Religion"
                },
                "ReligionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key. Surrogate key."
                },
                "Salutation":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Person salutation.",
                    "title":"Title"
                },
                "TerminationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Employee termination date."
                },
                "UserName":{
                    "maxLength":100,
                    "type":"string",
                    "description":"User name for the user record. This value is optional, and is automatically generated if not specified. Also works with UsernameMatching attribute.  Search on this attribute is not case sensitive."
                },
                "WorkEmail":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Person's work email address. Not marked as mandatory to allow creation of a first row for every person even when email address is not provided. Search on this attribute is not case sensitive.",
                    "title":"E-Mail"
                },
                "WorkFaxAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Area code of the phone number for the work fax machine.",
                    "title":"Area Code"
                },
                "WorkFaxCountryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country code of the phone number for the work fax machine.",
                    "title":"Country Code"
                },
                "WorkFaxExtension":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Extension of the phone number for the work fax machine.",
                    "title":"Extension"
                },
                "WorkFaxNumber":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Phone number for the home fax machine.",
                    "title":"Number"
                },
                "WorkMobilePhoneAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Area code of the work mobile phone number.",
                    "title":"Area Code"
                },
                "WorkMobilePhoneCountryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country code of the work mobile phone number.",
                    "title":"Country Code"
                },
                "WorkMobilePhoneExtension":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Extension of the work mobile phone number.",
                    "title":"Extension"
                },
                "WorkMobilePhoneNumber":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Work mobile phone number.",
                    "title":"Number"
                },
                "WorkPhoneAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Area code of the work phone number.",
                    "title":"Area Code"
                },
                "WorkPhoneCountryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country code of the work phone number.",
                    "title":"Country Code"
                },
                "WorkPhoneExtension":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Extension of the work phone number.",
                    "title":"Extension"
                },
                "WorkPhoneNumber":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Work phone number.",
                    "title":"Number"
                },
                "WorkerType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Primary type of a worker: employee (\"E\"), contingent worker (\"C\"), pending worker (\"P\"), or non-worker (\"N\")."
                },
                "assignments":{
                    "$ref":"#/definitions/emps-assignments",
                    "description":"The assignments resource is a child of the emps resource. It includes a list of all employee assignments as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Assignments"
                },
                "directReports":{
                    "$ref":"#/definitions/emps-directReports",
                    "description":"The directReports resource is a child of the emps resource. It includes a list of all employee direct reports as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Direct Reports"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "personDFF":{
                    "$ref":"#/definitions/emps-personDFF",
                    "description":"The personDFF resource is a child of the emps resource. It includes a list of all employee descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Person Descriptive Flexfields"
                },
                "personExtraInformation":{
                    "$ref":"#/definitions/emps-personExtraInformation",
                    "description":"The personExtraInformation resource is a child of the emps resource. It includes a list of all the extensible flexfields for additional person information as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Person Extra Information Extensible FlexFields"
                },
                "photo":{
                    "$ref":"#/definitions/emps-photo",
                    "description":"The photo resource is a child of the emps resource. It includes a list of all employee primary photos as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Photos"
                },
                "roles":{
                    "$ref":"#/definitions/emps-roles",
                    "description":"The roles resource is a child of the emps resource. It includes a list of all employee roles as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Roles"
                },
                "visas":{
                    "$ref":"#/definitions/emps-visas",
                    "description":"The visas resource is a child of the emps resource. It includes a list of all employee visas as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Visas"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"Salutation LOV",
                    "description":"The list of values for person salutation.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Salutation; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/SalutationLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Salutation"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CorrespondenceLanguage LOV",
                    "description":"The list of values for the preferred language of communication.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CorrespondenceLanguage; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/CorrespondenceLanguageLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CorrespondenceLanguage"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Ethnicity LOV",
                    "description":"The list of values for person ethnicity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Ethnicity; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/EthnicityLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Ethnicity"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LegalEntityId LOV",
                    "description":"The list of values for legal entities.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LegalEntityId; Target Attribute: OrganizationId</li><li>Display Attribute: OrganizationId</li><li>Display Attribute: LegalEntityId</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/LegalEmployerLOV?fields=OrganizationId,LegalEntityId,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Unique identifier for the organization."
                            },
                            "LegalEntityId":{
                                "type":"integer",
                                "description":"Unique identifier for the legal entity."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the legal entity."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LegalEntityId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Gender LOV",
                    "description":"The list of values for gender such as MALE or FEMALE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Gender; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/GenderLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Gender"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"MaritalStatus LOV",
                    "description":"The list of values for marital status, such as MARRIED or SINGLE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MaritalStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/MaritalStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "MaritalStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"NationalIdType LOV",
                    "description":"The list of values for national identifiers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NationalIdType; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/NationalIdTypeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "NationalIdType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CitizenshipStatus LOV",
                    "description":"The list of values for citizenship status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CitizenshipStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/CitizenshipStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CitizenshipStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CitizenshipLegislationCode LOV",
                    "description":"The list of values for the legislation code derived from the legal entity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CitizenshipLegislationCode; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/CitizenshipLegislationCodeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CitizenshipLegislationCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Religion LOV",
                    "description":"The list of values for religion.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Religion; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/ReligionLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Religion"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"MilitaryVetStatus LOV",
                    "description":"The list of values for military service status.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MilitaryVetStatus; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/lov/MilitaryVetStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "MilitaryVetStatus"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "emps-personDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-personDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-personDFF-item":{
            "properties":{
                "PersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Internal identifier for the person.",
                    "title":"Person ID"
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield for person."
                },
                "_FLEX_ValidationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for person."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield for person."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/personDFF/{PersonId}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for person."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for person."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "emps-personExtraInformation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-personExtraInformation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-personExtraInformation-item":{
            "properties":{
                "CategoryCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Extensible flexfield for person."
                },
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Used to implement optimistic locking. This number is incremented every time the row is updated. The number is compared at the start and end of a transaction to detect whether another session has updated the row from the time it was queried."
                },
                "PersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Extensible flexfield for person.",
                    "title":"Person ID"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "emps-photo":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-photo-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-photo-item":{
            "properties":{
                "Image":{
                    "format":"binary",
                    "type":"string",
                    "description":"Unique location of the image. Encrypted version of the file.",
                    "title":"Image"
                },
                "ImageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key. Surrogate key."
                },
                "ImageName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the image.",
                    "title":"Photo Name"
                },
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Used to implement optimistic locking. This number is incremented every time that the row is updated. The number is compared at the start and end of a transaction to detect whether another session has updated the row since it was queried."
                },
                "PersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Person to whom the image is associated. Foreign key to PER_ALL_PEOPLE_F."
                },
                "PrimaryFlag":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Primary image to be used."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "emps-roles":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-roles-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-roles-item":{
            "properties":{
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of creation of the employee role record."
                },
                "EndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"End date of the role."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of update of the employee role record."
                },
                "RoleCommonName":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Short name of the role."
                },
                "RoleGUID":{
                    "maxLength":64,
                    "type":"string",
                    "description":"Globally unique identifer for the role record in Oracle Fusion."
                },
                "RoleName":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the role."
                },
                "StartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Start date of the role."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"RoleGUID LOV",
                    "description":"The list of values for role.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RoleGUID; Target Attribute: RoleGuid</li><li>Display Attribute: RoleName</li><li>Display Attribute: RoleCommonName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/roles/{RoleGUID}/lov/RoleGUIDLOV?fields=RoleGuid,RoleName,RoleCommonName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "RoleGuid":{
                                "type":"string",
                                "description":"Globally unique identifer for the role record in Oracle Fusion."
                            },
                            "RoleName":{
                                "type":"string",
                                "description":"Name for the role."
                            },
                            "RoleCommonName":{
                                "type":"string",
                                "description":"Short name for the role."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RoleGUID"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "emps-visas":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/emps-visas-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "emps-visas-item":{
            "properties":{
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of the creation of the employee visa record."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time of the update of the employee visa record."
                },
                "VisaPermitCountry":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Country for which visa or permit is valid.",
                    "title":"Issuing Country"
                },
                "VisaPermitExpiration":{
                    "format":"date",
                    "type":"string",
                    "description":"Expiration date of visa or permit.",
                    "title":"Expiration Date"
                },
                "VisaPermitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated part of primary key for the visa permit. Surrogate key."
                },
                "VisaPermitNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Visa or permit number.",
                    "title":"Number"
                },
                "VisaPermitType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Visa or permit type.",
                    "title":"Type"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"VisaPermitType LOV",
                    "description":"The list of values for visa or permit type.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisaPermitType; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/visas/{VisaPermitId}/lov/VisaPermitTypeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "VisaPermitType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"VisaPermitCountry LOV",
                    "description":"The list of values for countries that issue visa.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisaPermitCountry; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/visas/{VisaPermitId}/lov/IssuingCountryLOV?fields=TerritoryCode,TerritoryShortName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "TerritoryCode":{
                                "type":"string",
                                "description":"Country for which visa or permit is valid."
                            },
                            "TerritoryShortName":{
                                "type":"string",
                                "description":"Short name of the country for which visa or permit is valid."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "VisaPermitCountry"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "timeRecords":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecords-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecords-item":{
            "properties":{
                "assignmentNumber":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Assignment number of the person associated with the time record."
                },
                "comment":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Comment associated with the time record."
                },
                "groupType":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Layer where time records are retrieved from, such as processed time or absence entry details."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "measure":{
                    "type":"number",
                    "description":"Quantity of the time record, either hours or units."
                },
                "personId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the person associated with the time record."
                },
                "personNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number of the person associated with the time record."
                },
                "recordType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of the time record, either measure or range."
                },
                "referenceDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use to process a time record that spans multiple days."
                },
                "timeAttributes":{
                    "$ref":"#/definitions/timeRecords-timeAttributes",
                    "description":"The timeAttributes resource is a qualifier associated with the time record that reflects how time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates if the time for payroll consumers must be paid.<br>This resource is currently under controlled availability.",
                    "title":"Time Attributes"
                },
                "timeMessages":{
                    "$ref":"#/definitions/timeRecords-timeMessages",
                    "description":"The timeMessages resource is a unique identifier for the message associated with the time record. A message gives some information on the time record resulting from rules or validations.<br>This resource is currently under controlled availability.",
                    "title":"Time Messages"
                },
                "timeRecordGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record group."
                },
                "timeRecordGroupVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record group stored in the WFM time repository."
                },
                "timeRecordId":{
                    "type":"number",
                    "description":"Unique identifier for the time record."
                },
                "timeRecordVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record stored in the WFM time repository."
                },
                "timeStatuses":{
                    "$ref":"#/definitions/timeRecords-timeStatuses",
                    "description":"The timeStatuses resource is a unique identifier for the status of the time record sent using the time records REST API.<br>This resource is currently under controlled availability.",
                    "title":"Time Statuses"
                },
                "unitOfMeasure":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unit of measure for the time record such as hours or units."
                }
            },
            "type":"object"
        },
        "timeRecords-timeAttributes":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecords-timeAttributes-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecords-timeAttributes-item":{
            "properties":{
                "attributeId":{
                    "type":"number",
                    "description":"Unique identifier for the time record attribute."
                },
                "attributeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the attribute of the time record, such as Payroll Time Type."
                },
                "attributeType":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Type of the attribute of the time record, such as Varchar."
                },
                "attributeValue":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Value of the attribute of the time record, such as Regular or Overtime."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "timeBuildingBlockId":{
                    "type":"number",
                    "description":"Unique identifier for the time record with specified attributes."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record with specified attributes."
                }
            },
            "type":"object"
        },
        "timeRecords-timeMessages":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecords-timeMessages-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecords-timeMessages-item":{
            "properties":{
                "allowedException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Indicator that determines whether to allow the exception associated with the time record."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageCode":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Code of the message associated with the time record."
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message associated with the time record."
                },
                "messageText":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Text of the message associated with the time record."
                },
                "severity":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Severity of the message associated with the time record."
                },
                "timeBuildingBlockId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record with specified messages."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record with specified messages."
                },
                "timeMessageTokens":{
                    "$ref":"#/definitions/timeRecords-timeMessages-timeMessageTokens",
                    "description":"The timeMessageTokens resource is a unique identifier for the token of the message associated with the time record.<br>This resource is currently under controlled availability.",
                    "title":"Time Message Tokens"
                }
            },
            "type":"object"
        },
        "timeRecords-timeMessages-timeMessageTokens":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecords-timeMessages-timeMessageTokens-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecords-timeMessages-timeMessageTokens-item":{
            "properties":{
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "messageId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message of the defined token."
                },
                "messageTokenId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the message token."
                },
                "tokenName":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Name of the token for the message associated with the time record."
                },
                "tokenValue":{
                    "maxLength":256,
                    "type":"string",
                    "description":"Value of the token for the message associated with the time record."
                }
            },
            "type":"object"
        },
        "timeRecords-timeStatuses":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/timeRecords-timeStatuses-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "timeRecords-timeStatuses-item":{
            "properties":{
                "displayValue":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Value displayed for the status of the time record, such as Approved."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "statusCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Code of the status of the time record, such as A_APP_STATUS_PYR."
                },
                "statusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the status of the time record."
                },
                "statusName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the status of the time record, such as Payroll Approval Entries Status."
                },
                "statusValue":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value of the status of the time record, such as APPROVED."
                },
                "timeBuildingBlockId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the time record with specified status."
                },
                "timeBuildingBlockVersion":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Version number of the time record with specified status."
                }
            },
            "type":"object"
        },
        "positions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/positions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "positions-PositionCustomerFlex":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/positions-PositionCustomerFlex-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "positions-PositionCustomerFlex-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for position.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for position.",
                    "title":"Effective Start Date"
                },
                "PositionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Descriptive flexfield for position."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Descriptive flexfield for position."
                },
                "_FLEX_ValidationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Descriptive flexfield for position."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield for position.",
                    "title":"Context"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfields.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/PositionCustomerFlex/{PositionCustomerFlexUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for position."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for position."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "positions-extraInformation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/positions-extraInformation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "positions-extraInformation-item":{
            "properties":{
                "CategoryCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Extensible Flexfield Category Code"
                },
                "PositionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System generated primary key column."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "positions-item":{
            "properties":{
                "BusinessUnitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Surrogate identifier for the business unit to which the position belongs.",
                    "title":"Business Unit"
                },
                "DepartmentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the department to which the position belongs."
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the position is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the position is effective.",
                    "title":"Effective Start Date"
                },
                "EntryGradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the entry grade."
                },
                "EntryStepId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the entry step."
                },
                "FTE":{
                    "type":"number",
                    "description":"Full-time equivalent for a position.",
                    "title":"FTE"
                },
                "FullPartTime":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a position is full-time or part-time.",
                    "title":"Full Time or Part Time"
                },
                "GradeLadderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade ladder."
                },
                "HeadCount":{
                    "type":"number",
                    "description":"Headcount for the position.",
                    "title":"Head Count"
                },
                "HiringStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates the hiring status of the position. For example, approved or frozen.",
                    "title":"Hiring Status"
                },
                "JobId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the job."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the location."
                },
                "Name":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the position.",
                    "title":"Name"
                },
                "OverlapAllowedFlag":{
                    "type":"boolean",
                    "description":"Indicates if overlap is allowed.",
                    "title":"Overlap Allowed"
                },
                "PositionCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Short form for a position. Used for identification purposes.",
                    "title":"Code"
                },
                "PositionCustomerFlex":{
                    "$ref":"#/definitions/positions-PositionCustomerFlex",
                    "description":"The PositionCustomerFlex resource is a child of the positions resource. It includes all position descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Position Descriptive Flexfields"
                },
                "PositionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key column."
                },
                "PositionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of position. For example, pooled or single.",
                    "title":"Type"
                },
                "ProbationPeriod":{
                    "type":"number",
                    "description":"Number of the probation period.",
                    "title":"Probation Period"
                },
                "RegularTemporary":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a position is regular or temporary.",
                    "title":"Regular or Temporary"
                },
                "SeasonalEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"End date for the seasonal position.",
                    "title":"Seasonal End Date"
                },
                "SeasonalFlag":{
                    "type":"boolean",
                    "description":"Indicates if a position is seasonal.",
                    "title":"Seasonal"
                },
                "SeasonalStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Start date for the seasonal position.",
                    "title":"Seasonal Start Date"
                },
                "SecurityClearance":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Security clearance level for a position.",
                    "title":"Security Clearance"
                },
                "extraInformation":{
                    "$ref":"#/definitions/positions-extraInformation",
                    "description":"The extraInformation resource is a child of the positions resource. It includes extensible flexfields defined for a position, identified by PER_POSITIONS_EIT_EFF code.<br>This resource is currently under controlled availability.",
                    "title":"Position Extra Information"
                },
                "legislativeExtraInformation":{
                    "$ref":"#/definitions/positions-legislativeExtraInformation",
                    "description":"The legislativeInformation resource is a child of the positions resource. It includes extensible flexfields defined for a position, identified by PER_POSITIONS_LEG_EFF code.<br>This resource is currently under controlled availability.",
                    "title":"Position Extra Legislative Information"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "validGrades":{
                    "$ref":"#/definitions/positions-validGrades",
                    "description":"The validGrades resource is a child of the positions resource. It includes all valid grades for the position, as of the specified date.<br>This resource is currently under controlled availability.",
                    "title":"Valid Grades"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"RegularTemporary LOV",
                    "description":"The list of values for the type of position, such as REGULAR or TEMPORARY.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RegularTemporary; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/lov/RegularTemporaryVA?fields=LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RegularTemporary"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"HiringStatus LOV",
                    "description":"The list of values for the hiring status of a position, such as APPROVED or FROZEN.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HiringStatus; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/lov/HiringStatusVA?fields=LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "HiringStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"FullPartTime LOV",
                    "description":"The list of values for the status of a position, such as FULL_TIME or PART_TIME.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FullPartTime; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/lov/PartTimeFullTimeVA?fields=LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "FullPartTime"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PositionType LOV",
                    "description":"The list of values for the position type, such as POOLED or SINGLE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PositionType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/lov/PositionTypeVA?fields=LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PositionType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SecurityClearance LOV",
                    "description":"The list of values for the security clearance level of a position.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SecurityClearance; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/lov/SecurityClearanceVA?fields=LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SecurityClearance"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "positions-legislativeExtraInformation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/positions-legislativeExtraInformation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "positions-legislativeExtraInformation-item":{
            "properties":{
                "CategoryCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Extensible Flexfield Category Code"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the legislative extra information is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the legislative extra information is effective.",
                    "title":"Effective Start Date"
                },
                "PositionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System generated primary key column."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "positions-validGrades":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/positions-validGrades-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "positions-validGrades-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade is effective."
                },
                "GradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "organizations":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/organizations-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "organizations-OrganizationDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/organizations-OrganizationDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "organizations-OrganizationDFF-item":{
            "properties":{
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Descriptive flexfield."
                },
                "__FLEX_Context_AKA":{
                    "type":"string",
                    "description":"Display name for the flexfield structure."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/organizations/{organizationsUniqID}/child/OrganizationDFF/{OrganizationDFFUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for organization."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for organization."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "organizations-item":{
            "properties":{
                "ClassificationCode":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Foreign key to HR_ORG_CLASSIFICATIONS table."
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the organization is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the organization is effective.",
                    "title":"Effective Start Date"
                },
                "InternalAddressLine":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Internal address of the organization.",
                    "title":"Internal Address Line"
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the location to which the organization unit belongs."
                },
                "Name":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Translated name for the organization unit.",
                    "title":"Name"
                },
                "OrganizationDFF":{
                    "$ref":"#/definitions/organizations-OrganizationDFF",
                    "description":"The OrganizationDFF resource is a child of the organizations resource. It includes a list of all organization descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Organization Descriptive Flexfields"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key column.",
                    "title":"Organization"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"ClassificationCode LOV",
                    "description":"The list of values for organization classification.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ClassificationCode; Target Attribute: ClassificationCode</li><li>Display Attribute: ClassificationCode</li><li>Display Attribute: ClassificationName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/organizations/{organizationsUniqID}/lov/OrgClassificationVA?fields=ClassificationCode,ClassificationName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ClassificationCode":{
                                "type":"string",
                                "description":"Classification of the organization unit."
                            },
                            "ClassificationName":{
                                "type":"string",
                                "description":"Name of the organization classification."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ClassificationCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LocationId LOV",
                    "description":"The list of values for location.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LocationId; Target Attribute: LocationId</li><li>Display Attribute: LocationId</li><li>Display Attribute: LocationName</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/organizations/{organizationsUniqID}/lov/LocationIdLOV?fields=LocationId,LocationName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LocationId":{
                                "type":"integer",
                                "description":"Identifier for the location to which the organization unit belongs."
                            },
                            "LocationName":{
                                "type":"string",
                                "description":"Name of the location."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LocationId"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "jobs":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/jobs-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "jobs-JobCustomerFlex":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/jobs-JobCustomerFlex-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "jobs-JobCustomerFlex-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Flexfield.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Flexfield.",
                    "title":"Effective Start Date"
                },
                "JobId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Flexfield."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Flexfield."
                },
                "_FLEX_ValidationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Flexfield.",
                    "title":"Context Value"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/child/JobCustomerFlex/{JobCustomerFlexUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for job."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for job."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "jobs-item":{
            "properties":{
                "ActiveStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a job is active or not.",
                    "title":"Status"
                },
                "ApprovalAuthority":{
                    "type":"number",
                    "description":"Integer number to identify levels across jobs which are used for approvals if the job list builder is used.",
                    "title":"Level"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the job is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the job is effective.",
                    "title":"Effective Start Date"
                },
                "FullPartTime":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a job is full-time or part-time.",
                    "title":"Full Time or Part Time"
                },
                "GradeLadderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade ladder."
                },
                "JobCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Short form for a job. Used for identification purposes.",
                    "title":"Code"
                },
                "JobCustomerFlex":{
                    "$ref":"#/definitions/jobs-JobCustomerFlex",
                    "description":"The JobCustomerFlex resource is a child of the grades resource. It includes all job flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Job Customer Flexfields"
                },
                "JobFamilyId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique key for a group of jobs having different but related functions, qualifications, and titles.",
                    "title":"Job Family"
                },
                "JobFunctionCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Code that best categorizes the job by function, such as administrative, legal, or management.",
                    "title":"Function"
                },
                "JobId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key column."
                },
                "ManagerLevel":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Level of management associated with the employee.",
                    "title":"Management Level"
                },
                "MedicalCheckupRequired":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a job requires a one-time medical checkup when the worker is hired into the job.",
                    "title":"Medical Checkup Required"
                },
                "Name":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the job.",
                    "title":"Name"
                },
                "RegularTemporary":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a job is regular or temporary.",
                    "title":"Regular or Temporary"
                },
                "SetId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Set of reference data shared across business units and other entities. Also known as Reference Data Sets, they are used to filter reference data in transactional UIs.",
                    "title":"Job Set"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "validGrades":{
                    "$ref":"#/definitions/jobs-validGrades",
                    "description":"The validGrades resource is a child of the grades resource. It includes all valid grades for the job, as of the specified date.<br>This resource is currently under controlled availability.",
                    "title":"Valid Grades"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"ActiveStatus LOV",
                    "description":"The list of values for the status of a job, such as ACTIVE or INACTIVE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActiveStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/lov/ActiveStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActiveStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"FullPartTime LOV",
                    "description":"The list of values for full-time status of a job, such as FULL-TIME or PART-TIME.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FullPartTime; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/lov/FullPartTimeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "FullPartTime"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"JobFunctionCode LOV",
                    "description":"The list of values for job category by function, such as administrative, legal, or management.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: JobFunctionCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/lov/JobFunctionLookup?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "JobFunctionCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ManagerLevel LOV",
                    "description":"The list of values for the level of management associated with the employee.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ManagerLevel; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/lov/ManagerLevelLookup?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ManagerLevel"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"MedicalCheckupRequired LOV",
                    "description":"The list of values for medical checkup requirement.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MedicalCheckupRequired; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/lov/MedicalCheckupRequiredLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "MedicalCheckupRequired"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"RegularTemporary LOV",
                    "description":"The list of values for type of job, such as REGULAR or TEMPORARY.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RegularTemporary; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/lov/RegularTemporaryLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RegularTemporary"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "jobs-validGrades":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/jobs-validGrades-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "jobs-validGrades-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade is effective."
                },
                "GradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "grades":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/grades-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "grades-GradeCustomerFlex":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/grades-GradeCustomerFlex-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "grades-GradeCustomerFlex-item":{
            "properties":{
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Flexfield.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Flexfield.",
                    "title":"Effective Start Date"
                },
                "GradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Flexfield."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"The list of values for the context of descriptive flexfield.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}/child/GradeCustomerFlex/{GradeCustomerFlexUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Descriptive flexfield for grade."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Descriptive flexfield for grade."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "grades-item":{
            "properties":{
                "ActiveStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicates if a grade is active or inactive.",
                    "title":"Status"
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade is effective.",
                    "title":"Effective End Date"
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade is effective.",
                    "title":"Effective Start Date"
                },
                "GradeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Numbers or characters that uniquely define a short form for a grade, for identification purposes."
                },
                "GradeCustomerFlex":{
                    "$ref":"#/definitions/grades-GradeCustomerFlex",
                    "description":"The GradeCustomerFlex resource is a child of the grades resource. It includes all grade flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability.",
                    "title":"Grade Customer Flexfields"
                },
                "GradeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"System-generated primary key column."
                },
                "GradeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the grade.",
                    "title":"Name"
                },
                "SetId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Set of reference data shared across business units and other entities. Also known as Reference Data Sets, they are used to filter reference data in transactional UIs."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "steps":{
                    "$ref":"#/definitions/grades-steps",
                    "description":"The steps resource is a child of the grades resource. It includes all steps, that is, incremental points, within the grade, as of the specified date.<br>This resource is currently under controlled availability.",
                    "title":"Grade Steps"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"ActiveStatus LOV",
                    "description":"The list of values for the status of a grade, such as ACTIVE or INACTIVE.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActiveStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}/lov/ActiveStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Unique code for the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ActiveStatus"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "grades-steps":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/grades-steps-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "grades-steps-item":{
            "properties":{
                "CeilingStepFlag":{
                    "type":"boolean",
                    "description":"Indicates which grade step is the ceiling step."
                },
                "EffectiveEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the end of the date range within which the grade step is effective."
                },
                "EffectiveStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date at the beginning of the date range within which the grade step is effective."
                },
                "GradeStepId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier for the grade step."
                },
                "GradeStepName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Denotes name for the grade step.",
                    "title":"Step Name"
                },
                "GradeStepSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Indicates the sequence of the steps of a grade."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "wellnessActivities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/wellnessActivities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "wellnessActivities-activitymeasures":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/wellnessActivities-activitymeasures-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "wellnessActivities-activitymeasures-item":{
            "properties":{
                "URI":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unique identifier of the activity being tracked."
                },
                "UnitURI":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unique identifier for the units used to measure the activity being tracked."
                },
                "Value":{
                    "type":"number",
                    "description":"Value of the tracked activity."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "wellnessActivities-item":{
            "properties":{
                "DeviceName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the fitness tracking device."
                },
                "StartTime":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Start time of the tracking period."
                },
                "StopTime":{
                    "format":"date-time",
                    "type":"string",
                    "description":"End time of the tracking period."
                },
                "TimePeriodUnitsURI":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unique identifier for the unit of measure of the tracking period."
                },
                "URI":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Unique identifier for the fitness tracker account."
                },
                "UserId":{
                    "maxLength":80,
                    "type":"string",
                    "description":"User ID for the fitness tracker account."
                },
                "VendorName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the vendor or manufacturer of the fitness tracking device."
                },
                "activitymeasures":{
                    "$ref":"#/definitions/wellnessActivities-activitymeasures",
                    "description":"The activityMeasures resource includes measures to track fitness activities. For example, the walking activity is tracked by the number of steps.",
                    "title":"Activity Measures"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "trackingServices":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/trackingServices-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "trackingServices-authArtifacts":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/trackingServices-authArtifacts-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "trackingServices-authArtifacts-item":{
            "properties":{
                "Artifacts":{
                    "type":"string",
                    "description":"Base64-encoded JSON object for parameters used to access the service as an authorized user."
                },
                "TrackingServiceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the tracking service."
                },
                "UserId":{
                    "maxLength":80,
                    "type":"string",
                    "description":"User ID for the authentication information."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "trackingServices-item":{
            "properties":{
                "DisplayName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the tracking service."
                },
                "Protocol":{
                    "maxLength":80,
                    "type":"string",
                    "description":"URN that identifies the service protocol or type."
                },
                "ProtocolParams":{
                    "type":"string",
                    "description":"Base64-encoded JSON object for parameters required to access the service."
                },
                "State":{
                    "maxLength":80,
                    "type":"string",
                    "description":"State of the tracking service."
                },
                "TrackingServiceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Unique identifier for the tracking service."
                },
                "Vendor":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the vendor or provider of the tracking service."
                },
                "authArtifacts":{
                    "$ref":"#/definitions/trackingServices-authArtifacts",
                    "description":"The authArtifacts resource includes authorization information required to access a tracking service as a specific user.",
                    "title":"Authorization Artifacts"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        }
    },
    "tags":[
        {
            "name":"Employees",
            "description":"The emps resource includes a list of all employees as of the specified date. By default, the current date is retained. <br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Assignments",
            "description":"The assignments resource is a child of the emps resource. It includes a list of all employee assignments as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Assignments/Assignment Descriptive Flexfields",
            "description":"The assignmentDFF resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes a list of all employee assignment key flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Assignments/Assignment Extra Information Extensible FlexFields",
            "description":"The assignmentExtraInformation resource is a child of the emps resource. It includes a list of all the extensible flexfields for additional assignment information as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Assignments/Employee Representatives",
            "description":"The empreps resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes a list of all employee representatives as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Assignments/People Group Key Flexfields",
            "description":"The peopleGroupKeyFlexfield resource is a child of the assignments resource, and hence a child of child of the emps resource. It includes a list of all employee assignment key flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Direct Reports",
            "description":"The directReports resource is a child of the emps resource. It includes a list of all employee direct reports as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Person Descriptive Flexfields",
            "description":"The personDFF resource is a child of the emps resource. It includes a list of all employee descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Person Extra Information Extensible FlexFields",
            "description":"The personExtraInformation resource is a child of the emps resource. It includes a list of all the extensible flexfields for additional person information as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Photos",
            "description":"The photo resource is a child of the emps resource. It includes a list of all employee primary photos as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Roles",
            "description":"The roles resource is a child of the emps resource. It includes a list of all employee roles as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Employees/Visas",
            "description":"The visas resource is a child of the emps resource. It includes a list of all employee visas as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Ladders",
            "description":"The gradeLadders resource includes a hierarchy of grades and steps used to identify the progression order for a grade, as of the specified date. It is also includes compensation rates associated to the hierarchy for career grade step progressions. By default, the current date is retained. <br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Ladders/Grade Ladder Descriptive Flexfields",
            "description":"The gradeLadderDFF resource is a child of the gradeLadders resource. It includes descriptive flexfields for a grade ladder, identified by PER_GRADE_LADDERS_DF code.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Ladders/Grades",
            "description":"The grades resource is a child of the gradeLadders resource. It includes all the grades that are attached to the grade ladder and also includes the order in which they are attached.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Ladders/Step Rates",
            "description":"The stepRates resource is a child of the gradeLadders resource. It includes step rates, representing pay rate that is defined for the grade steps, as of the specified date.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Ladders/Step Rates/Step Rate Values",
            "description":"The stepRateValues resource is a child of the gradeLadders resource. It includes monetary values defined for the grade steps and the given step rate, as of the specified date.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Rates",
            "description":"The gradeRates resource includes pay rates for all the grades as of the specified date. By default, the current date is retained. <br>This resource is currently under controlled availability."
        },
        {
            "name":"Grade Rates/Rate Values",
            "description":"The rateValues resource is a child of the gradeRates resource. It includes monetary values or ranges of values for all grades assigned to the grade rate, as of the specified date.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grades",
            "description":"The grades resource includes all grades as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grades/Grade Customer Flexfields",
            "description":"The GradeCustomerFlex resource is a child of the grades resource. It includes all grade flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Grades/Grade Steps",
            "description":"The steps resource is a child of the grades resource. It includes all steps, that is, incremental points, within the grade, as of the specified date.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Job Families",
            "description":"The jobFamilies resource includes all job families as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Job Families/Job Family Descriptive Flexfields",
            "description":"The JobFamilyDFF resource is a child of the jobFamilies resource. It includes all job family flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Jobs",
            "description":"The jobs resource includes all jobs as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Jobs/Job Customer Flexfields",
            "description":"The JobCustomerFlex resource is a child of the grades resource. It includes all job flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Jobs/Valid Grades",
            "description":"The validGrades resource is a child of the grades resource. It includes all valid grades for the job, as of the specified date.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Locations",
            "description":"The locations resource includes a list of all locations as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Locations/Location Descriptive Flexfields",
            "description":"The LocationDFF resource is a child of the locations resource. It includes a list of all location flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Organizations",
            "description":"The organizations resource includes a list of all organizations as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Organizations/Organization Descriptive Flexfields",
            "description":"The OrganizationDFF resource is a child of the organizations resource. It includes a list of all organization descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Positions",
            "description":"The positions resource includes all positions as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Positions/Position Descriptive Flexfields",
            "description":"The PositionCustomerFlex resource is a child of the positions resource. It includes all position descriptive flexfields as of the specified date. By default, the current date is retained.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Positions/Position Extra Information",
            "description":"The extraInformation resource is a child of the positions resource. It includes extensible flexfields defined for a position, identified by PER_POSITIONS_EIT_EFF code.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Positions/Position Extra Legislative Information",
            "description":"The legislativeInformation resource is a child of the positions resource. It includes extensible flexfields defined for a position, identified by PER_POSITIONS_LEG_EFF code.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Positions/Valid Grades",
            "description":"The validGrades resource is a child of the positions resource. It includes all valid grades for the position, as of the specified date.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Event Requests",
            "description":"The timeEventRequests resource is a unique identifier for the time event request sent by the time collection device supplier. This request can contain one or more time events.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Event Requests/Time Events",
            "description":"The timeEvents resource is a single IN or OUT time transaction that the time reporter records on a time collection device.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Event Requests/Time Events/Time Event Attributes",
            "description":"The timeEventAttributes resource is a qualifier associated with the time event that reflects how time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates if the time for payroll consumers must be paid.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Event Requests",
            "description":"The timeRecordEventRequests resource is a unique identifier for the time record event request sent using the time records REST API. This request can contain one or more time record events.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Event Requests/Time Record Events",
            "description":"The timeRecordEvent resource is a unique identifier of a time record event sent using the time records REST API. It corresponds to a time record to be posted in the repository. It is a range expressed as start and stop times or a quantity in hours or units, along with the associated attribution that details the kind of work performed.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Event Requests/Time Record Events/Time Record Event Attributes",
            "description":"The timeRecordEventAttribute resource is a qualifier associated with the time record event that reflects how time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates if the time for payroll consumers must be paid.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Event Requests/Time Record Events/Time Record Event Messages",
            "description":"The timeRecordEventMessage resource is a unique identifier for the message associated with the time record event. A message gives some information on the time record event resulting from rules or validations.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups",
            "description":"The timeRecordGroups resource is a unique identifier for the time record group sent using the time records REST API. A time record group can contain one or more time records.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Attributes",
            "description":"The timeAttributes resource is a qualifier associated with the time record group that reflects how time is recorded as an information entry. For example, a comment can be attached to the time record group.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Messages",
            "description":"The timeMessages resource is a unique identifier for the message associated with the time record group. A message gives some information on the time record group resulting from rules or validations.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Messages/Time Message Tokens",
            "description":"The timeMessageTokens resource is a unique identifier for the token of the message associated with the time record group.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Record Groups",
            "description":"The timeRecordGroups resource is a unique identifier for the time record group sent using the time records REST API. A time record group can contain one or more time records.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Records",
            "description":"The timeRecords resource is a unique identifier for the time record sent using the time records REST API. It corresponds to either a range expressed as start and stop times or a quantity in hours or units, along with any associated attribution that details the kind of work performed.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Records/Time Attributes",
            "description":"The timeAttributes resource is a qualifier associated with the time record group that reflects how time is recorded as an information entry. For example, a comment can be attached to the time record group.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Records/Time Messages",
            "description":"The timeMessages resource is a unique identifier for the message associated with the time record group. A message gives some information on the time record group resulting from rules or validations.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Records/Time Messages/Time Message Tokens",
            "description":"The timeMessageTokens resource is a unique identifier for the token of the message associated with the time record group.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Records/Time Statuses",
            "description":"The timeStatuses resource is a unique identifier for the status of the time record group sent using the time records REST API.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Record Groups/Time Statuses",
            "description":"The timeStatuses resource is a unique identifier for the status of the time record group sent using the time records REST API.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Records",
            "description":"The timeRecords resource is a unique identifier for the time record sent using the time records REST API. It corresponds to either a range expressed as start and stop times or a quantity in hours or units, along with any associated attribution that details the kind of work performed.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Records/Time Attributes",
            "description":"The timeAttributes resource is a qualifier associated with the time record that reflects how time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates if the time for payroll consumers must be paid.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Records/Time Messages",
            "description":"The timeMessages resource is a unique identifier for the message associated with the time record. A message gives some information on the time record resulting from rules or validations.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Records/Time Messages/Time Message Tokens",
            "description":"The timeMessageTokens resource is a unique identifier for the token of the message associated with the time record.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Time Records/Time Statuses",
            "description":"The timeStatuses resource is a unique identifier for the status of the time record sent using the time records REST API.<br>This resource is currently under controlled availability."
        },
        {
            "name":"Tracking Services",
            "description":"The trackingServices resource includes all external services that provide wellness-related information to the product. You can retrieve existing tracking services or create new services using this resource."
        },
        {
            "name":"Tracking Services/Authorization Artifacts",
            "description":"The authArtifacts resource includes authorization information required to access a tracking service as a specific user."
        },
        {
            "name":"Wellness Activities",
            "description":"The wellnessActivities resource includes activities that improve physical well-being. For example, walking, running, and swimming."
        },
        {
            "name":"Wellness Activities/Activity Measures",
            "description":"The activityMeasures resource includes measures to track fitness activities. For example, the walking activity is tracked by the number of steps."
        }
    ],
    "paths":{
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests":{
            "get":{
                "summary":"Get all time record event requests",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record event request using its unique identifier. Finder Variables:<ul><li>timeRecordEventRequestId; integer; Unique identifier for the time record event request.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Event Requests"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordEventRequests-get"
            },
            "post":{
                "summary":"Create a time record event request",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordEventRequests-post"
            }
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}":{
            "get":{
                "summary":"Get a time record event request",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent":{
            "get":{
                "summary":"Get all time record events",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record event using its unique identifier. Finder Variables:<ul><li>timeRecordEventId; integer; Unique identifier for the time record event.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-get"
            },
            "post":{
                "summary":"Create a time record event",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-post"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}":{
            "get":{
                "summary":"Get a time record event",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventId",
                    "description":"Unique identifier for the time record event.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}/child/timeRecordEventAttribute":{
            "get":{
                "summary":"Get all time record event attributes",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record event attribute using its unique identifier. Finder Variables:<ul><li>timeRecordEventAttributeId; integer; Unique identifier for the time record event attribute.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events/Time Record Event Attributes"
                ],
                "x-internal-id":"resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-child-timeRecordEventAttribute-get"
            },
            "post":{
                "summary":"Create a time record event attribute",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events/Time Record Event Attributes"
                ],
                "x-internal-id":"resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-child-timeRecordEventAttribute-post"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventId",
                    "description":"Unique identifier for the time record event.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}/child/timeRecordEventAttribute/{timeRecordEventAttributeId}":{
            "get":{
                "summary":"Get a time record event attribute",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventAttribute-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events/Time Record Event Attributes"
                ],
                "x-internal-id":"{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-child-timeRecordEventAttribute-{timeRecordEventAttributeId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventId",
                    "description":"Unique identifier for the time record event.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventAttributeId",
                    "description":"Unique identifier for the time record event attribute.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}/child/timeRecordEventMessage":{
            "get":{
                "summary":"Get all time record event messages",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record event message using its unique identifier. Finder Variables:<ul><li>timeRecordEventMessageId; integer; Unique identifier for the time record event message.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events/Time Record Event Messages"
                ],
                "x-internal-id":"resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-child-timeRecordEventMessage-get"
            },
            "post":{
                "summary":"Create a time record event message",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events/Time Record Event Messages"
                ],
                "x-internal-id":"resources-11.12.1.0-timeRecordEventRequests-{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-child-timeRecordEventMessage-post"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventId",
                    "description":"Unique identifier for the time record event.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordEventRequests/{timeRecordEventRequestId}/child/timeRecordEvent/{timeRecordEventId}/child/timeRecordEventMessage/{timeRecordEventMessageId}":{
            "get":{
                "summary":"Get a time record event message",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordEventRequests-timeRecordEvent-timeRecordEventMessage-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Event Requests/Time Record Events/Time Record Event Messages"
                ],
                "x-internal-id":"{timeRecordEventRequestId}-child-timeRecordEvent-{timeRecordEventId}-child-timeRecordEventMessage-{timeRecordEventMessageId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordEventRequestId",
                    "description":"Unique identifier for the time record event request.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventId",
                    "description":"Unique identifier for the time record event.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordEventMessageId",
                    "description":"Unique identifier for the message associated with the time record event.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders":{
            "get":{
                "summary":"Get all grade ladders",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByGradeLadderId: Finds all grade ladders that match the identifier provided. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade ladder is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade ladder is effective.</li><li>GradeLadderId; integer; Identifier for the grade ladder.</li></ul></li><li>PrimaryKey: Finds all grade ladders that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade ladder is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade ladder is effective.</li><li>GradeLadderId; integer; Identifier for the grade ladder.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Ladders"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}":{
            "get":{
                "summary":"Get a grade ladder",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Ladders"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/gradeLadderDFF":{
            "get":{
                "summary":"Get all grade ladder descriptive flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grade ladder descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade ladder flexfield is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade ladder flexfield is effective.</li><li>GradeLadderId; integer; Identifier for the grade ladder.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-gradeLadderDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Ladders/Grade Ladder Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-gradeLadderDFF-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/gradeLadderDFF/{gradeLadderDFFUniqID}":{
            "get":{
                "summary":"Get a grade ladder descriptive flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-gradeLadderDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Ladders/Grade Ladder Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-gradeLadderDFF-{gradeLadderDFFUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"gradeLadderDFFUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladder Descriptive Flexfields resource and used to uniquely identify an instance of Grade Ladder Descriptive Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladder Descriptive Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladder Descriptive Flexfields.<br><br>For example: gradeLadderDFF?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/grades":{
            "get":{
                "summary":"Get all grade ladder grades",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grade ladder grades that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li></ul></li><li>AltKey: Finds a grades with the specified alternate key. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeId; integer; Identifier for the grade.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-grades"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Ladders/Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-grades-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/grades/{gradesUniqID}":{
            "get":{
                "summary":"Get a grade ladder grade",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-grades-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Ladders/Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-grades-{gradesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"gradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate and EffectiveEndDate ---for the Grades resource and used to uniquely identify an instance of Grades. The client should not generate the hash key value.  Instead, the client should query on the Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Grades.<br><br>For example: grades?q=EffectiveStartDate=&lt;value1&gt;;EffectiveEndDate=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates":{
            "get":{
                "summary":"Get all step rates",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all step rates that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the step rate is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the step rate is effective.</li><li>RateId; integer; Unique identifier for the step rate.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-stepRates"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Ladders/Step Rates"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-stepRates-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}":{
            "get":{
                "summary":"Get a step rate",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-stepRates-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Ladders/Step Rates"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-stepRates-{stepRatesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"stepRatesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateId, EffectiveStartDate and EffectiveEndDate ---for the Step Rates resource and used to uniquely identify an instance of Step Rates. The client should not generate the hash key value.  Instead, the client should query on the Step Rates collection resource with a filter on the primary key values in order to navigate to a specific instance of Step Rates.<br><br>For example: stepRates?q=RateId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}/child/stepRateValues":{
            "get":{
                "summary":"Get all step rate values",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grade step rate values that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the step rate value is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the step rate value is effective.</li><li>RateValueId; integer; Identifier for the step rate value.</li></ul></li><li>AltKey: Finds a step rate value with the specified alternate key. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the step rate value is effective.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-stepRates-stepRateValues"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Ladders/Step Rates/Step Rate Values"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-stepRates-{stepRatesUniqID}-child-stepRateValues-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"stepRatesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateId, EffectiveStartDate and EffectiveEndDate ---for the Step Rates resource and used to uniquely identify an instance of Step Rates. The client should not generate the hash key value.  Instead, the client should query on the Step Rates collection resource with a filter on the primary key values in order to navigate to a specific instance of Step Rates.<br><br>For example: stepRates?q=RateId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeLadders/{gradeLaddersUniqID}/child/stepRates/{stepRatesUniqID}/child/stepRateValues/{stepRateValuesUniqID}":{
            "get":{
                "summary":"Get a step rate value",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeLadders-stepRates-stepRateValues-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Ladders/Step Rates/Step Rate Values"
                ],
                "x-internal-id":"resources-11.12.1.0-gradeLadders-{gradeLaddersUniqID}-child-stepRates-{stepRatesUniqID}-child-stepRateValues-{stepRateValuesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeLaddersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeLadderId, EffectiveStartDate and EffectiveEndDate ---for the Grade Ladders resource and used to uniquely identify an instance of Grade Ladders. The client should not generate the hash key value.  Instead, the client should query on the Grade Ladders collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Ladders.<br><br>For example: gradeLadders?q=GradeLadderId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"stepRatesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateId, EffectiveStartDate and EffectiveEndDate ---for the Step Rates resource and used to uniquely identify an instance of Step Rates. The client should not generate the hash key value.  Instead, the client should query on the Step Rates collection resource with a filter on the primary key values in order to navigate to a specific instance of Step Rates.<br><br>For example: stepRates?q=RateId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"stepRateValuesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateValueId, EffectiveStartDate and EffectiveEndDate ---for the Step Rate Values resource and used to uniquely identify an instance of Step Rate Values. The client should not generate the hash key value.  Instead, the client should query on the Step Rate Values collection resource with a filter on the primary key values in order to navigate to a specific instance of Step Rate Values.<br><br>For example: stepRateValues?q=RateValueId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests":{
            "get":{
                "summary":"Get all time event requests",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time event request by using its identifier. Finder Variables:<ul><li>timeEventRequestId; integer; Unique identifier for the time event request.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Event Requests"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-get"
            },
            "post":{
                "summary":"Create a time event request",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Event Requests"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-post"
            }
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}":{
            "get":{
                "summary":"Get a time event request",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Event Requests"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-get"
            },
            "parameters":[
                {
                    "name":"timeEventRequestId",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}/child/timeEvents":{
            "get":{
                "summary":"Get all time events",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time event by using its identifier. Finder Variables:<ul><li>timeEventId; integer; Unique identifier for the time event.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Event Requests/Time Events"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-child-timeEvents-get"
            },
            "post":{
                "summary":"Create a time event",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Event Requests/Time Events"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-child-timeEvents-post"
            },
            "parameters":[
                {
                    "name":"timeEventRequestId",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}/child/timeEvents/{timeEventId}":{
            "get":{
                "summary":"Get a time event",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Event Requests/Time Events"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-child-timeEvents-{timeEventId}-get"
            },
            "parameters":[
                {
                    "name":"timeEventRequestId",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeEventId",
                    "description":"Unique identifier for the IN or OUT time event that the time reporter records on a time collection device.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}/child/timeEvents/{timeEventId}/child/timeEventAttributes":{
            "get":{
                "summary":"Get all time event attributes",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time event  attribute by using its identifier. Finder Variables:<ul><li>timeEventAttributeId; integer; Unique identifier for the time event attribute.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-timeEventAttributes"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Event Requests/Time Events/Time Event Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-child-timeEvents-{timeEventId}-child-timeEventAttributes-get"
            },
            "post":{
                "summary":"Create a time event attribute",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-timeEventAttributes-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-timeEventAttributes-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Event Requests/Time Events/Time Event Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-child-timeEvents-{timeEventId}-child-timeEventAttributes-post"
            },
            "parameters":[
                {
                    "name":"timeEventRequestId",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeEventId",
                    "description":"Unique identifier for the IN or OUT time event that the time reporter records on a time collection device.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeEventRequests/{timeEventRequestId}/child/timeEvents/{timeEventId}/child/timeEventAttributes/{timeEventAttributeId}":{
            "get":{
                "summary":"Get a time event attribute",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeEventRequests-timeEvents-timeEventAttributes-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Event Requests/Time Events/Time Event Attributes"
                ],
                "x-internal-id":"resources-11.12.1.0-timeEventRequests-{timeEventRequestId}-child-timeEvents-{timeEventId}-child-timeEventAttributes-{timeEventAttributeId}-get"
            },
            "parameters":[
                {
                    "name":"timeEventRequestId",
                    "description":"Unique identifier for the time event request that the time collection device supplier sends. This request can contain one or more time events.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeEventId",
                    "description":"Unique identifier for the IN or OUT time event that the time reporter records on a time collection device.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeEventAttributeId",
                    "description":"A qualifier associated with the time event that reflects how the time is paid, costed, billed, or recorded as an information entry. For example, the payroll time type attribute indicates whether time for payroll consumers should be paid.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeRates":{
            "get":{
                "summary":"Get all grade rates",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByLegislativeDataGroup: Finds all grade rates defined for the legislative data group specified . Finder Variables:<ul><li>pLegislativeDataGroup; string; Name of the legislative data group.</li><li>pLegislativeDataGroupId; string; Unique identifier for the legislative data group.</li></ul></li><li>findByRateId: Finds all grade rates that match the identifier provided. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade rate is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade rate is effective.</li><li>RateId; integer; Identifier for the rate.</li></ul></li><li>findByGrade: Finds all grade rates assigned to the grade specified. Finder Variables:<ul><li>pGradeCode; string; Short form for the grade.</li><li>pGradeId; string; Unique identifier for the grade.</li><li>pGradeSetCode; string; Short form for the grade set.</li></ul></li><li>PrimaryKey: Finds all grade rates that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade rate is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade rate is effective.</li><li>RateId; integer; Identifier for the rate.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeRates"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Rates"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeRates-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}":{
            "get":{
                "summary":"Get a grade rate",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeRates-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Rates"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeRates-{gradeRatesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeRatesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateId, EffectiveStartDate and EffectiveEndDate ---for the Grade Rates resource and used to uniquely identify an instance of Grade Rates. The client should not generate the hash key value.  Instead, the client should query on the Grade Rates collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Rates.<br><br>For example: gradeRates?q=RateId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}/child/rateValues":{
            "get":{
                "summary":"Get all rate values",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all rate values that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade rate value is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade rate value is effective.</li><li>RateValueId; integer; Identifier for the rate value.</li></ul></li><li>AltKey: Finds a rate value with the specified alternate key. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade rate value is effective.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeRates-rateValues"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grade Rates/Rate Values"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeRates-{gradeRatesUniqID}-child-rateValues-get"
            },
            "parameters":[
                {
                    "name":"gradeRatesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateId, EffectiveStartDate and EffectiveEndDate ---for the Grade Rates resource and used to uniquely identify an instance of Grade Rates. The client should not generate the hash key value.  Instead, the client should query on the Grade Rates collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Rates.<br><br>For example: gradeRates?q=RateId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/gradeRates/{gradeRatesUniqID}/child/rateValues/{rateValuesUniqID}":{
            "get":{
                "summary":"Get a rate value",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/gradeRates-rateValues-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grade Rates/Rate Values"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-gradeRates-{gradeRatesUniqID}-child-rateValues-{rateValuesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradeRatesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateId, EffectiveStartDate and EffectiveEndDate ---for the Grade Rates resource and used to uniquely identify an instance of Grade Rates. The client should not generate the hash key value.  Instead, the client should query on the Grade Rates collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Rates.<br><br>For example: gradeRates?q=RateId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"rateValuesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- RateValueId, EffectiveStartDate and EffectiveEndDate ---for the Rate Values resource and used to uniquely identify an instance of Rate Values. The client should not generate the hash key value.  Instead, the client should query on the Rate Values collection resource with a filter on the primary key values in order to navigate to a specific instance of Rate Values.<br><br>For example: rateValues?q=RateValueId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/locations":{
            "get":{
                "summary":"Get all locations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByLocationId: Finds location record using the location identifier and the start and end dates. Finder Variables:<ul><li>EffectiveEndDate; string; Effective end date for the location record.</li><li>EffectiveStartDate; string; Effective start date for the location record.</li><li>LocationId; integer; Unique identifier for the location record.</li></ul></li><li>PrimaryKey: Finds all locations that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Effective end date for the location record.</li><li>EffectiveStartDate; string; Effective start date for the location record.</li><li>LocationId; integer; Unique identifier for the location record.</li></ul></li><li>AlternateKey: Finds all locations that match the alternate key criteria specified. Finder Variables:<ul><li>LocationCode; string; Short form for the location record.</li><li>SetId; integer; Reference data set for the location record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/locations"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Locations"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-locations-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/locations/{locationsUniqID}":{
            "get":{
                "summary":"Get a location",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/locations-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Locations"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-locations-{locationsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"locationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- LocationId, EffectiveStartDate and EffectiveEndDate ---for the Locations resource and used to uniquely identify an instance of Locations. The client should not generate the hash key value.  Instead, the client should query on the Locations collection resource with a filter on the primary key values in order to navigate to a specific instance of Locations.<br><br>For example: locations?q=LocationId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/locations/{locationsUniqID}/child/LocationDFF":{
            "get":{
                "summary":"Get all location flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all location descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Effective end date for the location record.</li><li>EffectiveStartDate; string; Effective start date for the location record.</li><li>LocationDetailsId; integer; Unique identifier for the location details.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/locations-LocationDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Locations/Location Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-locations-{locationsUniqID}-child-LocationDFF-get"
            },
            "parameters":[
                {
                    "name":"locationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- LocationId, EffectiveStartDate and EffectiveEndDate ---for the Locations resource and used to uniquely identify an instance of Locations. The client should not generate the hash key value.  Instead, the client should query on the Locations collection resource with a filter on the primary key values in order to navigate to a specific instance of Locations.<br><br>For example: locations?q=LocationId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/locations/{locationsUniqID}/child/LocationDFF/{LocationDFFUniqID}":{
            "get":{
                "summary":"Get a location flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/locations-LocationDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Locations/Location Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-locations-{locationsUniqID}-child-LocationDFF-{LocationDFFUniqID}-get"
            },
            "parameters":[
                {
                    "name":"locationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- LocationId, EffectiveStartDate and EffectiveEndDate ---for the Locations resource and used to uniquely identify an instance of Locations. The client should not generate the hash key value.  Instead, the client should query on the Locations collection resource with a filter on the primary key values in order to navigate to a specific instance of Locations.<br><br>For example: locations?q=LocationId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LocationDFFUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- LocationDetailsId, EffectiveStartDate and EffectiveEndDate ---for the Location Descriptive Flexfields resource and used to uniquely identify an instance of Location Descriptive Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Location Descriptive Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Location Descriptive Flexfields.<br><br>For example: LocationDFF?q=LocationDetailsId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups":{
            "get":{
                "summary":"Get all time record groups",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>filterByPerIdTimeGrp: Finds time record groups by using the person identifier and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time record groups are retrieved from, such as processed time card or posted schedule day.</li><li>personId; integer; Unique identifier for the person associated with the time record group.</li><li>startTime; UNKNOWN; Start time of the range containing the time record groups to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time record groups to retrieve.</li></ul></li><li>filterByGroupType: Finds time record groups by using a specific time record group layer. Finder Variables:<ul><li>groupType; string; Layer where time record groups are retrieved from, such as processed time card or posted schedule day.</li></ul></li><li>filterByPerNumTimeGrp: Finds time record groups by using the person number and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time record groups are retrieved from, such as processed time card or posted schedule day.</li><li>personNumber; string; Number of the person associated with the time record group.</li><li>startTime; UNKNOWN; Start time of the range containing the time record groups to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time record groups to retrieve.</li></ul></li><li>filterByTmRecGrpId: Finds a time record group using its time record group identifier. Finder Variables:<ul><li>timeRecordGroupId; integer; Unique identifier for the time record group.</li></ul></li><li>PrimaryKey: Finds a time record group using its unique identifier. Finder Variables:<ul><li>timeRecordGroupId; integer; Unique identifier for the time record group.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-get"
            }
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}":{
            "get":{
                "summary":"Get a time record group",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeAttributes":{
            "get":{
                "summary":"Get all time record group attributes",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group attribute using its unique identifier. Finder Variables:<ul><li>attributeId; number; Unique identifier for the time record group attribute.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeAttributes"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeAttributes-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeAttributes/{attributeId}":{
            "get":{
                "summary":"Get a time record group attribute",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeAttributes-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeAttributes-{attributeId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"attributeId",
                    "description":"Unique identifier for the time record group attribute.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeMessages":{
            "get":{
                "summary":"Get all time record group messages",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group message using its unique identifier. Finder Variables:<ul><li>messageId; integer; Unique identifier for the time record group message.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeMessages"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Messages"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeMessages-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeMessages/{messageId}":{
            "get":{
                "summary":"Get a time record group message",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeMessages-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Messages"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeMessages-{messageId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeMessages/{messageId}/child/timeMessageTokens":{
            "get":{
                "summary":"Get all time record group message tokens",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group message token using its unique identifier. Finder Variables:<ul><li>messageTokenId; integer; Unique identifier for the time record group message token.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeMessages-timeMessageTokens"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Messages/Time Message Tokens"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeMessages-{messageId}-child-timeMessageTokens-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeMessages/{messageId}/child/timeMessageTokens/{messageTokenId}":{
            "get":{
                "summary":"Get a time record group message token",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeMessages-timeMessageTokens-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Messages/Time Message Tokens"
                ],
                "x-internal-id":"resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeMessages-{messageId}-child-timeMessageTokens-{messageTokenId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"messageTokenId",
                    "description":"Unique identifier for the message token.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecordGroups":{
            "get":{
                "summary":"Get all time record groups",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>filterByPerIdTimeGrp: Finds time record groups by using the person identifier and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time record groups are retrieved from, such as processed time card or posted schedule day.</li><li>personId; integer; Unique identifier for the person associated with the time record group.</li><li>startTime; UNKNOWN; Start time of the range containing the time record groups to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time record groups to retrieve.</li></ul></li><li>filterByGroupType: Finds time record groups by using a specific time record group layer. Finder Variables:<ul><li>groupType; string; Layer where time record groups are retrieved from, such as processed time card or posted schedule day.</li></ul></li><li>filterByPerNumTimeGrp: Finds time record groups by using the person number and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time record groups are retrieved from, such as processed time card or posted schedule day.</li><li>personNumber; string; Number of the person associated with the time record group.</li><li>startTime; UNKNOWN; Start time of the range containing the time record groups to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time record groups to retrieve.</li></ul></li><li>filterByTmRecGrpId: Finds a time record group using its time record group identifier. Finder Variables:<ul><li>timeRecordGroupId; integer; Unique identifier for the time record group.</li></ul></li><li>PrimaryKey: Finds a time record group using its unique identifier. Finder Variables:<ul><li>timeRecordGroupId; integer; Unique identifier for the time record group.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecordGroups"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Record Groups"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecordGroups-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecordGroups/{timeRecordGroupId2}":{
            "get":{
                "summary":"Get a time record group",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecordGroups-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Record Groups"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecordGroups-{timeRecordGroupId2}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordGroupId2",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords":{
            "get":{
                "summary":"Get all time records",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>filterByPerIdTimeGrp: Finds time records by using the person identifier and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time records are retrieved from, such as processed time or absence entry details.</li><li>personId; integer; Unique identifier for the person assigned with the time record.</li><li>startTime; UNKNOWN; Start time of the range containing the time record groups to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time record groups to retrieve.</li></ul></li><li>filterByGroupType: Finds time records by using a specific time record layer. Finder Variables:<ul><li>groupType; string; Layer where time records are retrieved from, such as processed time or absence entry details.</li></ul></li><li>filterByPerNumTimeGrp: Finds time records by using the person number and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time records are retrieved from, such as processed time or absence entry details.</li><li>personNumber; string; Number of the person associated with the time record.</li><li>startTime; UNKNOWN; Start time of the range containing the time records to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time records to retrieve.</li></ul></li><li>filterByTmRecGrpId: Finds time records for a defined time record group identifier. Finder Variables:<ul><li>timeRecordGroupId; integer; Unique identifier for the time record group.</li></ul></li><li>filterByTmRecId: Finds a time record using its time record identifier. Finder Variables:<ul><li>timeRecordId; integer; Unique identifier for the time record.</li></ul></li><li>PrimaryKey: Finds a time record using its unique identifier. Finder Variables:<ul><li>timeRecordId; number; Unique identifier of the time record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}":{
            "get":{
                "summary":"Get a time record",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeAttributes":{
            "get":{
                "summary":"Get all time record group attributes",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group attribute using its unique identifier. Finder Variables:<ul><li>attributeId; number; Unique identifier for the time record group attribute.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeAttributes"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeAttributes-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeAttributes/{attributeId}":{
            "get":{
                "summary":"Get a time record group attribute",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeAttributes-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeAttributes-{attributeId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"attributeId",
                    "description":"Unique identifier for the time record group attribute.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeMessages":{
            "get":{
                "summary":"Get all time record group messages",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group message using its unique identifier. Finder Variables:<ul><li>messageId; integer; Unique identifier for the time record group message.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Messages"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeMessages-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeMessages/{messageId}":{
            "get":{
                "summary":"Get a time record group message",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Messages"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeMessages-{messageId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeMessages/{messageId}/child/timeMessageTokens":{
            "get":{
                "summary":"Get all time record group message tokens",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group message token using its unique identifier. Finder Variables:<ul><li>messageTokenId; integer; Unique identifier for the time record group message token.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages-timeMessageTokens"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Messages/Time Message Tokens"
                ],
                "x-internal-id":"resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeMessages-{messageId}-child-timeMessageTokens-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeMessages/{messageId}/child/timeMessageTokens/{messageTokenId}":{
            "get":{
                "summary":"Get a time record group message token",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeMessages-timeMessageTokens-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Messages/Time Message Tokens"
                ],
                "x-internal-id":"timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeMessages-{messageId}-child-timeMessageTokens-{messageTokenId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"messageTokenId",
                    "description":"Unique identifier for the message token.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeStatuses":{
            "get":{
                "summary":"Get all time record group statuses",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group status using its unique identifier. Finder Variables:<ul><li>statusId; integer; Unique identifier of the time record group status.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeStatuses"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Statuses"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeStatuses-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeRecords/{timeRecordId}/child/timeStatuses/{statusId}":{
            "get":{
                "summary":"Get a time record group status",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeRecords-timeStatuses-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Records/Time Statuses"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeRecords-{timeRecordId}-child-timeStatuses-{statusId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"statusId",
                    "description":"Unique identifier for the status of the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeStatuses":{
            "get":{
                "summary":"Get all time record group statuses",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record group status using its unique identifier. Finder Variables:<ul><li>statusId; integer; Unique identifier of the time record group status.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeStatuses"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Record Groups/Time Statuses"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeStatuses-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecordGroups/{timeRecordGroupId}/child/timeStatuses/{statusId}":{
            "get":{
                "summary":"Get a time record group status",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecordGroups-timeStatuses-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Record Groups/Time Statuses"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecordGroups-{timeRecordGroupId}-child-timeStatuses-{statusId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordGroupId",
                    "description":"Unique identifier for the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"statusId",
                    "description":"Unique identifier for the status of the time record group.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobFamilies":{
            "get":{
                "summary":"Get all job families",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findJobFamilyById: Finds a job family record using the job family identifier and the start and end dates. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the job family is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job family is effective.</li><li>JobFamilyId; integer; Unique identifier for the job family.</li></ul></li><li>PrimaryKey: Finds all job families that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the job family is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job family is effective.</li><li>JobFamilyId; integer; Unique identifier for the job family record.</li></ul></li><li>AltKey: Finds all job families that match the alternate key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; </li><li>EffectiveStartDate; string; </li><li>JobFamilyCode; string; </li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobFamilies"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Job Families"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobFamilies-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobFamilies/{jobFamiliesUniqID}":{
            "get":{
                "summary":"Get a job family",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobFamilies-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Job Families"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobFamilies-{jobFamiliesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"jobFamiliesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobFamilyId, EffectiveStartDate and EffectiveEndDate ---for the Job Families resource and used to uniquely identify an instance of Job Families. The client should not generate the hash key value.  Instead, the client should query on the Job Families collection resource with a filter on the primary key values in order to navigate to a specific instance of Job Families.<br><br>For example: jobFamilies?q=JobFamilyId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobFamilies/{jobFamiliesUniqID}/child/JobFamilyDFF":{
            "get":{
                "summary":"Get all job family flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all job family descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the job family is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job family is effective.</li><li>JobFamilyId; integer; Unique identifier for the job family record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobFamilies-JobFamilyDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Job Families/Job Family Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobFamilies-{jobFamiliesUniqID}-child-JobFamilyDFF-get"
            },
            "parameters":[
                {
                    "name":"jobFamiliesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobFamilyId, EffectiveStartDate and EffectiveEndDate ---for the Job Families resource and used to uniquely identify an instance of Job Families. The client should not generate the hash key value.  Instead, the client should query on the Job Families collection resource with a filter on the primary key values in order to navigate to a specific instance of Job Families.<br><br>For example: jobFamilies?q=JobFamilyId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobFamilies/{jobFamiliesUniqID}/child/JobFamilyDFF/{JobFamilyDFFUniqID}":{
            "get":{
                "summary":"Get a job family flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobFamilies-JobFamilyDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Job Families/Job Family Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobFamilies-{jobFamiliesUniqID}-child-JobFamilyDFF-{JobFamilyDFFUniqID}-get"
            },
            "parameters":[
                {
                    "name":"jobFamiliesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobFamilyId, EffectiveStartDate and EffectiveEndDate ---for the Job Families resource and used to uniquely identify an instance of Job Families. The client should not generate the hash key value.  Instead, the client should query on the Job Families collection resource with a filter on the primary key values in order to navigate to a specific instance of Job Families.<br><br>For example: jobFamilies?q=JobFamilyId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"JobFamilyDFFUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobFamilyId, EffectiveStartDate and EffectiveEndDate ---for the Job Family Descriptive Flexfields resource and used to uniquely identify an instance of Job Family Descriptive Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Job Family Descriptive Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Job Family Descriptive Flexfields.<br><br>For example: JobFamilyDFF?q=JobFamilyId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps":{
            "get":{
                "summary":"Get all employees",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByAssignmentAttr: Finds all employee assignments based on the attributes specified. Finder Variables:<ul><li>BusinessUnitName; string; Business unit name for the employee assignment.</li><li>DepartmentName; string; Department name for the employee assignment.</li><li>GradeName; string; Grade name for the employee assignment.</li><li>JobName; string; Job name for the employee assignment.</li><li>LocationName; string; Location name for the employee assignment.</li><li>ManagerFullName; string; Full name of the manager for the employee assignment.</li></ul></li><li>findByPersonId: Finds all employee assignments for the person identifier specified. Finder Variables:<ul><li>EffectiveStartDate; string; Effective start date for the employee asignment.</li><li>PersonId; integer; Person identifier for which the assignments are to be retrieved.</li></ul></li><li>PrimaryKey: Finds all employees that match the primary key criteria specified. Finder Variables:<ul><li>CitizenshipId; integer; System-generated primary key. Surrogate key.</li><li>DriversLicenseId; integer; System-generated primary key. Surrogate key.</li><li>EffectiveStartDate; string; Effective start date for the employee record.</li><li>PassportId; integer; System-generated primary key. Surrogate key.</li><li>PersonId; integer; Internal identifier for the person.</li><li>ReligionId; integer; System-generated primary key. Surrogate key.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-get"
            },
            "post":{
                "summary":"Create an employee",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-post"
            }
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}":{
            "get":{
                "summary":"Get an employee",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-get"
            },
            "patch":{
                "summary":"Update an employee",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments":{
            "get":{
                "summary":"Get all employee assignments",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>excludeTerminatedWR: Finds all assignments for active work relationships.</li><li>findByAssignmentId: Finds all employee assignments that match the attribute criteria specified. Finder Variables:<ul><li>AssignmentId; integer; Unique identifier for the employee assignment.</li><li>ManagerAssignmentId; integer; Assignment identifier of the manager for the employee assignment.</li><li>ManagerId; integer; Unique identifier of the manager for the employee assignment.</li><li>TermsEffectiveStartDate; string; Effective start date of employee terms for the employee assignment.</li></ul></li><li>PrimaryKey: Finds all employee assignments that match the primary key criteria specified. Finder Variables:<ul><li>AssignmentId; integer; Unique identifier for the employee assignment.</li><li>EffectiveEndDate; string; Effective end date for the employee assignment.</li><li>EffectiveStartDate; string; Effective start date for the employee assignment.</li><li>TermsEffectiveStartDate; string; Effective start date of employee terms for the employee assignment.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Assignments"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-get"
            },
            "post":{
                "summary":"Create an employee assignment",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}":{
            "get":{
                "summary":"Get an employee assignment",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-get"
            },
            "patch":{
                "summary":"Update an employee assignment",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/assignmentDFF":{
            "get":{
                "summary":"Get all employee assignment flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all employee assignment descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>AssignmentId; integer; Assignment identifier of the assignment descriptive flexfield for the employee assignment.</li><li>EffectiveEndDate; string; Effective end date of the assignment descriptive flexfield for the employee assignment.</li><li>EffectiveLatestChange; string; Effective latest change of the assignment descriptive flexfield for the employee assignment.</li><li>EffectiveSequence; integer; Effective sequence number of the assignment descriptive flexfield for the employee assignment.</li><li>EffectiveStartDate; string; Effective start date of the assignment descriptive flexfield for the employee assignment.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentDFF-get"
            },
            "post":{
                "summary":"Create an employee assignment flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentDFF-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentDFF-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentDFF-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/assignmentDFF/{assignmentDFFUniqID}":{
            "get":{
                "summary":"Get an employee assignment flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentDFF-{assignmentDFFUniqID}-get"
            },
            "patch":{
                "summary":"Update an employee assignment flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentDFF-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentDFF-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentDFF-{assignmentDFFUniqID}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentDFFUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate, EffectiveSequence and EffectiveLatestChange ---for the Assignment Descriptive Flexfields resource and used to uniquely identify an instance of Assignment Descriptive Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Assignment Descriptive Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignment Descriptive Flexfields.<br><br>For example: assignmentDFF?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;EffectiveSequence=&lt;value4&gt;;EffectiveLatestChange=&lt;value5&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/assignmentExtraInformation":{
            "get":{
                "summary":"Get all assignment extensible flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentExtraInformation-get"
            },
            "post":{
                "summary":"Create an assignment extensible flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentExtraInformation-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/assignmentExtraInformation/{assignmentExtraInformationUniqID}":{
            "get":{
                "summary":"Get an assignment extensible flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentExtraInformation-{assignmentExtraInformationUniqID}-get"
            },
            "patch":{
                "summary":"Update an assignment extensible flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-assignmentExtraInformation-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Assignment Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-assignmentExtraInformation-{assignmentExtraInformationUniqID}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentExtraInformationUniqID",
                    "description":"Identifier to Assignment Extra Information Extensible FlexFields",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/empreps":{
            "get":{
                "summary":"Get all employee representatives",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-empreps"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Assignments/Employee Representatives"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-empreps-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/empreps/{AsgResponsibilityId}":{
            "get":{
                "summary":"Get an employee representative",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-empreps-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/Employee Representatives"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-empreps-{AsgResponsibilityId}-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"AsgResponsibilityId",
                    "description":"Unique identifier for the system-generated area of responsibility.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/peopleGroupKeyFlexfield":{
            "get":{
                "summary":"Get all employee key flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the employee assignment people group key flexfields that match the primary key criteria specified. Finder Variables:<ul><li>_PEOPLE_GROUP_ID; integer; People group key flexfield identifier for the employee assignment.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-peopleGroupKeyFlexfield"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Assignments/People Group Key Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-peopleGroupKeyFlexfield-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/assignments/{assignmentsUniqID}/child/peopleGroupKeyFlexfield/{_PEOPLE_GROUP_ID}":{
            "get":{
                "summary":"Get an employee key flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-assignments-peopleGroupKeyFlexfield-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Assignments/People Group Key Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-assignments-{assignmentsUniqID}-child-peopleGroupKeyFlexfield-{_PEOPLE_GROUP_ID}-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"assignmentsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- AssignmentId, EffectiveStartDate, EffectiveEndDate and TermsEffectiveStartDate ---for the Assignments resource and used to uniquely identify an instance of Assignments. The client should not generate the hash key value.  Instead, the client should query on the Assignments collection resource with a filter on the primary key values in order to navigate to a specific instance of Assignments.<br><br>For example: assignments?q=AssignmentId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;;TermsEffectiveStartDate=&lt;value4&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"_PEOPLE_GROUP_ID",
                    "description":"Key flexfield.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/directReports":{
            "get":{
                "summary":"Get all employee direct reports",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all employee direct reports that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveStartDate; string; Effective start date for the employee direct report.</li><li>PersonId; integer; Person identifier for the employee direct report.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-directReports"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Direct Reports"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-directReports-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/directReports/{directReportsUniqID}":{
            "get":{
                "summary":"Get an employee direct report",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-directReports-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Direct Reports"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-directReports-{directReportsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"directReportsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate and PersonId ---for the Direct Reports resource and used to uniquely identify an instance of Direct Reports. The client should not generate the hash key value.  Instead, the client should query on the Direct Reports collection resource with a filter on the primary key values in order to navigate to a specific instance of Direct Reports.<br><br>For example: directReports?q=EffectiveStartDate=&lt;value1&gt;;PersonId=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/personDFF":{
            "get":{
                "summary":"Get all employee flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all person descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>PersonId; integer; Unique identifier for the person.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Person Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personDFF-get"
            },
            "post":{
                "summary":"Create an employee flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personDFF-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personDFF-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Person Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personDFF-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/personDFF/{PersonId}":{
            "get":{
                "summary":"Get an employee flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Person Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personDFF-{PersonId}-get"
            },
            "patch":{
                "summary":"Update an employee flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personDFF-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personDFF-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Person Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personDFF-{PersonId}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"PersonId",
                    "description":"Internal identifier for the person.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/personExtraInformation":{
            "get":{
                "summary":"Get all person extensible flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personExtraInformation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Person Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personExtraInformation-get"
            },
            "post":{
                "summary":"Create a person extensible flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personExtraInformation-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personExtraInformation-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Person Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personExtraInformation-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/personExtraInformation/{personExtraInformationUniqID}":{
            "get":{
                "summary":"Get a person extensible flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personExtraInformation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Person Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personExtraInformation-{personExtraInformationUniqID}-get"
            },
            "patch":{
                "summary":"Update a person extensible flexfield",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personExtraInformation-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-personExtraInformation-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Person Extra Information Extensible FlexFields"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-personExtraInformation-{personExtraInformationUniqID}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"personExtraInformationUniqID",
                    "description":"Identifier to Person Extra Information Extensible FlexFields",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/photo":{
            "get":{
                "summary":"Get all employee photos",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all employee photos that match the primary key criteria specified. Finder Variables:<ul><li>ImageId; integer; Image identifier for the employee photo.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-photo"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Photos"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-photo-get"
            },
            "post":{
                "summary":"Create an employee photo",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-photo-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-photo-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Photos"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-photo-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/photo/{ImageId}":{
            "get":{
                "summary":"Get an employee photo",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-photo-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Photos"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-photo-{ImageId}-get"
            },
            "delete":{
                "summary":"Delete an employee photo",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Employees/Photos"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-photo-{ImageId}-delete"
            },
            "patch":{
                "summary":"Update an employee photo",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-photo-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-photo-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Photos"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-photo-{ImageId}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"ImageId",
                    "description":"System-generated primary key. Surrogate key.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/roles":{
            "get":{
                "summary":"Get all employee roles",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByRoleGUIDAndStartDate: Finds all worker roles that match the start date and unique identifier. Finder Variables:<ul><li>RoleGUID; string; Globally unique identifier for the employee role in Oracle Fusion.</li><li>StartDate; string; Start date for the worker role.</li></ul></li><li>PrimaryKey: Finds all employee roles that match the primary key criteria specified. Finder Variables:<ul><li>RoleGUID; string; Globally unique identifier for the employee role in Oracle Fusion.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-roles"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Roles"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-roles-get"
            },
            "post":{
                "summary":"Create an employee role",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-roles-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-roles-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Roles"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-roles-post"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/roles/{RoleGUID}":{
            "get":{
                "summary":"Get an employee role",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-roles-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Roles"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-roles-{RoleGUID}-get"
            },
            "delete":{
                "summary":"Delete an employee role",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Employees/Roles"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-roles-{RoleGUID}-delete"
            },
            "patch":{
                "summary":"Update an employee role",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-roles-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-roles-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Roles"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-roles-{RoleGUID}-patch"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"RoleGUID",
                    "description":"Globally unique identifer for the role record in Oracle Fusion.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/visas":{
            "get":{
                "summary":"Get all employee visas",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all employee visas that match the primary key criteria specified. Finder Variables:<ul><li>VisaPermitId; integer; System-generated primary key. Surrogate key.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-visas"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Employees/Visas"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-visas-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreApi/resources/11.12.1.0/emps/{empsUniqID}/child/visas/{VisaPermitId}":{
            "get":{
                "summary":"Get an employee visa",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/emps-visas-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Employees/Visas"
                ],
                "x-internal-id":"hcmCoreApi-resources-11.12.1.0-emps-{empsUniqID}-child-visas-{VisaPermitId}-get"
            },
            "parameters":[
                {
                    "name":"empsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PersonId, EffectiveStartDate, CitizenshipId, ReligionId, PassportId and DriversLicenseId ---for the Employees resource and used to uniquely identify an instance of Employees. The client should not generate the hash key value.  Instead, the client should query on the Employees collection resource with a filter on the primary key values in order to navigate to a specific instance of Employees.<br><br>For example: emps?q=PersonId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;CitizenshipId=&lt;value3&gt;;ReligionId=&lt;value4&gt;;PassportId=&lt;value5&gt;;DriversLicenseId=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"VisaPermitId",
                    "description":"System-generated part of primary key for the visa permit. Surrogate key.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords":{
            "get":{
                "summary":"Get all time records",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>filterByPerIdTimeGrp: Finds time records by using the person identifier and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time records are retrieved from, such as processed time or absence entry details.</li><li>personId; integer; Unique identifier for the person associated with the time record.</li><li>startTime; UNKNOWN; Start time of the range containing the time records to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time records to retrieve.</li></ul></li><li>filterByGroupType: Finds time records by using a specific time record layer. Finder Variables:<ul><li>groupType; string; Layer where time records are retrieved from, such as processed time or absence entry details.</li></ul></li><li>filterByPerNumTimeGrp: Finds a time record by using the person number and the start and end times. Finder Variables:<ul><li>groupType; string; Layer where time records are retrieved from, such as processed time or absence entry details.</li><li>personNumber; string; Number of the person associated with the time record.</li><li>startTime; UNKNOWN; Start time of the range containing the time records to retrieve.</li><li>stopTime; UNKNOWN; End time of the range containing the time records to retrieve.</li></ul></li><li>filterByTmRecGrpId: Finds time records for a defined time record group identifier. Finder Variables:<ul><li>timeRecordGroupId; integer; Unique identifier for the time record group.</li></ul></li><li>filterByTmRecId: Finds a time record using its time record identifier. Finder Variables:<ul><li>timeRecordId; integer; Unique identifier for the time record.</li></ul></li><li>PrimaryKey: Finds a time record using its unique identifier. Finder Variables:<ul><li>timeRecordId; number; Unique identifier for the time record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Records"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-get"
            }
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}":{
            "get":{
                "summary":"Get a time record",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Records"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeAttributes":{
            "get":{
                "summary":"Get all time record attributes",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record attribute using its unique identifier. Finder Variables:<ul><li>attributeId; number; Unique identifier for the time record attribute.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeAttributes"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Records/Time Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeAttributes-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeAttributes/{attributeId}":{
            "get":{
                "summary":"Get a time record attribute",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeAttributes-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Records/Time Attributes"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeAttributes-{attributeId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"attributeId",
                    "description":"Unique identifier for the time record attribute.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeMessages":{
            "get":{
                "summary":"Get all time record messages",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record message using its unique identifier. Finder Variables:<ul><li>messageId; integer; Unique identifier for the time record message.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeMessages"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Records/Time Messages"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeMessages-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeMessages/{messageId}":{
            "get":{
                "summary":"Get a time record message",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeMessages-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Records/Time Messages"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeMessages-{messageId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeMessages/{messageId}/child/timeMessageTokens":{
            "get":{
                "summary":"Get all time record message tokens",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record message token using its unique identifier. Finder Variables:<ul><li>messageTokenId; integer; Unique identifier for the time record message token.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeMessages-timeMessageTokens"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Records/Time Messages/Time Message Tokens"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeMessages-{messageId}-child-timeMessageTokens-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeMessages/{messageId}/child/timeMessageTokens/{messageTokenId}":{
            "get":{
                "summary":"Get a time record message token",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeMessages-timeMessageTokens-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Records/Time Messages/Time Message Tokens"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeMessages-{messageId}-child-timeMessageTokens-{messageTokenId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"messageId",
                    "description":"Unique identifier for the message associated with the time record.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"messageTokenId",
                    "description":"Unique identifier for the message token.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeStatuses":{
            "get":{
                "summary":"Get all time record statuses",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a time record status using its unique identifier. Finder Variables:<ul><li>statusId; integer; Unique identifier for the time record status.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeStatuses"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Time Records/Time Statuses"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeStatuses-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                }
            ]
        },
        "/hcmWorkforceMgmtApi/resources/11.12.1.0/timeRecords/{timeRecordId}/child/timeStatuses/{statusId}":{
            "get":{
                "summary":"Get a time record status",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/timeRecords-timeStatuses-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Time Records/Time Statuses"
                ],
                "x-internal-id":"hcmWorkforceMgmtApi-resources-11.12.1.0-timeRecords-{timeRecordId}-child-timeStatuses-{statusId}-get"
            },
            "parameters":[
                {
                    "name":"timeRecordId",
                    "description":"Unique identifier for the time record.",
                    "required":true,
                    "in":"path",
                    "type":"number"
                },
                {
                    "name":"statusId",
                    "description":"Unique identifier for the status of the time record.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions":{
            "get":{
                "summary":"Get all positions",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByPositionId: Finds position record using the position identifier and the start and end dates. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the position is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the position is effective.</li><li>PositionId; integer; Unique identifier for the position record.</li></ul></li><li>PrimaryKey: Finds all positions that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the position is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the position is effective.</li><li>PositionId; integer; Unique identifier for the position record.</li></ul></li><li>AltKey: Finds all positions that match the alternate key criteria specified. Finder Variables:<ul><li>BusinessUnitId; integer; Business unit identifier for the position record.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the position is effective.</li><li>PositionCode; string; Short form for the position record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Positions"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}":{
            "get":{
                "summary":"Get a position",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Positions"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/PositionCustomerFlex":{
            "get":{
                "summary":"Get all position flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all position descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the position is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the position is effective.</li><li>PositionId; integer; Unique identifier for the position record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-PositionCustomerFlex"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Positions/Position Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-PositionCustomerFlex-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/PositionCustomerFlex/{PositionCustomerFlexUniqID}":{
            "get":{
                "summary":"Get a position flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-PositionCustomerFlex-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Positions/Position Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-PositionCustomerFlex-{PositionCustomerFlexUniqID}-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"PositionCustomerFlexUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Position Descriptive Flexfields resource and used to uniquely identify an instance of Position Descriptive Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Position Descriptive Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Position Descriptive Flexfields.<br><br>For example: PositionCustomerFlex?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/extraInformation":{
            "get":{
                "summary":"Get all position extra information flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-extraInformation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Positions/Position Extra Information"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-extraInformation-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/extraInformation/{extraInformationUniqID}":{
            "get":{
                "summary":"Get a position extra information flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-extraInformation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Positions/Position Extra Information"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-extraInformation-{extraInformationUniqID}-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"extraInformationUniqID",
                    "description":"Identifier to Position Extra Information",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/legislativeExtraInformation":{
            "get":{
                "summary":"Get all position extra legislative information flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-legislativeExtraInformation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Positions/Position Extra Legislative Information"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-legislativeExtraInformation-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/legislativeExtraInformation/{legislativeExtraInformationUniqID}":{
            "get":{
                "summary":"Get a position extra legislative information flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-legislativeExtraInformation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Positions/Position Extra Legislative Information"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-legislativeExtraInformation-{legislativeExtraInformationUniqID}-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"legislativeExtraInformationUniqID",
                    "description":"Identifier to Position Extra Legislative Information",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/validGrades":{
            "get":{
                "summary":"Get all valid grades",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grades valid for the position that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li></ul></li><li>AltKey: Finds a validGrades with the specified alternate key. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeId; integer; Identifier for the grade.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-validGrades"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Positions/Valid Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-validGrades-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/positions/{positionsUniqID}/child/validGrades/{validGradesUniqID}":{
            "get":{
                "summary":"Get a valid grade",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/positions-validGrades-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Positions/Valid Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-positions-{positionsUniqID}-child-validGrades-{validGradesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"positionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PositionId, EffectiveStartDate and EffectiveEndDate ---for the Positions resource and used to uniquely identify an instance of Positions. The client should not generate the hash key value.  Instead, the client should query on the Positions collection resource with a filter on the primary key values in order to navigate to a specific instance of Positions.<br><br>For example: positions?q=PositionId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"validGradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate and EffectiveEndDate ---for the Valid Grades resource and used to uniquely identify an instance of Valid Grades. The client should not generate the hash key value.  Instead, the client should query on the Valid Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Valid Grades.<br><br>For example: validGrades?q=EffectiveStartDate=&lt;value1&gt;;EffectiveEndDate=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/organizations":{
            "get":{
                "summary":"Get all organizations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationId: Finds organization record using the organization identifier and the start and end dates. Finder Variables:<ul><li>EffectiveEndDate; string; Effective end date for the organization record.</li><li>EffectiveStartDate; string; Effective start date for the organization record.</li><li>OrganizationId; integer; Unique identifier for the organization.</li></ul></li><li>PrimaryKey: Finds all organizations that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Effective end date for the organization record.</li><li>EffectiveStartDate; string; Effective start date for the organization record.</li><li>OrganizationId; integer; Unique identifier for the organization.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/organizations"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-organizations-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/organizations/{organizationsUniqID}":{
            "get":{
                "summary":"Get an organization",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/organizations-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Organizations"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-organizations-{organizationsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"organizationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate, EffectiveEndDate and OrganizationId ---for the Organizations resource and used to uniquely identify an instance of Organizations. The client should not generate the hash key value.  Instead, the client should query on the Organizations collection resource with a filter on the primary key values in order to navigate to a specific instance of Organizations.<br><br>For example: organizations?q=EffectiveStartDate=&lt;value1&gt;;EffectiveEndDate=&lt;value2&gt;;OrganizationId=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/organizations/{organizationsUniqID}/child/OrganizationDFF":{
            "get":{
                "summary":"Get all organization flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/organizations-OrganizationDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Organizations/Organization Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-organizations-{organizationsUniqID}-child-OrganizationDFF-get"
            },
            "parameters":[
                {
                    "name":"organizationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate, EffectiveEndDate and OrganizationId ---for the Organizations resource and used to uniquely identify an instance of Organizations. The client should not generate the hash key value.  Instead, the client should query on the Organizations collection resource with a filter on the primary key values in order to navigate to a specific instance of Organizations.<br><br>For example: organizations?q=EffectiveStartDate=&lt;value1&gt;;EffectiveEndDate=&lt;value2&gt;;OrganizationId=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/organizations/{organizationsUniqID}/child/OrganizationDFF/{OrganizationDFFUniqID}":{
            "get":{
                "summary":"Get an organization flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/organizations-OrganizationDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Organizations/Organization Descriptive Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-organizations-{organizationsUniqID}-child-OrganizationDFF-{OrganizationDFFUniqID}-get"
            },
            "parameters":[
                {
                    "name":"organizationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate, EffectiveEndDate and OrganizationId ---for the Organizations resource and used to uniquely identify an instance of Organizations. The client should not generate the hash key value.  Instead, the client should query on the Organizations collection resource with a filter on the primary key values in order to navigate to a specific instance of Organizations.<br><br>For example: organizations?q=EffectiveStartDate=&lt;value1&gt;;EffectiveEndDate=&lt;value2&gt;;OrganizationId=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"OrganizationDFFUniqID",
                    "description":"Identifier to Organization Descriptive Flexfields",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobs":{
            "get":{
                "summary":"Get all jobs",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByJobId: Finds job record using the job identifier and the start and end dates. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the job is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job is effective.</li><li>JobId; integer; Unique identifier for the job record.</li></ul></li><li>PrimaryKey: Finds all jobs that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the job is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job is effective.</li><li>JobId; integer; Unique identifier for the job record.</li></ul></li><li>AltKey: Finds all jobs that match the alternate key criteria specified. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job is effective.</li><li>JobCode; string; Short form identifier for the job record.</li><li>SetId; integer; Reference data set for the job record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobs"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Jobs"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobs-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}":{
            "get":{
                "summary":"Get a job",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobs-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Jobs"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobs-{jobsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"jobsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobId, EffectiveStartDate and EffectiveEndDate ---for the Jobs resource and used to uniquely identify an instance of Jobs. The client should not generate the hash key value.  Instead, the client should query on the Jobs collection resource with a filter on the primary key values in order to navigate to a specific instance of Jobs.<br><br>For example: jobs?q=JobId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/child/JobCustomerFlex":{
            "get":{
                "summary":"Get all job flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all job descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the job is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the job is effective.</li><li>JobId; integer; Unique identifier for the job record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobs-JobCustomerFlex"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Jobs/Job Customer Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobs-{jobsUniqID}-child-JobCustomerFlex-get"
            },
            "parameters":[
                {
                    "name":"jobsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobId, EffectiveStartDate and EffectiveEndDate ---for the Jobs resource and used to uniquely identify an instance of Jobs. The client should not generate the hash key value.  Instead, the client should query on the Jobs collection resource with a filter on the primary key values in order to navigate to a specific instance of Jobs.<br><br>For example: jobs?q=JobId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/child/JobCustomerFlex/{JobCustomerFlexUniqID}":{
            "get":{
                "summary":"Get a job flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobs-JobCustomerFlex-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Jobs/Job Customer Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobs-{jobsUniqID}-child-JobCustomerFlex-{JobCustomerFlexUniqID}-get"
            },
            "parameters":[
                {
                    "name":"jobsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobId, EffectiveStartDate and EffectiveEndDate ---for the Jobs resource and used to uniquely identify an instance of Jobs. The client should not generate the hash key value.  Instead, the client should query on the Jobs collection resource with a filter on the primary key values in order to navigate to a specific instance of Jobs.<br><br>For example: jobs?q=JobId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"JobCustomerFlexUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobId, EffectiveStartDate and EffectiveEndDate ---for the Job Customer Flexfields resource and used to uniquely identify an instance of Job Customer Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Job Customer Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Job Customer Flexfields.<br><br>For example: JobCustomerFlex?q=JobId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/child/validGrades":{
            "get":{
                "summary":"Get all valid grades",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grades valid for the job that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li></ul></li><li>AltKey: Finds a validGrades with the specified alternate key. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeId; integer; Identifier for the grade.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobs-validGrades"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Jobs/Valid Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobs-{jobsUniqID}-child-validGrades-get"
            },
            "parameters":[
                {
                    "name":"jobsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobId, EffectiveStartDate and EffectiveEndDate ---for the Jobs resource and used to uniquely identify an instance of Jobs. The client should not generate the hash key value.  Instead, the client should query on the Jobs collection resource with a filter on the primary key values in order to navigate to a specific instance of Jobs.<br><br>For example: jobs?q=JobId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/jobs/{jobsUniqID}/child/validGrades/{validGradesUniqID}":{
            "get":{
                "summary":"Get a valid grade",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/jobs-validGrades-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Jobs/Valid Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-jobs-{jobsUniqID}-child-validGrades-{validGradesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"jobsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- JobId, EffectiveStartDate and EffectiveEndDate ---for the Jobs resource and used to uniquely identify an instance of Jobs. The client should not generate the hash key value.  Instead, the client should query on the Jobs collection resource with a filter on the primary key values in order to navigate to a specific instance of Jobs.<br><br>For example: jobs?q=JobId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"validGradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- EffectiveStartDate and EffectiveEndDate ---for the Valid Grades resource and used to uniquely identify an instance of Valid Grades. The client should not generate the hash key value.  Instead, the client should query on the Valid Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Valid Grades.<br><br>For example: validGrades?q=EffectiveStartDate=&lt;value1&gt;;EffectiveEndDate=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/grades":{
            "get":{
                "summary":"Get all grades",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByGradeId: Finds grade record using the grade identifier and the start and end dates. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeId; integer; Unique identifier for the grade.</li></ul></li><li>PrimaryKey: Finds all grades that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeId; integer; Unique identifier for the grade.</li></ul></li><li>AltKey: Finds all grades that match the alternate key criteria specified. Finder Variables:<ul><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeCode; string; Short form identifier for the grade record.</li><li>SetId; integer; Reference data set for the grade record.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/grades"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-grades-get"
            }
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}":{
            "get":{
                "summary":"Get a grade",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/grades-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grades"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-grades-{gradesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeId, EffectiveStartDate and EffectiveEndDate ---for the Grades resource and used to uniquely identify an instance of Grades. The client should not generate the hash key value.  Instead, the client should query on the Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Grades.<br><br>For example: grades?q=GradeId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}/child/GradeCustomerFlex":{
            "get":{
                "summary":"Get all grade flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grade descriptive flexfields that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade is effective.</li><li>GradeId; integer; Unique identifier for the grade.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/grades-GradeCustomerFlex"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grades/Grade Customer Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-grades-{gradesUniqID}-child-GradeCustomerFlex-get"
            },
            "parameters":[
                {
                    "name":"gradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeId, EffectiveStartDate and EffectiveEndDate ---for the Grades resource and used to uniquely identify an instance of Grades. The client should not generate the hash key value.  Instead, the client should query on the Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Grades.<br><br>For example: grades?q=GradeId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}/child/GradeCustomerFlex/{GradeCustomerFlexUniqID}":{
            "get":{
                "summary":"Get a grade flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/grades-GradeCustomerFlex-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grades/Grade Customer Flexfields"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-grades-{gradesUniqID}-child-GradeCustomerFlex-{GradeCustomerFlexUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeId, EffectiveStartDate and EffectiveEndDate ---for the Grades resource and used to uniquely identify an instance of Grades. The client should not generate the hash key value.  Instead, the client should query on the Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Grades.<br><br>For example: grades?q=GradeId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"GradeCustomerFlexUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeId, EffectiveStartDate and EffectiveEndDate ---for the Grade Customer Flexfields resource and used to uniquely identify an instance of Grade Customer Flexfields. The client should not generate the hash key value.  Instead, the client should query on the Grade Customer Flexfields collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Customer Flexfields.<br><br>For example: GradeCustomerFlex?q=GradeId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}/child/steps":{
            "get":{
                "summary":"Get all grade steps",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds all grade steps that match the primary key criteria specified. Finder Variables:<ul><li>EffectiveEndDate; string; Date at the end of the date range within which the grade step is effective.</li><li>EffectiveStartDate; string; Date at the beginning of the date range within which the grade step is effective.</li><li>GradeStepId; integer; Identifier for the grade step.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/grades-steps"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Grades/Grade Steps"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-grades-{gradesUniqID}-child-steps-get"
            },
            "parameters":[
                {
                    "name":"gradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeId, EffectiveStartDate and EffectiveEndDate ---for the Grades resource and used to uniquely identify an instance of Grades. The client should not generate the hash key value.  Instead, the client should query on the Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Grades.<br><br>For example: grades?q=GradeId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmCoreSetupApi/resources/11.12.1.0/grades/{gradesUniqID}/child/steps/{stepsUniqID}":{
            "get":{
                "summary":"Get a grade step",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/grades-steps-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Grades/Grade Steps"
                ],
                "x-internal-id":"hcmCoreSetupApi-resources-11.12.1.0-grades-{gradesUniqID}-child-steps-{stepsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"gradesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeId, EffectiveStartDate and EffectiveEndDate ---for the Grades resource and used to uniquely identify an instance of Grades. The client should not generate the hash key value.  Instead, the client should query on the Grades collection resource with a filter on the primary key values in order to navigate to a specific instance of Grades.<br><br>For example: grades?q=GradeId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"stepsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- GradeStepId, EffectiveStartDate and EffectiveEndDate ---for the Grade Steps resource and used to uniquely identify an instance of Grade Steps. The client should not generate the hash key value.  Instead, the client should query on the Grade Steps collection resource with a filter on the primary key values in order to navigate to a specific instance of Grade Steps.<br><br>For example: steps?q=GradeStepId=&lt;value1&gt;;EffectiveStartDate=&lt;value2&gt;;EffectiveEndDate=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/wellnessActivities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>ActivityRowFinder: GET action not supported Finder Variables:<ul><li>DeviceName; string; GET action not supported</li><li>StartTime; string; GET action not supported</li><li>URI; string; GET action not supported</li><li>UserId; string; GET action not supported</li><li>VendorName; string; GET action not supported</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Wellness Activities"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-wellnessActivities-get"
            },
            "post":{
                "summary":"Create a wellness activity",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Wellness Activities"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-wellnessActivities-post"
            }
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/wellnessActivities/{wellnessActivitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Wellness Activities"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-wellnessActivities-{wellnessActivitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"wellnessActivitiesUniqID",
                    "description":"Identifier to Wellness Activities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/wellnessActivities/{wellnessActivitiesUniqID}/child/activitymeasures":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: GET action not supported Finder Variables:<ul><li>URI; string; GET action not supported</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-activitymeasures"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Wellness Activities/Activity Measures"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-wellnessActivities-{wellnessActivitiesUniqID}-child-activitymeasures-get"
            },
            "post":{
                "summary":"Create an activity measure",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-activitymeasures-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-activitymeasures-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Wellness Activities/Activity Measures"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-wellnessActivities-{wellnessActivitiesUniqID}-child-activitymeasures-post"
            },
            "parameters":[
                {
                    "name":"wellnessActivitiesUniqID",
                    "description":"Identifier to Wellness Activities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/wellnessActivities/{wellnessActivitiesUniqID}/child/activitymeasures/{URI}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/wellnessActivities-activitymeasures-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Wellness Activities/Activity Measures"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-wellnessActivities-{wellnessActivitiesUniqID}-child-activitymeasures-{URI}-get"
            },
            "parameters":[
                {
                    "name":"wellnessActivitiesUniqID",
                    "description":"Identifier to Wellness Activities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"URI",
                    "description":"Unique identifier of the activity being tracked.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/trackingServices":{
            "get":{
                "summary":"Get all tracking services",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByDisplayName: Finds the tracking service that matches the display name. Finder Variables:<ul><li>DisplayName; string; Name of the tracking service.</li></ul></li><li>PrimaryKey: Finds the tracking service that matches the primary key criteria specified. Finder Variables:<ul><li>TrackingServiceId; integer; Unique identifier for the tracking service.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Tracking Services"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-get"
            },
            "post":{
                "summary":"Create a tracking service",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Tracking Services"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-post"
            }
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/trackingServices/{DisplayName}":{
            "get":{
                "summary":"Get a tracking service",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Tracking Services"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-{DisplayName}-get"
            },
            "delete":{
                "summary":"Delete a tracking service",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Tracking Services"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-{DisplayName}-delete"
            },
            "patch":{
                "summary":"Update a tracking service",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Tracking Services"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-{DisplayName}-patch"
            },
            "parameters":[
                {
                    "name":"DisplayName",
                    "description":"Name of the tracking service.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/trackingServices/{DisplayName}/child/authArtifacts":{
            "get":{
                "summary":"Get all authorization artifacts",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the authorization information that matches the primary key criteria specified. Finder Variables:<ul><li>TrackingServiceId; integer; Unique identifier for the tracking service.</li><li>UserId; string; User ID for the authentication information.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-authArtifacts"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Tracking Services/Authorization Artifacts"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-{DisplayName}-child-authArtifacts-get"
            },
            "parameters":[
                {
                    "name":"DisplayName",
                    "description":"Name of the tracking service.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/hcmWorkforceReputationApi/resources/11.12.1.0/trackingServices/{DisplayName}/child/authArtifacts/{authArtifactsUniqID}":{
            "get":{
                "summary":"Get an authorization artifact",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/trackingServices-authArtifacts-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Tracking Services/Authorization Artifacts"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-{DisplayName}-child-authArtifacts-{authArtifactsUniqID}-get"
            },
            "delete":{
                "summary":"Delete an authorization artifact",
                "responses":{
                    "204":{
                        "description":"No content. This task does not return elements in the response body."
                    }
                },
                "tags":[
                    "Tracking Services/Authorization Artifacts"
                ],
                "x-internal-id":"hcmWorkforceReputationApi-resources-11.12.1.0-trackingServices-{DisplayName}-child-authArtifacts-{authArtifactsUniqID}-delete"
            },
            "parameters":[
                {
                    "name":"DisplayName",
                    "description":"Name of the tracking service.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"authArtifactsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- TrackingServiceId and UserId ---for the Authorization Artifacts resource and used to uniquely identify an instance of Authorization Artifacts. The client should not generate the hash key value.  Instead, the client should query on the Authorization Artifacts collection resource with a filter on the primary key values in order to navigate to a specific instance of Authorization Artifacts.<br><br>For example: authArtifacts?q=TrackingServiceId=&lt;value1&gt;;UserId=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        }
    },
    "swagger":"2.0",
    "schemes":[
        "https"
    ]
}