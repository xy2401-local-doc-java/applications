{
    "info":{
        "description":"<div><em><span><span style=\"color: #FF0000;\">This REST API document is new for Release 12.<span style=\"color: #000000;font-style: normal\">\n<p>\nOracle Supply Chain Management Cloud delivers Representational State Transfer (REST) APIs to support your integration requirements. The REST APIs allow you to integrate data into new and existing business process flows.\n<p>\n</div>",
        "version":"2018.03.21",
        "title":"Oracle Supply Chain Management Cloud Release 12",
        "x-summary":"This REST API document is new for Release 12."
    },
    "definitions":{
        "collectionQuery":{
            "properties":{
                "dependency":{
                    "type":"string",
                    "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                },
                "expand":{
                    "type":"string",
                    "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers)."
                },
                "fields":{
                    "type":"string",
                    "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2"
                },
                "finder":{
                    "type":"string",
                    "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;"
                },
                "limit":{
                    "type":"integer",
                    "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                },
                "offset":{
                    "type":"integer",
                    "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                },
                "onlyData":{
                    "type":"boolean",
                    "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                },
                "orderBy":{
                    "type":"string",
                    "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                },
                "q":{
                    "type":"string",
                    "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2"
                },
                "totalResults":{
                    "type":"boolean",
                    "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                }
            },
            "type":"object"
        },
        "items":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/items-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "items-ItemRevision":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/items-ItemRevision-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "items-ItemRevision-item":{
            "properties":{
                "CreationDateTime":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the application created the item revision."
                },
                "EffectivityDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date that the revision goes into effect.",
                    "title":"Effective Date"
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the part, material, product, or service that is unique when compared to other items."
                },
                "ItemRevisionDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item revision.",
                    "title":"Description"
                },
                "LastUpdateDateTime":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the application most recently updated the item revision."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organizing unit in the internal or external structure of your enterprise. An organization provides the framework for performing legal reporting, financial control, and management reporting."
                },
                "RevisionCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the revision.",
                    "title":"Revision Code"
                },
                "RevisionExtensibleFlexfieldCategoryCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the extensible flexfield category for the item revision."
                },
                "RevisionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the revision of the item."
                },
                "RevisionReasonValue":{
                    "type":"string",
                    "description":"Reason for the revision."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"RevisionReasonValue LOV",
                    "description":"Revision reasons.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RevisionReasonValue; Target Attribute: Meaning</li><li>Source Attribute: RevisionReason; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/child/ItemRevision/{RevisionId}/lov/LovRevisionreasonValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RevisionReasonValue",
                        "RevisionReason"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "items-item":{
            "properties":{
                "ATOForecastControl":{
                    "type":"number",
                    "description":"Abbreviation that determines the type of forecast demand to use for the item. Values include Consume, Consume and Derive, or None.",
                    "title":"Forecast Control"
                },
                "ATPCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to check the available-to-promise (ATP) or capable-to-promise (CTP) status when placing demand.",
                    "title":"Check ATP"
                },
                "ATPComponentsCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to include components during available-to-promise (ATP) checking when the bill of materials for assemble-to-order (ATO) or pick-to-order (PTO) items includes these components.",
                    "title":"ATP Components"
                },
                "ATPComponentsValue":{
                    "type":"string",
                    "description":"Determines whether or not to include components during available-to-promise (ATP) checking when the bill of materials for assemble-to-order (ATO) or pick-to-order (PTO) items includes these components."
                },
                "ATPValue":{
                    "type":"string",
                    "description":"Check the available-to-promise (ATP) or capable-to-promise (CTP) status when placing demand."
                },
                "AcceptableEarlyDays":{
                    "type":"number",
                    "description":"Number of days before which the planning process will not reschedule the sales order. For example, if the due date on the original sales order is 10-JUN, and if the Acceptable Early Days is 3, and if the new due date is less than or equal to 13-JUN, then the planning process will not suggest rescheduling.",
                    "title":"Acceptable Early Days"
                },
                "AccountingRuleId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the accounting rule that determines revenue recognition for the item.",
                    "title":"Accounting Rule"
                },
                "AccountingRuleValue":{
                    "type":"string",
                    "description":"Accounting rule that determines revenue recognition for the item."
                },
                "AllowExpressDeliveryFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: if the quantity to deliver equals the balance on the purchase order line, then deliver all distributions for this item with one data entry transaction. False: Do not deliver all distributions for the item with one data entry transaction, even if the quantity to deliver equals the balance on the purchase order line.",
                    "title":"Allow Express Transactions"
                },
                "AllowItemDescriptionUpdateFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to update the purchasing document description. False: do not allow this update.",
                    "title":"Allow Purchasing Document Description Update"
                },
                "AllowSubstituteReceiptsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to receive a defined substitute instead of the item. False: do not allow this substitution.",
                    "title":"Allow Substitute Receipts"
                },
                "AllowSuspendFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to suspend a service contract. False: do not allow the application to suspend a service contract.",
                    "title":"Allow Suspend"
                },
                "AllowTerminateFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to permanently stop a service contract. False: do not allow the application to permanently stop a service contract.",
                    "title":"Allow Terminate"
                },
                "AllowUnorderedReceiptsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to receive the item without a purchase order. False: do not allow this receipt.",
                    "title":"Allow Unordered Receipts"
                },
                "AllowedUnitsLookupCode":{
                    "type":"number",
                    "description":"Abbreviation that determines how to convert the transaction. Values include Standard or Item Specific Conversion.",
                    "title":"Conversions"
                },
                "ApprovalStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status that indicates whether or not the item is approved for use in transactions.",
                    "title":"Approval Status"
                },
                "ApprovalStatusValue":{
                    "type":"string",
                    "description":"Approval status of the item."
                },
                "AssembleToOrderFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: build the item directly in reply to the sales order, and create the assembly work order according to sales order details. False: Do not build the item directly in reply to the sales order.",
                    "title":"Assemble to Order"
                },
                "AssetActivityCauseValue":{
                    "type":"string",
                    "description":"Situation that caused product management to create the work."
                },
                "AssetActivityShutdownTypeValue":{
                    "type":"string",
                    "description":"Determines whether or not to shut down the maintenance activity."
                },
                "AssetCategoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the fixed asset category.",
                    "title":"Asset Category"
                },
                "AssetCategorySIN":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Structure instance number (SIN) of the asset category."
                },
                "AssetCategoryValue":{
                    "type":"string",
                    "description":"Fixed asset category."
                },
                "AssetClass":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the asset class that contains the item.",
                    "title":"Asset Class"
                },
                "AssetClassValue":{
                    "type":"string",
                    "description":"Asset class that contains the item."
                },
                "AssetItemTypeValue":{
                    "type":"string",
                    "description":"Determines whether the Item is an Asset Group, Activity, or Rebuildable Item."
                },
                "AssetTrackedFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: track the item as an asset in the installed base. False: do not track the item as an asset in the installed base.",
                    "title":"Enable Asset Tracking"
                },
                "AutoCreatedConfigurationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: automatically create the item. False: do not automatically create the item.",
                    "title":"Autocreated Configuration"
                },
                "AutomaticallyExpireASNFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: automatically expire the advance shipment notice. False: do not automatically expire the advance shipment notice.",
                    "title":"Automatically Expire ASN"
                },
                "BOMItemType":{
                    "type":"number",
                    "description":"Abbreviation that identifies the type of structure that the item uses.",
                    "title":"Structure Item Type"
                },
                "BackOrderableFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: if available-to-promise (ATP) fails, then backorder the item. False: do not backorder the item.",
                    "title":"Back Orderable"
                },
                "BackToBackEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: enable the item for back-to-back ordering. False: do not enable the item for back-to-back ordering.",
                    "title":"Back-to-Back Enabled"
                },
                "BaseItemId":{
                    "type":"number",
                    "description":"Value that uniquely identifies the model to use when creating an assemble-to-order configuration.",
                    "title":"Base Model"
                },
                "BaseItemValue":{
                    "type":"string",
                    "description":"Model to use when creating an assemble-to-order configuration."
                },
                "BillingTypeValue":{
                    "type":"string",
                    "description":"Billing type. Values include M, L, or E, where M indicates material, L indicates labor, and E indicates expense. The contract uses the billing type to define the discount percent."
                },
                "BuildInWIPFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: create discrete jobs or repetitive assemblies in Oracle Work in Process. False: do not create discrete jobs or repetitive assemblies in Oracle Work in Process.",
                    "title":"Build in WIP"
                },
                "BulkPickedFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: pick items in bulk. False: do not pick items in bulk.",
                    "title":"Bulk Picked"
                },
                "BuyerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the name of the default buyer for the item.",
                    "title":"Default Buyer"
                },
                "BuyerOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization where the buyer resides."
                },
                "BuyerOrganizationValue":{
                    "type":"string",
                    "description":"Organization where the buyer resides."
                },
                "CASNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Registry number of the Chemical Abstracts Service (CAS) that uniquely identifies a chemical substance.",
                    "title":"CAS Number"
                },
                "CarryPercentage":{
                    "type":"number",
                    "description":"Percent of unit cost that represents the internal cost to stock one unit for one year.",
                    "title":"Carrying Percentage"
                },
                "ChangeNotice":{
                    "type":"string",
                    "description":"Value that uniquely identifies then change order."
                },
                "ChangeOrderLineSequenceNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Line number in the change order that references the item."
                },
                "CheckMaterialShortageFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: determine whether or not a material shortage exists for the item. The item includes inventory attributes. False: do not determine whether or not a material shortage exists for the item. The item might not include inventory attributes.",
                    "title":"Check Material Shortage"
                },
                "ChildLotEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: If you specify the parent lot, then use lot control on the item during the transaction. False: do not use lot control on the item during the transaction.",
                    "title":"Child Lot Enabled"
                },
                "ChildLotFormatValidationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: make sure the child lot numbers conform to the child lot parameters. False: do not make sure the child lot numbers conform to the child lot parameters.",
                    "title":"Format Validation"
                },
                "ChildLotParent":{
                    "type":"string",
                    "description":"Determines how to create child lot numbers for the item."
                },
                "ChildLotPrefix":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Alphabetic prefix to add to the child lot.",
                    "title":"Prefix"
                },
                "ChildLotStartingNumber":{
                    "type":"number",
                    "description":"First number to use in a sequence of numbers for the child lot.",
                    "title":"Starting Number"
                },
                "CollateralFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item is collateral. False: the item is not collateral.",
                    "title":"Collateral"
                },
                "CommsActivationReqdFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the service fulfillment manager can electronically fulfill the item. False: the service fulfillment manager cannot electronically fulfill the item.",
                    "title":"Enable Provisioning"
                },
                "ConfigMatch":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines how to match to a configuration model. Values include Standard, Container, or Null.",
                    "title":"Match Configuration"
                },
                "ConfigModelType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of model that the configurator uses.",
                    "title":"Configurator Model Type"
                },
                "ConfigModelTypeValue":{
                    "type":"string",
                    "description":"Behavior of the configurable models in the configurator."
                },
                "ConfigOrganization":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Organization where product management creates a configured item.",
                    "title":"Create Configured Item"
                },
                "ConsignedFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: the item resides at your location but the supplier owns it. False: the item resides at your location and you own it.",
                    "title":"Consigned"
                },
                "ContainerItemFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use containers to ship items. False: do not use containers.",
                    "title":"Container"
                },
                "ContainerTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of container.",
                    "title":"Container Type"
                },
                "ContainerTypeValue":{
                    "type":"string",
                    "description":"Type of container."
                },
                "ContractManufacturingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the item in contract manufacturing. False: do not use the item in contract manufacturing.",
                    "title":"Contract Manufacturing"
                },
                "CopyAssociationsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: copy item associations. False: do not copy item associations."
                },
                "CopyAttachmentsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: copy item attachments. False: do not copy item attachments."
                },
                "CopyCategoriesFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: copy catalog categories. False: do not copy catalog categories."
                },
                "CopyFromItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item to use as the source when copying."
                },
                "CopyFromItemValue":{
                    "type":"string",
                    "description":"Item to use as the source when copying."
                },
                "CopyFromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source organization to use when copying the item."
                },
                "CopyFromOrganizationValue":{
                    "type":"string",
                    "description":"Source organization to use when copying the item."
                },
                "CopyFromRevisionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item revision of the source when copying the item."
                },
                "CopyFromRevisionValue":{
                    "type":"string",
                    "description":"Item revision of the source when copying the item."
                },
                "CopyFromVersionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item version of the source when copying the item."
                },
                "CopyFromVersionValue":{
                    "type":"string",
                    "description":"Item version of the source when copying the item."
                },
                "CopyItemAndApplyTemplatesFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: copy the item and then apply the template to the item. False: do not copy the item and then apply the template to the item."
                },
                "CopyLotAttributeFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the child lot inherits the parent lot attributes. False: the child lot does not inherit the parent lot attributes.",
                    "title":"Copy Lot Attributes"
                },
                "CopyOrganizationAssignmentsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: copy organization assignments for the item. False: do not copy organization assignments for the item."
                },
                "CostingEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: evaluate, report, and account for item costs. False: do not evaluate, report, and account for item costs.",
                    "title":"Costing Enabled"
                },
                "CreateConfiguredItem":{
                    "type":"string",
                    "description":"Determines whether or not to create the bill of materials for a configured item according to item sourcing."
                },
                "CreateFixedAssetFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: create a depreciable inventory asset for the item when using the installed base. False: do not create this depreciable inventory asset.",
                    "title":"Create Fixed Asset"
                },
                "CreateSupplyFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: suggest supply for this item. False: do not suggest supply for this item.",
                    "title":"Create Supply"
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the application created the item."
                },
                "CriticalComponentFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: the item as a critical component for the master production schedule (MPS) and for distribution requirements planning (DRP). False: the item is not a critical component.",
                    "title":"Critical Component"
                },
                "CumulativeManufacturingLeadTime":{
                    "type":"number",
                    "description":"Number of days required to manufacture the item, including the adjusted, cumulative, total lead time for the component that requires the longest time to assemble. The application subtracts the lead time offset of the operation to adjust each component.",
                    "title":"Cumulative Manufacturing"
                },
                "CumulativeTotalLeadTime":{
                    "type":"number",
                    "description":"Number of days required to assemble the item, including the adjusted, cumulative, total lead time for the component that requires the longest time to assemble. The application subtracts the lead time offset of the operation to adjust each component.",
                    "title":"Cumulative Total"
                },
                "CurrentPhaseCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the lifecycle phase of the item.",
                    "title":"Lifecycle Phase"
                },
                "CustomerOrderEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow an external customer to order the item. False: do not allow an external customer to order the item.",
                    "title":"Customer Orders Enabled"
                },
                "CustomerOrderFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: an external customer ordered the item. False: an external customer did not order the item.",
                    "title":"Customer Ordered"
                },
                "CycleCountEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to count the cycles for the inventory item. False: do not allow this count.",
                    "title":"Cycle Count Enabled"
                },
                "DRPPlannedFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: Calculate replenishment inventory to help plan the distribution system resources, such as sourcing and transport. False: do not calculate replenishment inventory.",
                    "title":"Distribution Planned"
                },
                "DaysEarlyReceiptAllowed":{
                    "type":"number",
                    "description":"Number of days that you can receive the item before the promise date occurs without warning or rejection.",
                    "title":"Days Early"
                },
                "DaysLateReceiptAllowed":{
                    "type":"number",
                    "description":"Number of days that you can receive the item after the promise date occurs without warning or rejection.",
                    "title":"Days Late"
                },
                "DaysMaximumInventorySupply":{
                    "type":"number",
                    "description":"Maximum days of supply required in inventory to achieve the desired business metric, such as throughput rate, cost, due date performance, inventory, days of supply, and so on.",
                    "title":"Maximum Inventory Days of Supply"
                },
                "DaysOfCover":{
                    "type":"number",
                    "description":"Number of days of cover for the item. The application multiplies Days of Cover by the average demand to calculate the safety stock level.",
                    "title":"Days of Cover"
                },
                "DefaultBuyerValue":{
                    "type":"string",
                    "description":"Name of the default buyer for the item."
                },
                "DefaultGrade":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Abbreviation that identifies the default grade to use for the item.",
                    "title":"Default Grade"
                },
                "DefaultGradeValue":{
                    "type":"string",
                    "description":"Default grade to use for the item."
                },
                "DefaultLotStatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the default lot status to use for the item.",
                    "title":"Default Lot Status"
                },
                "DefaultLotStatusValue":{
                    "type":"string",
                    "description":"Default lot status to use for the item."
                },
                "DefaultSalesOrderSourceTypeValue":{
                    "type":"string",
                    "description":"Default value to use for the source type that the sales order references."
                },
                "DefaultSerialStatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the default serial status to use for the item.",
                    "title":"Default Serial Status"
                },
                "DefaultSerialStatusValue":{
                    "type":"string",
                    "description":"Default serial status to use for the item."
                },
                "DefaultShippingOrganization":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the default shipping organization. If the warehouse object references this item as the source attribute, then the DefaultShippingOrganization attribute defaults to the value that the Enter Orders dialog displays. The rule set that sets the standard value for the sales order references the warehouse object.",
                    "title":"Default Shipping Organization"
                },
                "DefaultShippingOrganizationValue":{
                    "type":"string",
                    "description":"Default shipping organization. If the warehouse object references this item as the source attribute, then the DefaultShippingOrganization attribute defaults to the value that the Enter Orders dialog displays. The rule set that sets the standard value for the sales order references the warehouse object."
                },
                "DefaultSoSourceType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Default source type to use for the sales order.",
                    "title":"Default Sales Order Source Type"
                },
                "DefaultingControlValue":{
                    "type":"string",
                    "description":"Control that defaults the item. Values include Fixed, Default, or No Default."
                },
                "DefectTrackingOnFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: track defects for this item. False: do not track defects for this item.",
                    "title":"Enable Defect Tracking"
                },
                "DemandPeriod":{
                    "type":"number",
                    "description":"Number of days to use when calculating the average daily demand.",
                    "title":"Demand Period"
                },
                "DemandTimeDays":{
                    "type":"number",
                    "description":"Point in time to ignore forecast demand and to consider only sales order demand when calculating gross requirements.",
                    "title":"Demand Time Days"
                },
                "DemandTimeFence":{
                    "type":"string",
                    "description":"Point in time to use when applying restrictions on demand recommendations."
                },
                "DemandTimeFenceCode":{
                    "type":"number",
                    "description":"Abbreviation that determines the point in time to use when applying restrictions on demand recommendations.",
                    "title":"Demand Time Fence"
                },
                "DimensionUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure to use for the item dimensions.",
                    "title":"Unit"
                },
                "DimensionUOMValue":{
                    "type":"string",
                    "description":"Unit of measure to use for the item dimensions."
                },
                "DownloadableFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the customer can download the item. For example, the item is a software upgrade. False: the customer cannot download the item. For example, the item is a desktop computer.",
                    "title":"Downloadable"
                },
                "EAMActivityCauseCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the situation that caused product management to create the work.",
                    "title":"Activity Cause"
                },
                "EAMActivityNotificationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the asset is movable and the customer must bring it into the shop for repairs. False: the asset is not movable.",
                    "title":"Activity Notification Required"
                },
                "EAMActivityShutdownStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to shut down the maintenance activity.",
                    "title":"Shutdown Type"
                },
                "EAMActivitySourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the reason to perform the activity. Use this attribute if the asset item type is an asset activity.",
                    "title":"Activity Source"
                },
                "EAMActivitySourceValue":{
                    "type":"string",
                    "description":"Reason to perform the activity. Use this attribute if the asset item type is an asset activity."
                },
                "EAMActivityTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of maintenance for the asset activity.",
                    "title":"Activity Type"
                },
                "EAMActivityTypeValue":{
                    "type":"string",
                    "description":"Type of maintenance for the asset activity."
                },
                "EAMItemType":{
                    "type":"number",
                    "description":"Abbreviation that identifies whether the item is an Asset Group, Activity, or Rebuildable Item.",
                    "title":"Asset Item Type"
                },
                "EffectivityControl":{
                    "type":"number",
                    "description":"Abbreviation that identifies the control that controls effectivity in a structure.",
                    "title":"Effectivity Control"
                },
                "EffectivityControlValue":{
                    "type":"string",
                    "description":"Controls effectivity in a structure. Values include Date, Unit Number, or Serial Number."
                },
                "ElectronicFormatFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item exists only in electronic format. False: the item does not exist only in electronic format.",
                    "title":"Electronic Format"
                },
                "EligibilityRuleFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: make sure the offer meets constraints or requirements before offering it to the customer. For example, make sure the customer is a member of the loyalty program, lives in a specific state, is in good financial standing with the company, or is not locked into an existing contract. False: do not make sure the offer meets constraints or requirements.",
                    "title":"Eligibility Rule"
                },
                "EndAssemblyPeggingCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines the end assembly pegging to use. This pegging determines when to calculate and print the end assemblies for the item.",
                    "title":"Pegging"
                },
                "EnforceShipToLocation":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Determines whether or not the supplier can deliver to a location that is different from the ship-to location that the purchase order references. Values include None, Reject, or Warning."
                },
                "EnforceShipToLocationCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not the supplier can deliver to a location that is different from the ship-to location that the purchase order references.",
                    "title":"Enforce Ship-to Location"
                },
                "EventFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item is an event. False: the item is not an event.",
                    "title":"Event"
                },
                "ExcludeFromBudgetFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: exclude the item from the budget. False: do not exclude the item from the budget.",
                    "title":"Exclude from Budget"
                },
                "ExpenseAccount":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the expense account to use when tracking a nonasset item.",
                    "title":"Expense Account"
                },
                "ExpenseAccountValue":{
                    "type":"string",
                    "description":"Expense account to use when tracking a nonasset item."
                },
                "ExpenseSIN":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Structure instance number (SIN) of the expense account."
                },
                "ExpirationActionCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Abbreviation that identifies the default action to take for this item when the lot expires or the lot fails a quality check.",
                    "title":"Expiration Action"
                },
                "ExpirationActionInterval":{
                    "type":"number",
                    "description":"Number of days to add to the expiration date before taking an action on the lot.",
                    "title":"Expiration Action Interval"
                },
                "ExpirationActionValue":{
                    "type":"string",
                    "description":"Default action to take for this item when the lot expires or the lot fails a quality check."
                },
                "FinancingAllowedFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow financing. False: do not allow financing.",
                    "title":"Financing Allowed"
                },
                "FixedDaysSupply":{
                    "type":"number",
                    "description":"Number of days to use to modify the size and timing of each planned order quantity.",
                    "title":"Fixed Days Supply"
                },
                "FixedLeadTime":{
                    "type":"number",
                    "description":"Number of days required to assemble an item independent of the sales order quantity, such as setup time or teardown time.",
                    "title":"Fixed"
                },
                "FixedLotSizeMultiplier":{
                    "type":"number",
                    "description":"Multiplier to use, in units for each day, for each fixed lot quantity or each repetitive rate.",
                    "title":"Fixed Lot Size Multiplier"
                },
                "FixedOrderQuantity":{
                    "type":"number",
                    "description":"Quantity to use to modify the size of each planned order quantity or each repetitive daily rate.",
                    "title":"Fixed Order Quantity"
                },
                "ForecastControlValue":{
                    "type":"string",
                    "description":"Type of forecast demand to use for the item. Values include Consume, Consume and Derive, or None."
                },
                "ForecastHorizon":{
                    "type":"number",
                    "description":"Time period to use when forecasting demand for the item.",
                    "title":"Window Days"
                },
                "ForecastTypelValue":{
                    "type":"string",
                    "description":"Type of demand for the item. Values include Consume, Consume and Derive, or None."
                },
                "FormattedDescription":{
                    "maxLength":2147483647,
                    "type":"string",
                    "description":"Text description of the item that includes hypertext tags.",
                    "title":"Formatted Description"
                },
                "GradeControlFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use grades and lots to control the item. False: use only lots to control the item.",
                    "title":"Grade Controlled"
                },
                "HazardClassId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the category of hazardous material to use during an international trade.",
                    "title":"Hazard Class"
                },
                "HazardClassValue":{
                    "type":"string",
                    "description":"Category of hazardous material to use during an international trade."
                },
                "HazardousMaterialFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item is hazardous. False: the item is not hazardous.",
                    "title":"Hazardous Material"
                },
                "HoldDays":{
                    "type":"number",
                    "description":"Number of days to add to the lot creation date that determines when you can release the lot.",
                    "title":"Hold Days"
                },
                "IbItemInstanceClass":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the class to use for the item when using Telecommunication Service Ordering (TSO) to define a configured link.",
                    "title":"Instance Class"
                },
                "IgnoreDuplicateItemFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: create items, even though the matching item already exists. False: do not create these items."
                },
                "IncludeInRollUpFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: include the item in the cost rollup. False: do not include the item in the cost rollup.",
                    "title":"Include in Rollup"
                },
                "InstanceClassValue":{
                    "type":"string",
                    "description":"Class to use for the item when using Telecommunication Service Ordering (TSO) to define a configured link."
                },
                "InternalOrderEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow an internal requisition to order the item. False: do not allow an internal requisition to order the item.",
                    "title":"Transfer Orders Enabled"
                },
                "InternalOrderFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow internal orders. False: do not allow internal orders.",
                    "title":"Internally Transferable"
                },
                "InternalVolume":{
                    "type":"number",
                    "description":"Internal volume of the container or vehicle.",
                    "title":"Internal Volume"
                },
                "InvItemIdChar":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Character value of the item identifier."
                },
                "InventoryAssetFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: value the item as an asset in inventory. False: do not value the item as an asset in inventory.",
                    "title":"Inventory Asset Value"
                },
                "InventoryCarryPenalty":{
                    "type":"number",
                    "description":"Penalty for a job that is not complete by the scheduled completion date.",
                    "title":"Inventory Carry"
                },
                "InventoryItemFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the item that currently resides in inventory. False: do not use this item.",
                    "title":"Inventory Item"
                },
                "InventoryItemStatusCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that determines the transaction activity for the item.",
                    "title":"Item Status"
                },
                "InventoryPlanningCode":{
                    "type":"number",
                    "description":"Abbreviation that identifies the planning method to use for the organization.",
                    "title":"Inventory Planning Method"
                },
                "InventoryPlanningMethodValue":{
                    "type":"string",
                    "description":"Planning method to use for the organization."
                },
                "InvoiceCloseTolerancePercentage":{
                    "type":"number",
                    "description":"Percent tolerance to use when closing the purchase order shipment for invoicing.",
                    "title":"Invoice Close Tolerance Percentage"
                },
                "InvoiceEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: include the item on an Oracle Receivables invoice. False: do not include the item on this invoice.",
                    "title":"Invoiced"
                },
                "InvoicedFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to include the item on an Oracle Receivables invoice. False: do not allow this inclusion.",
                    "title":"Invoice Enabled"
                },
                "InvoicingRuleId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the invoicing rule that determines when to send the invoice.",
                    "title":"Invoicing Rule"
                },
                "InvoicingRuleValue":{
                    "type":"string",
                    "description":"Invoicing rule that determines when to send the invoice."
                },
                "ItemCatalogGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the metadata that is common to each item that resides in the same category.",
                    "title":"Item Class"
                },
                "ItemClass":{
                    "type":"string",
                    "description":"Metadata that is common to each item that resides in the same category."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item.",
                    "title":"Description"
                },
                "ItemExtensibleFlexfieldCategoryCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the category of an extensible flexfield that the item references."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the part, item, product, or service.",
                    "title":"Item"
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the part, item, product, or service.",
                    "title":"Item"
                },
                "ItemRevision":{
                    "$ref":"#/definitions/items-ItemRevision",
                    "description":"The Item Revisions resource manages item revision details.",
                    "title":"Item Revisions"
                },
                "ItemStatusValue":{
                    "type":"string",
                    "description":"Status of the transaction activity for the item. For example, a customer can order an item that is in active status."
                },
                "ItemType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Group of items that possess the same set of item attributes. For example, each account generator item references a group of processes that determine how to create an accounting flexfield.",
                    "title":"User Item Type"
                },
                "Keyword":{
                    "maxLength":255,
                    "type":"string",
                    "description":"String of characters that you can use to search when using keywords."
                },
                "Language":{
                    "maxLength":4,
                    "type":"string",
                    "description":"Language to use when storing transalatable attributes."
                },
                "LastSubmittedNewItemRequest":{
                    "type":"string",
                    "description":"Item request number that product management most recently submitted to process a new item."
                },
                "LastSubmittedNirId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item request number that product management most recently submitted to process a new item.",
                    "title":"Last Submitted New Item Request Number"
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the application most recently updated the item."
                },
                "LeadTimeLotSize":{
                    "type":"number",
                    "description":"Quantity to use when computing the processing lead time.",
                    "title":"Lead Time Lot Size"
                },
                "LifecyclePhaseValue":{
                    "type":"string",
                    "description":"Lifecycle phase of the item."
                },
                "ListPrice":{
                    "type":"number",
                    "description":"List price of the item.",
                    "title":"List Price"
                },
                "LocationControlCode":{
                    "type":"number",
                    "description":"Abbreviation that identifies the physical area in the subinventory where you store the item, such as a row, aisle, bin, or shelf.",
                    "title":"Stock Locator Control"
                },
                "LongDescription":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Text description of the item.",
                    "title":"Long Description"
                },
                "LotControlCode":{
                    "type":"number",
                    "description":"Abbreviation that identifies whether or not to use lot numbers during material transactions to track each batch of items.",
                    "title":"Control"
                },
                "LotControlValue":{
                    "type":"string",
                    "description":"Use lot numbers during material transactions to track each batch of items."
                },
                "LotDivisibleFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to allocate, reserve, or move partial lot quantities. False: do not allow the application to allocate, reserve, or move partial lot quantities.",
                    "title":"Lot Divisible"
                },
                "LotExpirationControlValue":{
                    "type":"string",
                    "description":"Determines how to control the shelf life and the lot expiration for each inventory item."
                },
                "LotMergeEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to merge multiple lots into one lot for an item that lots control. False: do not allow this merge.",
                    "title":"Lot Merge Enabled"
                },
                "LotSplitEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to split an item that a lot controls into more than one lot. False: do not allow this split.",
                    "title":"Lot Split Enabled"
                },
                "LotStatusEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to control each lot according to lot status. False: do not allow this control.",
                    "title":"Lot Status Enabled"
                },
                "LotSubstitutionEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to substitute a lot in the transaction. False: do not allow this substitution.",
                    "title":"Lot Substitution Enabled"
                },
                "LotTranslateEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to translate each lot. False: do not allow the application to translate each lot.",
                    "title":"Lot Translate Enabled"
                },
                "MRPCalculateATPFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: calculate and print available-to-promise (ATP) on the planning detail report. False: do not calculate and print.",
                    "title":"Calculate ATP"
                },
                "MRPPlanningCode":{
                    "type":"number",
                    "description":"Abbreviation that determines the method to use when planning demand for the item. Values include Min-Max, Not Planned, or Reorder Point.",
                    "title":"Planning Method"
                },
                "MarketPrice":{
                    "type":"number",
                    "description":"Market price of the item.",
                    "title":"Market Price"
                },
                "MatchApprovalLevel":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that identifies the status of the match approvals. Values include PO or Receipt.",
                    "title":"Match Approval Level"
                },
                "MatchApprovalLevelValue":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Status of the match approvals. Values include PO or Receipt."
                },
                "MatchConfigurationOptionValue":{
                    "type":"string",
                    "description":"How to match to a configuration model. Values include Standard, Container, or Null."
                },
                "MaterialBillableCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the billing type. Values include M, L, or E, where M indicates material, L indicates labor, and E indicates expense. The contract uses the billing type to define the discount percent.",
                    "title":"Billing Type"
                },
                "MaterialTransactionEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: you can use the item in the transaction and it includes inventory attributes. False: you cannot use the item in the transaction and it might not include inventory attributes.",
                    "title":"Transaction Enabled"
                },
                "MaturityDays":{
                    "type":"number",
                    "description":"Number of days to add to the lot creation date to determine the lot maturity date.",
                    "title":"Maturity Days"
                },
                "MaximumDaysOfSupply":{
                    "type":"number",
                    "description":"Maximum days of supply to allow before replenishing the item.",
                    "title":"Maximum Days of Supply"
                },
                "MaximumInventoryWindow":{
                    "type":"number",
                    "description":"Maximum quantity required in inventory to achieve the desired business metric, such as throughput rate, cost, due date performance, inventory, days of supply, and so on.",
                    "title":"Maximum Inventory Window"
                },
                "MaximumLoadWeight":{
                    "type":"number",
                    "description":"Maximum load weight of the container or vehicle.",
                    "title":"Maximum Load Weight"
                },
                "MaximumMinmaxQuantity":{
                    "type":"number",
                    "description":"Maximum quantity for minimum-maximum (min-max) planning.",
                    "title":"Maximum Min-Max Quantity"
                },
                "MaximumOrder":{
                    "type":"number",
                    "description":"Maximum quantity to allow on the sales order for the item.",
                    "title":"Maximum Order Quantity"
                },
                "MaximumOrderQuantity":{
                    "type":"number",
                    "description":"Maximum order quantity or repetitive rate in units for each day.",
                    "title":"Maximum Order"
                },
                "MinimumFillPercent":{
                    "type":"number",
                    "description":"Minimum percent to fill the container or vehicle before shipping.",
                    "title":"Minimum Fill Percent"
                },
                "MinimumLicenseQuantity":{
                    "type":"number",
                    "description":"Minimum number of licenses the customer must order for the item from Oracle iStore.",
                    "title":"Minimum License Quantity"
                },
                "MinimumMinmaxQuantity":{
                    "type":"number",
                    "description":"Minimum quantity for minimum-maximum (min-max) planning.",
                    "title":"Minimum Min-Max Quantity"
                },
                "MinimumOrderQuantity":{
                    "type":"number",
                    "description":"Minimum order quantity of the item.",
                    "title":"Minimum Order Quantity"
                },
                "NegativeDeviationFactor":{
                    "type":"number",
                    "description":"Maximum negative deviation for the transaction. This deviation is the maximum allowable value that is less than the secondary quantity that product management manages from the default conversion factor.",
                    "title":"Negative Deviation Factor"
                },
                "NegativeMeasurementError":{
                    "type":"number",
                    "description":"Maximum negative difference to allow between the cycle count quantity and the on-hand quantity that the application monitors.",
                    "title":"Negative Measurement Error"
                },
                "NegotiationRequiredFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: require negotiation. False: do not require negotiation.",
                    "title":"Negotiation Required"
                },
                "OntPricingQuantitySource":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Quantity to use to price the item.",
                    "title":"Pricing"
                },
                "OperationSlackPenalty":{
                    "type":"number",
                    "description":"Penalty for an item that incurs lag time between operations. Penalty incurs in units for each day.",
                    "title":"Operation Slack"
                },
                "OrderCost":{
                    "type":"number",
                    "description":"Fixed costs that are associated with placing a sales order for the item.",
                    "title":"Order"
                },
                "OrderManagementIndivisibleFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow orders in fractions of an item. False: do not allow orders in fractions of an item.",
                    "title":"Order Management Indivisible"
                },
                "OrderableOnWebFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the customer to order the item from the web. False: do not allow the customer to order the item from the web.",
                    "title":"Orderable on the Web"
                },
                "OrgIdChar":{
                    "maxLength":255,
                    "type":"string",
                    "description":""
                },
                "OrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the organizing unit in the internal or external structure of your enterprise. An organization provides the framework for performing legal reporting, financial control, and management reporting."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization for the item. The value of this attribute is VersionId for a pending or update operation, such as update the item version.",
                    "title":"Organization"
                },
                "OutputTaxClassificationCodeValue":{
                    "type":"string",
                    "description":"Tax classification to use when calculating tax according to location and tax codes."
                },
                "OutsideOperationUOMType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of unit of measure that outside processing uses.",
                    "title":"Unit Type"
                },
                "OutsideProcessingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to add the item to a purchase order that occurs outside of internal processing. False: do not allow this add.",
                    "title":"Outside Processing"
                },
                "OutsideProcessingUnitTypeValue":{
                    "type":"string",
                    "description":"Type of unit of measure that outside processing uses."
                },
                "OutsourcedAssemblyFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: the item is an outsourced assembly. False: the item is not an outsourced assembly.",
                    "title":"Outsourced Assembly"
                },
                "OverReturnTolerance":{
                    "type":"number",
                    "description":"Quantity that the return can exceed the approved return quantity when receiving the item or creating the receipt. If the return exceeds this quantity, then stop the return.",
                    "title":"Over Return Tolerance"
                },
                "OverShipmentTolerance":{
                    "type":"number",
                    "description":"Quantity that the shipment can exceed the ordered quantity when you confirm the shipment. If the shipment exceeds this quantity, then stop the shipment.",
                    "title":"Over Shipment Tolerance"
                },
                "OvercompletionToleranceType":{
                    "type":"number",
                    "description":"Abbreviation that identifies the tolerance type to use for overcompletion.",
                    "title":"Tolerance Type"
                },
                "OvercompletionToleranceTypeValue":{
                    "type":"string",
                    "description":"Tolerance type to use for overcompletion. Values include Percent or Amount."
                },
                "OvercompletionToleranceValue":{
                    "type":"number",
                    "description":"Percent or quantity of the assemblies that you will allow product management to overcomplete.",
                    "title":"Tolerance Value"
                },
                "PSSubInventoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the subinventory that uses the item as an ingredient in process manufacturing."
                },
                "PYSubInventoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the subinventory that contains the results of a production batch."
                },
                "PackTypeValue":{
                    "type":"string",
                    "description":"Trade Item Unit Descriptor (TIUD) that describes the hierarchy level of the Global Trade Item Number (GTIN). Use this hierarchy to create a relationship between different levels in the logistics chain."
                },
                "ParentChildGenerationCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines how to create child lot numbers for the item.",
                    "title":"Child Lot Generation"
                },
                "PaymentTermsId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the payment terms.",
                    "title":"Payment Terms"
                },
                "PaymentTermsValue":{
                    "type":"string",
                    "description":"Payment terms."
                },
                "Pegging":{
                    "type":"string",
                    "description":"End assembly pegging to use. This pegging determines when to calculate and print the end assemblies for the item."
                },
                "PickComponentsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item includes components picked from finished goods inventory. False: the item does not include components picked from finished goods inventory, but the item does reference a bill of materials that includes options and classes.",
                    "title":"Pick Components"
                },
                "PickingRuleId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the picking rule that defines the sequence to use when picking items from subinventories, locators, lots, and revisions.",
                    "title":"Picking Rule"
                },
                "PickingRuleValue":{
                    "type":"string",
                    "description":"Picking rule that defines the sequence to use when picking items from subinventories, locators, lots, and revisions."
                },
                "PlannedInventoryPointFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: store the material at the item level without losing materials or quality characteristics. False: do not store the material at the item level without losing materials or quality characteristics.",
                    "title":"Planned Inventory Point"
                },
                "Planner":{
                    "type":"string",
                    "description":"Material planner for the item."
                },
                "PlannerCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the material planner for the item.",
                    "title":"Planner"
                },
                "PlanningMakeBuyCode":{
                    "type":"number",
                    "description":"Abbreviation that determines whether your organization manufactures or buys the item.",
                    "title":"Make or Buy"
                },
                "PlanningMakeBuyValue":{
                    "type":"string",
                    "description":"Contains True or False. True: your organization typically manufactures the item. False: your organization typically buys the item."
                },
                "PlanningMethodValue":{
                    "type":"string",
                    "description":"Method to use when planning demand for the item. Values include Min-Max, Not Planned, or Reorder Point."
                },
                "PlanningTimeDays":{
                    "type":"number",
                    "description":"Days to add to the planning time fence. Use this attribute as an option when you define the time fence.",
                    "title":"Planning Time Days"
                },
                "PlanningTimeFence":{
                    "type":"string",
                    "description":"Point in time to use when applying restrictions on planning recommendations."
                },
                "PlanningTimeFenceCode":{
                    "type":"number",
                    "description":"Abbreviation that determines the point in time to use when applying restrictions on planning recommendations.",
                    "title":"Planning Time Fence"
                },
                "PositiveDeviationFactor":{
                    "type":"number",
                    "description":"Maximum positive deviation for the transaction. This deviation is the maximum allowable value that is greater than the secondary quantity that product management manages from the default conversion factor.",
                    "title":"Positive Deviation Factor"
                },
                "PositiveMeasurementError":{
                    "type":"number",
                    "description":"Maximum positive difference to allow between the cycle count quantity and the on-hand quantity that the application monitors.",
                    "title":"Positive Measurement Error"
                },
                "PostprocessingDays":{
                    "type":"number",
                    "description":"Number of days required to receive a purchased item into inventory from the supplier receipt.",
                    "title":"Postprocessing Days"
                },
                "PrepositionPointFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use a push relationship with the trading partner. False: do not use a push relationship.",
                    "title":"Preposition Point"
                },
                "PreprocessingDays":{
                    "type":"number",
                    "description":"Number of days to add to the purchasing lead time or manufacturing lead time to place the sales order.",
                    "title":"Preprocessing Days"
                },
                "PriceTolerancePercentage":{
                    "type":"number",
                    "description":"Maximum price percent over the normal price range of the item. For example, if the tolerance percent is 5, then the maximum acceptable price on the purchase order is 5% over the requisition price. In this example, a purchase order price that is 5% above the requisition price is not acceptable, and you cannot approve the purchase order.",
                    "title":"Price Tolerance Percentage"
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure that the item uses.",
                    "title":"Primary Unit of Measure"
                },
                "PrimaryUOMValue":{
                    "type":"string",
                    "description":"Unit of measure that the item uses."
                },
                "ProcessCostingEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the process costing module with the item. False: do not use the process costing module with the item.",
                    "title":"Process Costing Enabled"
                },
                "ProcessExecutionEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the item in a production batch as an ingredient, product, or by-product. False: do not use the item in a production batch as an ingredient, product, or by-product.",
                    "title":"Process Execution Enabled"
                },
                "ProcessQualityEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the quality module in process manufacturing with the item. False: do not use the quality module in process manufacturing with the item.",
                    "title":"Process Quality Enabled"
                },
                "ProcessSupplyLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the location that uses the item as an ingredient in process manufacturing.",
                    "title":"Process Supply Locator"
                },
                "ProcessSupplyLocatorValue":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Locator that uses the item as an ingredient in process manufacturing."
                },
                "ProcessSupplySubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the subinventory that uses the item as an ingredient in process manufacturing.",
                    "title":"Process Supply Subinventory"
                },
                "ProcessSupplySubinventoryValue":{
                    "type":"string",
                    "description":"Subinventory that uses the item as an ingredient in process manufacturing."
                },
                "ProcessYieldLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator that contains the results of a production batch.",
                    "title":"Process Yield Locator"
                },
                "ProcessYieldLocatorValue":{
                    "type":"string",
                    "description":"Locator that contains the results of a production batch."
                },
                "ProcessYieldSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the subinventory that contains the results of a production batch.",
                    "title":"Process Yield Subinventory"
                },
                "ProcessYieldSubinventoryValue":{
                    "type":"string",
                    "description":"Subinventory that contains the results of a production batch."
                },
                "ProcessingDays":{
                    "type":"number",
                    "description":"Number of days required to procure or manufacture the item.",
                    "title":"Processing Days"
                },
                "PurchasableFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to add the item to the purchase order. False: do not allow this add.",
                    "title":"Purchasable"
                },
                "PurchasingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item is purchased and received. False: the item is not purchased and received.",
                    "title":"Purchased"
                },
                "PurchasingInputTaxClassificationValue":{
                    "type":"string",
                    "description":"Tax classification to use for the item."
                },
                "PurchasingTaxCode":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Abbreviation that determines the tax classification to use for the item.",
                    "title":"Input Tax Classification Code"
                },
                "QuantityRcvExceptionCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the action to perform when the receive date occurs outside of the range that the Quantity Received Tolerance attribute defines.",
                    "title":"Action"
                },
                "QuantityReceivedToleranceAction":{
                    "type":"string",
                    "description":"Action to perform when the receive date occurs outside of the range that the Quantity Received Tolerance attribute defines."
                },
                "QuantityReceivedTolerancePercentage":{
                    "type":"number",
                    "description":"Maximum percent of the quantity received to allow that is greater than the expected receipt quantity. For example, if the expected receipt quantity is 10, and if QuantityReceivedTolerancePercentage is 20, then allow a received quantity of up to 12.",
                    "title":"Tolerance Percentage"
                },
                "RMAInspectionRequiredFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: require inspection for each item that the customer returns, and then transfer this item to inventory. False: do not require inspection.",
                    "title":"RMA Inspection Required"
                },
                "ReceiptCloseTolerancePercentage":{
                    "type":"number",
                    "description":"Percent tolerance to use when closing the purchase order shipment for receipt.",
                    "title":"Receipt Close Tolerance Percentage"
                },
                "ReceiptDateActionValue":{
                    "type":"string",
                    "description":"Action to perform if the receive date occurs outside the range that the Days Early Receipt Allowed attribute or Days Late Receipt Allowed attribute defines. Values include None, Reject, Warning."
                },
                "ReceiptDaysExceptionCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the action to perform if the receive date occurs outside the range that the Days Early Receipt Allowed attribute or Days Late Receipt Allowed attribute defines. Values include None, Reject, Warning.",
                    "title":"Receipt Date Action"
                },
                "ReceiptRountingValue":{
                    "type":"string",
                    "description":"Routing of the item during receipt."
                },
                "ReceivingRoutingId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the routing of the item during receipt.",
                    "title":"Receipt Routing"
                },
                "RecipeEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the item in recipes or formulas in process manufacturing. False: do not use the item in these recipes or formulas.",
                    "title":"Recipe Enabled"
                },
                "RecoveredPartDispCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines how to return a defective or unused part to the warehouse consolidation point.",
                    "title":"Recovered Part Disposition"
                },
                "RecoveredPartDispositionValue":{
                    "type":"string",
                    "description":"Determines how to return a defective or unused part to the warehouse consolidation point."
                },
                "ReleaseAuthorizationRequiredValue":{
                    "type":"string",
                    "description":"Determines whether or not to require authorization before creating the sales order."
                },
                "ReleaseTimeDays":{
                    "type":"number",
                    "description":"Number of days to add to the plan date when calculating the demand time fence.",
                    "title":"Release Time Days"
                },
                "ReleaseTimeFence":{
                    "type":"string",
                    "description":"Point in time to use when releasing a planned sales order that references a discretely planned item as work in process or as a purchase requisition."
                },
                "ReleaseTimeFenceCode":{
                    "type":"number",
                    "description":"Abbreviation that determines the point in time to use when releasing a planned sales order that references a discretely planned item as work in process or as a purchase requisition.",
                    "title":"Release Time Fence"
                },
                "RepairLeadtime":{
                    "type":"number",
                    "description":"Number of days required to repair the part at the supplier site.",
                    "title":"Repair Lead Time"
                },
                "RepairProgram":{
                    "type":"number",
                    "description":"Abbreviation that determines the vendor relationship to use when repairing the item.",
                    "title":"Repair Program"
                },
                "RepairProgramValue":{
                    "type":"string",
                    "description":"Vendor relationship to use when repairing the item."
                },
                "RepairYield":{
                    "type":"number",
                    "description":"Yield when you upgrade or repair a defective part.",
                    "title":"Repair Yield"
                },
                "ReplenishmentMinimumDays":{
                    "type":"number",
                    "description":"Minimum days of supply to allow before replenishing the item.",
                    "title":"Minimum Days of Supply"
                },
                "ReplenishmentMinimumOrder":{
                    "type":"number",
                    "description":"Minimum quantity for the sales order or repetitive rate in the number of units for each day.",
                    "title":"Minimum Order"
                },
                "ReplenishmentType":{
                    "type":"string",
                    "description":"Determines how to replenish inventory that the requests have depleted. Values include Inventory, Supplier, or Subinventory."
                },
                "RequiresFulfillmentLocFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: require the fulfillment location for the item. False: do not require the fulfillment location.",
                    "title":"Requires Fulfillment Location"
                },
                "RequiresItemAssociationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: require the item association for the item. False: do not require the item association.",
                    "title":"Requires item association"
                },
                "ReservableFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: you can reserve the item and it includes inventory attributes. False: you cannot reserve the item and it might not include inventory attributes.",
                    "title":"Reservable"
                },
                "RestrictLocatorsFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: restrict transactions for this item to or from the locator. False: do not restrict.",
                    "title":"Restrict Locators"
                },
                "RestrictSubinventoriesFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: restrict transactions for this item to or from the subinventory. False: do not restrict.",
                    "title":"Restrict Subinventory"
                },
                "RetestInterval":{
                    "type":"number",
                    "description":"Number of days after the creation date before retesting the lot.",
                    "title":"Retest Interval"
                },
                "ReturnableFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the customer to return the item. False: do not allow this return.",
                    "title":"Returnable"
                },
                "RevisionForVersion":{
                    "type":"string",
                    "description":"Indicates an incremental change to the item. This attribute is read-only."
                },
                "RevisionQuantityControlFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: the item is under revision control and it includes inventory attributes. False: the item is not under revision control and it might not include inventory attributes.",
                    "title":"Revision Control"
                },
                "RoundingControlTypeFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: resolve the unit of issue to an integer. Set this attribute to True to round the quantity on an internal requisition when converting between the unit of measure on the requisition line and the item on the unit of issue. False: do not resolve the unit of issue to an integer. Setting this attribute to False might result in a fractional amount.",
                    "title":"Round Order Quantities"
                },
                "RoundingFactor":{
                    "type":"number",
                    "description":"Factor to use when rounding the quantity on an internal requisition. This rounding occurs when converting the unit of measure on the requisition line to the unit of measure on the unit of issue. This factor makes sure that the unit of issue resolves to an integer, and not to a fractional amount.",
                    "title":"Rounding Factor"
                },
                "SOAuthorizationCode":{
                    "type":"number",
                    "description":"Abbreviation that determines whether or not to require authorization before creating the sales order.",
                    "title":"Release Authorization Required"
                },
                "SafetyStockPlanningMethod":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines the method to use when planning the safety stock for the item.",
                    "title":"Safety Stock Planning Method"
                },
                "SafetyStockPlanningMethodValue":{
                    "type":"string",
                    "description":"Method to use when planning the safety stock for the item."
                },
                "SalesAccount":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the account to use when tracking a sales item.",
                    "title":"Sales Account"
                },
                "SalesAccountValue":{
                    "type":"string",
                    "description":"Account to use when tracking a sales item."
                },
                "SalesProductType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the item type. Affects the sales process.",
                    "title":"Sales Product Type"
                },
                "SalesProductTypeValue":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Item type. Affects the sales process."
                },
                "SalesSIN":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Structure Instance Number (SIN) that the sales account uses."
                },
                "SecondaryDefaultId":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the control that defaults the item. Values include Fixed, Default, or No Default.",
                    "title":"Defaulting Control"
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure that the item uses.",
                    "title":"Secondary Unit of Measure"
                },
                "SecondaryUnitofMeasureValue":{
                    "type":"string",
                    "description":"Secondary unit of measure that the item uses."
                },
                "SerialGenerationValue":{
                    "type":"string",
                    "description":"Number to assign to each unit for the item and to track the item."
                },
                "SerialNumberControlCode":{
                    "type":"number",
                    "description":"Abbreviation that identifies the number to assign to each unit for the item and to track the item.",
                    "title":"Generation"
                },
                "SerialStartingNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number to use for each inventory item.",
                    "title":"Starting Number"
                },
                "SerialStartingPrefix":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Alphabetic prefix to add to each serial number that you define.",
                    "title":"Starting Prefix"
                },
                "SerialStatusEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow the application to control each item according to serial status. False: do not allow this control.",
                    "title":"Serial Status Enabled"
                },
                "ServiceBillingEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: enable the billing service. False: do not enable the billing service.",
                    "title":"Enable Service Billing"
                },
                "ServiceDuration":{
                    "type":"number",
                    "description":"Duration of an item that fulfills a service contract.",
                    "title":"Duration"
                },
                "ServiceDurationPeriodCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the positive number to indicate the service duration period.",
                    "title":"Duration Period"
                },
                "ServiceDurationPeriodValue":{
                    "type":"string",
                    "description":"Duration of the service period."
                },
                "ServiceDurationTypeCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of duration for an item that fulfills a service contract.",
                    "title":"Service Duration Type"
                },
                "ServiceDurationTypeValue":{
                    "type":"string",
                    "description":"Type of duration for an item that fulfills a service contract."
                },
                "ServiceRequestEnabledCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies an item that fulfills a service request.",
                    "title":"Service Request"
                },
                "ServiceRequestEnabledValue":{
                    "type":"string",
                    "description":"Identifies an item that fulfills a service request."
                },
                "ServiceStartDelay":{
                    "type":"number",
                    "description":"Delay in starting a service contract after a milestone finishes.",
                    "title":"Service Start Delay"
                },
                "ServiceStartTypeCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of service start rule to use for an item that fulfills a service contract.",
                    "title":"Service Start Type"
                },
                "ServiceStartTypeValue":{
                    "type":"string",
                    "description":"Type of service start rule to use for an item that fulfills a service contract."
                },
                "ServiceStartingDelay":{
                    "type":"number",
                    "description":"Number of days to use when delaying the start of a service contract after a milestone finishes.",
                    "title":"Starting Delay in Days"
                },
                "ServiceableProductFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: a service contract can provide coverage for the item. False: a service contract cannot provide coverage for the item.",
                    "title":"Enable Contract Coverage"
                },
                "ShelfLifeCode":{
                    "type":"number",
                    "description":"Abbreviation that determines how to control the shelf life and the lot expiration for each inventory item.",
                    "title":"Control"
                },
                "ShelfLifeDays":{
                    "type":"number",
                    "description":"Number of days that each lot is active.",
                    "title":"Shelf Life Days"
                },
                "ShipModelCompleteFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: ship each configuration derived from this configuration model only when the required quantities for each component, option, and item that the configuration references is available. False: ship the configuration even if one or more of these quantities is not available.",
                    "title":"Ship Model Complete"
                },
                "ShippableFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the application can ship the item to the customer. False: the application cannot ship the item. For example, the item is a service agreement that you do not physically ship.",
                    "title":"Shippable"
                },
                "ShrinkageRate":{
                    "type":"number",
                    "description":"Average amount of material you expect to lose when manufacturing or storing the item.",
                    "title":"Shrinkage Rate"
                },
                "SourceOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that an internal requisition uses as the source to get the item.",
                    "title":"Organization"
                },
                "SourceOrganizationValue":{
                    "type":"string",
                    "description":"Organization that an internal requisition uses as the source to get the item."
                },
                "SourceSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the subinventory that an internal requisition uses as the source to get the item.",
                    "title":"Subinventory"
                },
                "SourceSubinventoryOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that owns the SourceSubinventory."
                },
                "SourceSubinventoryOrganizationValue":{
                    "type":"string",
                    "description":"Organization that owns the SourceSubinventory."
                },
                "SourceSubinventoryValue":{
                    "type":"string",
                    "description":"Subinventory that an internal requisition uses as the source to get the item."
                },
                "SourceType":{
                    "type":"number",
                    "description":"Abbreviation that determines how to replenish inventory that the requests have depleted.",
                    "title":"Replenishment Type"
                },
                "StandardLotSize":{
                    "type":"number",
                    "description":"Item quantity that product management orders from the plant or supplier, or issues to the production process.",
                    "title":"Standard Lot Size"
                },
                "StartingLotNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Starting lot number to use for items.",
                    "title":"Starting Number"
                },
                "StartingLotPrefix":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting alphabetic prefix to add to each serial number that you define.",
                    "title":"Starting Prefix"
                },
                "StockEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the item is stocked. False: the item is not stocked.",
                    "title":"Stocked"
                },
                "StockLocatorControlValue":{
                    "type":"string",
                    "description":"Physical area in the subinventory where you store the item, such as a row, aisle, bin, or shelf."
                },
                "StructureItemTypeValue":{
                    "type":"string",
                    "description":"Type of structure that the item uses. Values include Model, Option Class, Standard, or Planning."
                },
                "StyleItemFlag":{
                    "type":"boolean",
                    "description":"Determines whether or not the item is a style item.",
                    "title":"Style Item"
                },
                "StyleItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the style item.",
                    "title":"Style Item Number"
                },
                "StyleItemNumberValue":{
                    "type":"string",
                    "description":"Number that identifies the style item."
                },
                "SubInventoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the subinventory that contains the item."
                },
                "SubcontractingComponent":{
                    "type":"number",
                    "description":"Abbreviation that identifies the subcontracting type for this item when Chargeable Subcontracting uses it as a subcontract component. Values include Prepositioned or Synchronized.",
                    "title":"Subcontracting Component"
                },
                "SubcontractingComponentValue":{
                    "type":"string",
                    "description":"Subcontracting type for this item when Chargeable Subcontracting uses it as a subcontract component. Values include Prepositioned or Synchronized."
                },
                "SubstitutionDays":{
                    "type":"number",
                    "description":"Number of days to wait before substituting the item. Use this attribute for the master production schedule (MPS) or for distribution requirements planning (DRP).",
                    "title":"Substitution Days"
                },
                "SubstitutionWindow":{
                    "type":"string",
                    "description":"Point in time to use when substituting the item. Use this attribute for the master production schedule (MPS) or for distribution requirements planning (DRP)."
                },
                "SubstitutionWindowCode":{
                    "type":"number",
                    "description":"Abbreviation that determines the point in time to use when substituting the item. Use this attribute for the master production schedule (MPS) or for distribution requirements planning (DRP).",
                    "title":"Substitution Window"
                },
                "TagetInventoryWindow":{
                    "type":"number",
                    "description":"Quantity required in the target inventory that the planning process must create to achieve the desired business metric, such as throughput rate, cost, due date performance, inventory, days of supply, and so on.",
                    "title":"Target Inventory Window"
                },
                "TargetInventoryDaysofSupply":{
                    "type":"number",
                    "description":"Days of supply in the target inventory that the planning process must create to achieve the desired business metric, such as throughput rate, cost, due date performance, inventory, days of supply, and so on.",
                    "title":"Target Inventory Days of Supply"
                },
                "TaxCode":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Abbreviation that identifies the tax classification to use when calculating tax according to location and tax codes.",
                    "title":"Output Tax Classification Code"
                },
                "TaxableFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the supplier charges a tax on the item. False: the supplier does not charge a tax on the item.",
                    "title":"Taxable"
                },
                "Template":{
                    "type":"string",
                    "description":"Name of the template to apply to the item."
                },
                "TemplateId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item template."
                },
                "TrackInstalledBaseFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: track the item lifecycle in the installed base and in enterprise applications that use the installed base. False: do not do this tracking.",
                    "title":"Track in Installed Base"
                },
                "TrackingQuantityId":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the unit of measure that tracks the item in inventory.",
                    "title":"Tracking Unit of Measure"
                },
                "TrackingUnitofMeasure":{
                    "type":"string",
                    "description":"Unit of measure that tracks the item in inventory."
                },
                "TradeItemDescriptor":{
                    "maxLength":35,
                    "type":"string",
                    "description":"Hierarchy level in the Global Trade Item Number (GTIN). Use this hierarchy to create a relationship between different levels in the logistics chain.",
                    "title":"Pack Type"
                },
                "TransactionConversionValue":{
                    "type":"string",
                    "description":"Determines how to convert the transaction. Values include Standard or Item Specific Conversion."
                },
                "TransactionEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow transactions in order management. False: do not allow transactions in order management. The transaction in order management identifies the type of transaction in each application where the budget control transaction starts.",
                    "title":"Order Management Transaction Enabled"
                },
                "UNNumberId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the United Nations identification number for international trade.",
                    "title":"UN Number"
                },
                "UNNumberValue":{
                    "type":"string",
                    "description":"United Nations identification number for international trade."
                },
                "UOMPricingValue":{
                    "type":"string",
                    "description":"Unit of measure to use to price the item."
                },
                "UnderReturnTolerance":{
                    "type":"number",
                    "description":"Quantity that the return can fall below the approved return quantity when receiving the item or creating the receipt and still be considered a full return. If the return falls below this quantity, then stop the return.",
                    "title":"Under Return Tolerance"
                },
                "UnderShipmentTolerance":{
                    "type":"number",
                    "description":"Quantity that the shipment can fall below the ordered quantity when you confirm the shipment. If the shipment falls below this quantity, then stop the shipment.",
                    "title":"Under Shipment Tolerance"
                },
                "UnitHeightQuantity":{
                    "type":"number",
                    "description":"Height of the item.",
                    "title":"Height"
                },
                "UnitLengthQuantity":{
                    "type":"number",
                    "description":"Length of the item.",
                    "title":"Length"
                },
                "UnitOfIssue":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure to use when issuing the item from inventory.",
                    "title":"Unit of Issue"
                },
                "UnitOfIssueValue":{
                    "type":"string",
                    "description":"Unit of measure to use when issuing the item from inventory."
                },
                "UnitVolumeQuantity":{
                    "type":"number",
                    "description":"Volume of one item.",
                    "title":"Unit Volume"
                },
                "UnitWeightQuantity":{
                    "type":"number",
                    "description":"Weight of one item.",
                    "title":"Unit Weight"
                },
                "UnitWidthQuantity":{
                    "type":"number",
                    "description":"Width of the item.",
                    "title":"Width"
                },
                "UseApprovedSupplierFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: require an approved supplier. False: do not require an approved supplier.",
                    "title":"Use Approved Supplier"
                },
                "UserItemTypeValue":{
                    "type":"string",
                    "description":"Group of items that possess the same set of item attributes. For example, each account generator item references a group of processes that determine how to create an accounting flexfield."
                },
                "VMIFixedOrderQuantity":{
                    "type":"number",
                    "description":"Fixed quantity to reorder in the inventory that the vendor manages.",
                    "title":"Fixed Quantity"
                },
                "VMIForecastType":{
                    "type":"number",
                    "description":"Abbreviation that determines the type of demand for the item. Values include Consume, Consume and Derive, or None.",
                    "title":"Forecast Type"
                },
                "VariableLeadTime":{
                    "type":"number",
                    "description":"Time to produce one unit of an assembly.",
                    "title":"Variable"
                },
                "VehicleItemFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use vehicles to ship items. False: do not use vehicles.",
                    "title":"Vehicle"
                },
                "Version":{
                    "type":"string",
                    "description":"Item version. This attribute is read-only."
                },
                "VersionDescription":{
                    "type":"string",
                    "description":"Description of a version of the item. This attribute is read-only."
                },
                "VersionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item version.",
                    "title":"Item Version Number"
                },
                "VersionPlannedEffectiveDateTime":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the item revision is active."
                },
                "VersionStatus":{
                    "type":"string",
                    "description":"Status of the item revision. The EGO_VERSION_STATUSES lookup defines the values that you can use with this attribute. This attribute is read-only."
                },
                "VolumeUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure for the item volume.",
                    "title":"Unit"
                },
                "VolumeUOMValue":{
                    "type":"string",
                    "description":"Unit of measure for the item volume."
                },
                "WIPSupplyLocatorValue":{
                    "type":"string",
                    "description":"Supply locator to use when issuing the item to or pulling the item from work in process."
                },
                "WIPSupplySubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the supply subinventory to use for components.",
                    "title":"Supply Subinventory"
                },
                "WIPSupplySubinventoryValue":{
                    "type":"string",
                    "description":"Supply subinventory to use for components."
                },
                "WIPSupplyType":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the supply type of the components.",
                    "title":"Supply Type"
                },
                "WIPSupplyTypeValue":{
                    "type":"string",
                    "description":"Supply type of the components."
                },
                "WarehouseEquipmentFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: the item is equipment. False: the item is not equipment.",
                    "title":"Warehouse Equipment"
                },
                "WebStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the web status of the item. Valuses include Enabled, Published, or Unpublished.",
                    "title":"Web Status"
                },
                "WebStatusValue":{
                    "type":"string",
                    "description":"Web status of the item. Values include Enabled, Published, or Unpublished."
                },
                "WeightUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure for the item weight.",
                    "title":"Unit"
                },
                "WeightUOMValue":{
                    "type":"string",
                    "description":"Unit of measure for the item weight."
                },
                "WipSupplyLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supply locator to use when issuing the item to or pulling the item from work in process.",
                    "title":"Supply Locator"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"OrganizationCode LOV",
                    "description":"Abbreviations that identify the organization.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OrganizationCode; Target Attribute: OrganizationCode</li><li>Source Attribute: OrganizationId; Target Attribute: OrganizationId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovOrganizationValue?fields=OrganizationCode,OrganizationId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the organization."
                            },
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Organization Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "OrganizationCode",
                        "OrganizationId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ItemClass LOV",
                    "description":"Item classes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ItemClass; Target Attribute: ItemClassName</li><li>Source Attribute: ItemCatalogGroupId; Target Attribute: ItemClassId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovItemCatalogGroupValue?fields=ItemClassName,ItemClassId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ItemClassName":{
                                "type":"string",
                                "description":"Item class name."
                            },
                            "ItemClassId":{
                                "type":"integer",
                                "description":"Item class Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ItemClass",
                        "ItemCatalogGroupId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Template LOV",
                    "description":"Item templates.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Template; Target Attribute: TemplateName</li><li>Source Attribute: TemplateId; Target Attribute: InventoryItemId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovTemplateValue?fields=TemplateName,InventoryItemId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "TemplateName":{
                                "type":"string",
                                "description":"Template name."
                            },
                            "InventoryItemId":{
                                "type":"integer",
                                "description":"Inventory item Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Template",
                        "TemplateId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ApprovalStatusValue LOV",
                    "description":"Approval statuses.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ApprovalStatusValue; Target Attribute: Meaning</li><li>Source Attribute: ApprovalStatus; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovApprovalStatusValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ApprovalStatusValue",
                        "ApprovalStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ItemStatusValue LOV",
                    "description":"Item statuses.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ItemStatusValue; Target Attribute: InventoryItemStatusCode</li><li>Source Attribute: InventoryItemStatusCode; Target Attribute: InventoryItemStatusCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovInventoryItemStatusValue?fields=InventoryItemStatusCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "InventoryItemStatusCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the item status in inventory."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ItemStatusValue",
                        "InventoryItemStatusCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LifecyclePhaseValue LOV",
                    "description":"Lifecycle phases.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LifecyclePhaseValue; Target Attribute: PhaseName</li><li>Source Attribute: CurrentPhaseCode; Target Attribute: PhaseCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovCurrentPhaseValue?fields=PhaseName,PhaseCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PhaseName":{
                                "type":"string",
                                "description":"Name of the lifecycle phase."
                            },
                            "PhaseCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lifecycle phase."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LifecyclePhaseValue",
                        "CurrentPhaseCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"StyleItemNumberValue LOV",
                    "description":"Style item numbers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StyleItemNumberValue; Target Attribute: ItemNumber</li><li>Source Attribute: StyleItemId; Target Attribute: InventoryItemId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovStyleItemNumbervalue?fields=ItemNumber,InventoryItemId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ItemNumber":{
                                "type":"string",
                                "description":"Item number."
                            },
                            "InventoryItemId":{
                                "type":"integer",
                                "description":"Inventory item Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "StyleItemNumberValue",
                        "StyleItemId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"UserItemTypeValue LOV",
                    "description":"User item types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: UserItemTypeValue; Target Attribute: Meaning</li><li>Source Attribute: ItemType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovItemTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "UserItemTypeValue",
                        "ItemType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PackTypeValue LOV",
                    "description":"Pack types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PackTypeValue; Target Attribute: Meaning</li><li>Source Attribute: TradeItemDescriptor; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovTradeItemDescriptorValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PackTypeValue",
                        "TradeItemDescriptor"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PrimaryUOMValue LOV",
                    "description":"Primary units of measure.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PrimaryUOMValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: PrimaryUOMCode; Target Attribute: UomCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPrimaryUOMValue?fields=UnitOfMeasure,UomCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            },
                            "UomCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PrimaryUOMValue",
                        "PrimaryUOMCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"TrackingUnitofMeasure LOV",
                    "description":"Tracking units of measure.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TrackingUnitofMeasure; Target Attribute: Meaning</li><li>Source Attribute: TrackingQuantityId; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovTrackingQuantityIndValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "TrackingUnitofMeasure",
                        "TrackingQuantityId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"UOMPricingValue LOV",
                    "description":"Units of measure for pricing.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: UOMPricingValue; Target Attribute: Meaning</li><li>Source Attribute: OntPricingQuantitySource; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovOntPricingQuantitySourceValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "UOMPricingValue",
                        "OntPricingQuantitySource"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"TransactionConversionValue LOV",
                    "description":"Transaction conversions.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TransactionConversionValue; Target Attribute: Meaning</li><li>Source Attribute: AllowedUnitsLookupCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovAllowedUnitsLookupValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "TransactionConversionValue",
                        "AllowedUnitsLookupCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SecondaryUnitofMeasureValue LOV",
                    "description":"Secondary units of measure.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SecondaryUnitofMeasureValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: SecondaryUOMCode; Target Attribute: UomCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSecondaryUomValue?fields=UnitOfMeasure,UomCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            },
                            "UomCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SecondaryUnitofMeasureValue",
                        "SecondaryUOMCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultingControlValue LOV",
                    "description":"Defaulting controls.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultingControlValue; Target Attribute: Meaning</li><li>Source Attribute: SecondaryDefaultId; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSecondaryDefaultIndValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultingControlValue",
                        "SecondaryDefaultId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CopyFromItemValue LOV",
                    "description":"Items to copy from.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CopyFromItemValue; Target Attribute: ItemNumber</li><li>Source Attribute: CopyFromItemId; Target Attribute: InventoryItemId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovCopyFromItem1?fields=ItemNumber,InventoryItemId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ItemNumber":{
                                "type":"string",
                                "description":"Inventory item number."
                            },
                            "InventoryItemId":{
                                "type":"integer",
                                "description":"Inventory item ID."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CopyFromItemValue",
                        "CopyFromItemId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CopyFromOrganizationValue LOV",
                    "description":"Organizations to copy item from.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CopyFromOrganizationValue; Target Attribute: OrganizationCode</li><li>Source Attribute: CopyFromOrganizationId; Target Attribute: OrganizationId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovCopyFromOrgValue?fields=OrganizationCode,OrganizationId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the organization."
                            },
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Organization Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CopyFromOrganizationValue",
                        "CopyFromOrganizationId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CopyFromRevisionValue LOV",
                    "description":"Revisions to copy from.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CopyFromRevisionValue; Target Attribute: Revision</li><li>Source Attribute: CopyFromRevisionId; Target Attribute: RevisionId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovCopyFromRevisionValue?fields=Revision,RevisionId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Revision":{
                                "type":"string",
                                "description":"Item revision."
                            },
                            "RevisionId":{
                                "type":"integer",
                                "description":"Item revision Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CopyFromRevisionValue",
                        "CopyFromRevisionId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CopyFromVersionValue LOV",
                    "description":"Versions to copy from.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CopyFromVersionValue; Target Attribute: VersionLabel</li><li>Source Attribute: CopyFromVersionId; Target Attribute: VersionId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovCopyFromVersionValue?fields=VersionLabel,VersionId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "VersionLabel":{
                                "type":"string",
                                "description":"Item version."
                            },
                            "VersionId":{
                                "type":"integer",
                                "description":"Item version Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CopyFromVersionValue",
                        "CopyFromVersionId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"StructureItemTypeValue LOV",
                    "description":"Structure item types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StructureItemTypeValue; Target Attribute: Meaning</li><li>Source Attribute: BOMItemType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovBOMItemTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "StructureItemTypeValue",
                        "BOMItemType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"CreateConfiguredItem LOV",
                    "description":"Configured items.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CreateConfiguredItem; Target Attribute: Meaning</li><li>Source Attribute: ConfigOrganization; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovConfigOrgsValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "CreateConfiguredItem",
                        "ConfigOrganization"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ConfigModelTypeValue LOV",
                    "description":"Configured model types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ConfigModelTypeValue; Target Attribute: Meaning</li><li>Source Attribute: ConfigModelType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovConfigModelTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ConfigModelTypeValue",
                        "ConfigModelType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"EffectivityControlValue LOV",
                    "description":"Effectivity controls.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EffectivityControlValue; Target Attribute: Meaning</li><li>Source Attribute: EffectivityControl; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEffectivityControlValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "EffectivityControlValue",
                        "EffectivityControl"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"BaseItemValue LOV",
                    "description":"Base items.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BaseItemValue; Target Attribute: ItemNumber</li><li>Source Attribute: BaseItemId; Target Attribute: InventoryItemId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovBaseItemValue?fields=ItemNumber,InventoryItemId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ItemNumber":{
                                "type":"string",
                                "description":"Inventory item number."
                            },
                            "InventoryItemId":{
                                "type":"integer",
                                "description":"Inventory item identification."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "BaseItemValue",
                        "BaseItemId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"WIPSupplyTypeValue LOV",
                    "description":"Supply types for work in process.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WIPSupplyTypeValue; Target Attribute: Meaning</li><li>Source Attribute: WIPSupplyType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovWIPSupplyTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "WIPSupplyTypeValue",
                        "WIPSupplyType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"WIPSupplySubinventoryValue LOV",
                    "description":"Subinventory types to supply work in process.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WIPSupplySubinventoryValue; Target Attribute: SecondaryInventoryName</li><li>Source Attribute: WIPSupplySubinventory; Target Attribute: SecondaryInventoryName</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovWIPSupplySubinventoryValue?fields=SecondaryInventoryName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "SecondaryInventoryName":{
                                "type":"string",
                                "description":"Subinventory name."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "WIPSupplySubinventoryValue",
                        "WIPSupplySubinventory"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"OvercompletionToleranceTypeValue LOV",
                    "description":"Overcompletion tolerance types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OvercompletionToleranceTypeValue; Target Attribute: Meaning</li><li>Source Attribute: OvercompletionToleranceType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovOvercompletionToleranceTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "OvercompletionToleranceTypeValue",
                        "OvercompletionToleranceType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProcessSupplySubinventoryValue LOV",
                    "description":"Process supply subinventories.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProcessSupplySubinventoryValue; Target Attribute: SecondaryInventoryName</li><li>Source Attribute: ProcessSupplySubinventory; Target Attribute: SecondaryInventoryName</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovProcessSupplySubinventoryValue?fields=SecondaryInventoryName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "SecondaryInventoryName":{
                                "type":"string",
                                "description":"Supply subinventory name."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProcessSupplySubinventoryValue",
                        "ProcessSupplySubinventory"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ProcessYieldSubinventoryValue LOV",
                    "description":"Process yield subinventories.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProcessYieldSubinventoryValue; Target Attribute: SecondaryInventoryName</li><li>Source Attribute: ProcessYieldSubinventory; Target Attribute: SecondaryInventoryName</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovProcessYieldSubinventoryValue?fields=SecondaryInventoryName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "SecondaryInventoryName":{
                                "type":"string",
                                "description":"Yield subinventory name."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ProcessYieldSubinventoryValue",
                        "ProcessYieldSubinventory"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AssetItemTypeValue LOV",
                    "description":"Asset item types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssetItemTypeValue; Target Attribute: Meaning</li><li>Source Attribute: EAMItemType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEamItemTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AssetItemTypeValue",
                        "EAMItemType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AssetActivityCauseValue LOV",
                    "description":"Asset activity causes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssetActivityCauseValue; Target Attribute: Meaning</li><li>Source Attribute: EAMActivityCauseCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEamActivityCauseValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AssetActivityCauseValue",
                        "EAMActivityCauseCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AssetActivityShutdownTypeValue LOV",
                    "description":"Shutdown types for the asset activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssetActivityShutdownTypeValue; Target Attribute: Meaning</li><li>Source Attribute: EAMActivityShutdownStatus; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEamActShutdownStatusValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AssetActivityShutdownTypeValue",
                        "EAMActivityShutdownStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"EAMActivityTypeValue LOV",
                    "description":"Activity types for enterprise asset management.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EAMActivityTypeValue; Target Attribute: Meaning</li><li>Source Attribute: EAMActivityTypeCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEamActivityTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "EAMActivityTypeValue",
                        "EAMActivityTypeCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"EAMActivitySourceValue LOV",
                    "description":"Activity sources for enterprise asset management.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EAMActivitySourceValue; Target Attribute: Meaning</li><li>Source Attribute: EAMActivitySourceCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEamActivitySourceValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "EAMActivitySourceValue",
                        "EAMActivitySourceCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AssetClassValue LOV",
                    "description":"Asset classes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssetClassValue; Target Attribute: Meaning</li><li>Source Attribute: AssetClass; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovAssetClassValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AssetClassValue",
                        "AssetClass"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ServiceRequestEnabledValue LOV",
                    "description":"Service request enabled flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ServiceRequestEnabledValue; Target Attribute: Meaning</li><li>Source Attribute: ServiceRequestEnabledCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovServRequestEnabledValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ServiceRequestEnabledValue",
                        "ServiceRequestEnabledCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ServiceDurationTypeValue LOV",
                    "description":"Service duration types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ServiceDurationTypeValue; Target Attribute: Meaning</li><li>Source Attribute: ServiceDurationTypeCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovServiceDurationTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ServiceDurationTypeValue",
                        "ServiceDurationTypeCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ServiceDurationPeriodValue LOV",
                    "description":"Service duration periods.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ServiceDurationPeriodValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: ServiceDurationPeriodCode; Target Attribute: UomCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovServiceDurationPeriodValue?fields=UnitOfMeasure,UomCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            },
                            "UomCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ServiceDurationPeriodValue",
                        "ServiceDurationPeriodCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ServiceStartTypeValue LOV",
                    "description":"Service start types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ServiceStartTypeValue; Target Attribute: Meaning</li><li>Source Attribute: ServiceStartTypeCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovServiceStartTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ServiceStartTypeValue",
                        "ServiceStartTypeCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"InstanceClassValue LOV",
                    "description":"Instance classes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: InstanceClassValue; Target Attribute: Meaning</li><li>Source Attribute: IbItemInstanceClass; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovIbItemInstanceClassValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "InstanceClassValue",
                        "IbItemInstanceClass"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"BillingTypeValue LOV",
                    "description":"Billing types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BillingTypeValue; Target Attribute: Meaning</li><li>Source Attribute: MaterialBillableCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovMaterialBillableValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "BillingTypeValue",
                        "MaterialBillableCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"RecoveredPartDispositionValue LOV",
                    "description":"Recovered part dispositions.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecoveredPartDispositionValue; Target Attribute: Meaning</li><li>Source Attribute: RecoveredPartDispCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovRecoveredPartDispValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RecoveredPartDispositionValue",
                        "RecoveredPartDispCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LotControlValue LOV",
                    "description":"Lot control flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LotControlValue; Target Attribute: Meaning</li><li>Source Attribute: LotControlCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovLotControlValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LotControlValue",
                        "LotControlCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LotExpirationControlValue LOV",
                    "description":"Lot expirations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LotExpirationControlValue; Target Attribute: Meaning</li><li>Source Attribute: ShelfLifeCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovShelfLifeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LotExpirationControlValue",
                        "ShelfLifeCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ExpirationActionValue LOV",
                    "description":"Actions to take when the lot expires.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ExpirationActionValue; Target Attribute: ActionCode</li><li>Source Attribute: ExpirationActionCode; Target Attribute: ActionCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovExpirationActionValue?fields=ActionCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ActionCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lot expiration action."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ExpirationActionValue",
                        "ExpirationActionCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ChildLotParent LOV",
                    "description":"Child lot enabled flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ChildLotParent; Target Attribute: Meaning</li><li>Source Attribute: ParentChildGenerationCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovParentChildGenerationValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ChildLotParent",
                        "ParentChildGenerationCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultGradeValue LOV",
                    "description":"Default grades.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultGradeValue; Target Attribute: GradeCode</li><li>Source Attribute: DefaultGrade; Target Attribute: GradeCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDefaultGradeValue?fields=GradeCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "GradeCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the grade."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultGradeValue",
                        "DefaultGrade"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SerialGenerationValue LOV",
                    "description":"Serial numbers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SerialGenerationValue; Target Attribute: Meaning</li><li>Source Attribute: SerialNumberControlCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSerialNumberControlValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SerialGenerationValue",
                        "SerialNumberControlCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultLotStatusValue LOV",
                    "description":"Deafult lot statuses.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultLotStatusValue; Target Attribute: StatusCode</li><li>Source Attribute: DefaultLotStatusId; Target Attribute: StatusId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDefaultLotStatusValue?fields=StatusCode,StatusId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "StatusCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the status."
                            },
                            "StatusId":{
                                "type":"integer",
                                "description":"Status Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultLotStatusValue",
                        "DefaultLotStatusId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultSerialStatusValue LOV",
                    "description":"Deafult serial statuses.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultSerialStatusValue; Target Attribute: StatusCode</li><li>Source Attribute: DefaultSerialStatusId; Target Attribute: StatusId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDefaultSerialStatusValue?fields=StatusCode,StatusId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "StatusCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the status."
                            },
                            "StatusId":{
                                "type":"integer",
                                "description":"Status Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultSerialStatusValue",
                        "DefaultSerialStatusId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"StockLocatorControlValue LOV",
                    "description":"Location controls.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StockLocatorControlValue; Target Attribute: Meaning</li><li>Source Attribute: LocationControlCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovLocationControlValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "StockLocatorControlValue",
                        "LocationControlCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DimensionUOMValue LOV",
                    "description":"Dimensions for the unit of measure.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DimensionUOMValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: DimensionUOMCode; Target Attribute: UomCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDimensionUOMValue?fields=UnitOfMeasure,UomCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            },
                            "UomCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DimensionUOMValue",
                        "DimensionUOMCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"WeightUOMValue LOV",
                    "description":"WEIGHTS for the unit of measure.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WeightUOMValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: WeightUOMCode; Target Attribute: UomCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovWeightUOMValue?fields=UnitOfMeasure,UomCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            },
                            "UomCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "WeightUOMValue",
                        "WeightUOMCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"VolumeUOMValue LOV",
                    "description":"VOLUMES for the unit of measure.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VolumeUOMValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: VolumeUOMCode; Target Attribute: UomCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovVolumeUOMValue?fields=UnitOfMeasure,UomCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            },
                            "UomCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "VolumeUOMValue",
                        "VolumeUOMCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ContainerTypeValue LOV",
                    "description":"Container types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ContainerTypeValue; Target Attribute: Meaning</li><li>Source Attribute: ContainerTypeCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovContainerTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ContainerTypeValue",
                        "ContainerTypeCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ATPComponentsValue LOV",
                    "description":"Available to promise components.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ATPComponentsValue; Target Attribute: Meaning</li><li>Source Attribute: ATPComponentsCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovATPComponentsValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ATPComponentsValue",
                        "ATPComponentsCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PickingRuleValue LOV",
                    "description":"Picking rules.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PickingRuleValue; Target Attribute: RuleName</li><li>Source Attribute: PickingRuleId; Target Attribute: RuleId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPickingRuleValue?fields=RuleName,RuleId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "RuleName":{
                                "type":"string",
                                "description":"Picking rule name."
                            },
                            "RuleId":{
                                "type":"integer",
                                "description":"Picking rule Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PickingRuleValue",
                        "PickingRuleId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ATPValue LOV",
                    "description":"Available to promise values.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ATPValue; Target Attribute: Meaning</li><li>Source Attribute: ATPCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovATPValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ATPValue",
                        "ATPCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SalesProductTypeValue LOV",
                    "description":"Sales product types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalesProductTypeValue; Target Attribute: Meaning</li><li>Source Attribute: SalesProductType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSalesProductTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SalesProductTypeValue",
                        "SalesProductType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultSalesOrderSourceTypeValue LOV",
                    "description":"Default types for the sales order source.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultSalesOrderSourceTypeValue; Target Attribute: Meaning</li><li>Source Attribute: DefaultSoSourceType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDefaultSoSourceTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultSalesOrderSourceTypeValue",
                        "DefaultSoSourceType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultShippingOrganizationValue LOV",
                    "description":"Default shipping organizations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultShippingOrganizationValue; Target Attribute: OrganizationName</li><li>Source Attribute: DefaultShippingOrganization; Target Attribute: OrganizationId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDefaultShippingOrgValue?fields=OrganizationName,OrganizationId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationName":{
                                "type":"string",
                                "description":"Organization name."
                            },
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Organization Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultShippingOrganizationValue",
                        "DefaultShippingOrganization"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AccountingRuleValue LOV",
                    "description":"Accounting rules.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AccountingRuleValue; Target Attribute: Name</li><li>Source Attribute: AccountingRuleId; Target Attribute: RuleId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovAccountingRuleValue?fields=Name,RuleId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Name":{
                                "type":"string",
                                "description":"Accounting rule name."
                            },
                            "RuleId":{
                                "type":"integer",
                                "description":"Accounting rule Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AccountingRuleValue",
                        "AccountingRuleId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PaymentTermsValue LOV",
                    "description":"Payment terms.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PaymentTermsValue; Target Attribute: Name</li><li>Source Attribute: PaymentTermsId; Target Attribute: TermId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPaymentTermsValue?fields=Name,TermId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Name":{
                                "type":"string",
                                "description":"Payment terms name."
                            },
                            "TermId":{
                                "type":"integer",
                                "description":"Payment terms Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PaymentTermsValue",
                        "PaymentTermsId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"OutputTaxClassificationCodeValue LOV",
                    "description":"Classification codes for the output tax.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OutputTaxClassificationCodeValue; Target Attribute: TaxClassificationMeaning</li><li>Display Attribute: TaxClassificationMeaning</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovTaxValue?fields=TaxClassificationMeaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "TaxClassificationMeaning":{
                                "type":"string",
                                "description":"Tax classification meaning."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "OutputTaxClassificationCodeValue"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"InvoicingRuleValue LOV",
                    "description":"Invoicing rules.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: InvoicingRuleValue; Target Attribute: Name</li><li>Source Attribute: InvoicingRuleId; Target Attribute: RuleId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovInvoicingRuleValue?fields=Name,RuleId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Name":{
                                "type":"string",
                                "description":"Invoicing rule name."
                            },
                            "RuleId":{
                                "type":"integer",
                                "description":"Invoicing rule Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "InvoicingRuleValue",
                        "InvoicingRuleId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"WebStatusValue LOV",
                    "description":"Web statuses.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WebStatusValue; Target Attribute: Meaning</li><li>Source Attribute: WebStatus; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovWebStatusValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "WebStatusValue",
                        "WebStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"InventoryPlanningMethodValue LOV",
                    "description":"Inventory planning methods.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: InventoryPlanningMethodValue; Target Attribute: Meaning</li><li>Source Attribute: InventoryPlanningCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovInventoryPlanningValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "InventoryPlanningMethodValue",
                        "InventoryPlanningCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PlanningMakeBuyValue LOV",
                    "description":"Make or buy flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PlanningMakeBuyValue; Target Attribute: Meaning</li><li>Source Attribute: PlanningMakeBuyCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPlanningMakeBuyValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PlanningMakeBuyValue",
                        "PlanningMakeBuyCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Planner LOV",
                    "description":"Planners.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Planner; Target Attribute: PlannerCode</li><li>Source Attribute: PlannerCode; Target Attribute: PlannerCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPlannerValue?fields=PlannerCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "PlannerCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the planner."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Planner",
                        "PlannerCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SubcontractingComponentValue LOV",
                    "description":"Subcontracting components.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SubcontractingComponentValue; Target Attribute: Meaning</li><li>Source Attribute: SubcontractingComponent; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSubcontractingComponentValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SubcontractingComponentValue",
                        "SubcontractingComponent"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ReplenishmentType LOV",
                    "description":"Replenishment types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReplenishmentType; Target Attribute: Meaning</li><li>Source Attribute: SourceType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSourceTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ReplenishmentType",
                        "SourceType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SourceOrganizationValue LOV",
                    "description":"Source organizations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SourceOrganizationValue; Target Attribute: OrganizationName</li><li>Source Attribute: SourceOrganizationId; Target Attribute: OrganizationId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSourceOrganizationValue?fields=OrganizationName,OrganizationId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationName":{
                                "type":"string",
                                "description":"Organization name."
                            },
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Organization Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SourceOrganizationValue",
                        "SourceOrganizationId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SourceSubinventoryOrganizationValue LOV",
                    "description":"Source subinventory organizations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SourceSubinventoryOrganizationValue; Target Attribute: OrganizationCode</li><li>Source Attribute: SourceSubinventoryOrganizationId; Target Attribute: OrganizationId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSourceSubinventoryOrganizationValue?fields=OrganizationCode,OrganizationId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the organization."
                            },
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Organization Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SourceSubinventoryOrganizationValue",
                        "SourceSubinventoryOrganizationId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SourceSubinventoryValue LOV",
                    "description":"Source subinventories.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SourceSubinventoryValue; Target Attribute: SecondaryInventoryName</li><li>Source Attribute: SourceSubinventory; Target Attribute: SecondaryInventoryName</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSourceSubinventoryValue?fields=SecondaryInventoryName",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "SecondaryInventoryName":{
                                "type":"string",
                                "description":"Subinventory name."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SourceSubinventoryValue",
                        "SourceSubinventory"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ReleaseAuthorizationRequiredValue LOV",
                    "description":"Release authorization is required flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReleaseAuthorizationRequiredValue; Target Attribute: Meaning</li><li>Source Attribute: SOAuthorizationCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSoAuthorizationValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ReleaseAuthorizationRequiredValue",
                        "SOAuthorizationCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ForecastTypelValue LOV",
                    "description":"Forecast types.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ForecastTypelValue; Target Attribute: Meaning</li><li>Source Attribute: VMIForecastType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovVmiForecastTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ForecastTypelValue",
                        "VMIForecastType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PlanningMethodValue LOV",
                    "description":"Planning methods.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PlanningMethodValue; Target Attribute: Meaning</li><li>Source Attribute: MRPPlanningCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovMRPPlanningValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PlanningMethodValue",
                        "MRPPlanningCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"Pegging LOV",
                    "description":"Peggings.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Pegging; Target Attribute: Meaning</li><li>Source Attribute: EndAssemblyPeggingCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEndAssemblyPeggingValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "Pegging",
                        "EndAssemblyPeggingCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PlanningTimeFence LOV",
                    "description":"Planning time fences.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PlanningTimeFence; Target Attribute: Meaning</li><li>Source Attribute: PlanningTimeFenceCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPlanningTimeFenceValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PlanningTimeFence",
                        "PlanningTimeFenceCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DemandTimeFence LOV",
                    "description":"Demand time fences.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DemandTimeFence; Target Attribute: Meaning</li><li>Source Attribute: DemandTimeFenceCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovDemandTimeFenceValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DemandTimeFence",
                        "DemandTimeFenceCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ReleaseTimeFence LOV",
                    "description":"Release time fences.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReleaseTimeFence; Target Attribute: Meaning</li><li>Source Attribute: ReleaseTimeFenceCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovReleaseTimeFenceValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ReleaseTimeFence",
                        "ReleaseTimeFenceCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SubstitutionWindow LOV",
                    "description":"Substituition windows.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SubstitutionWindow; Target Attribute: Meaning</li><li>Source Attribute: SubstitutionWindowCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovSubstitutionWindowValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SubstitutionWindow",
                        "SubstitutionWindowCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ForecastControlValue LOV",
                    "description":"Forecast control flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ForecastControlValue; Target Attribute: Meaning</li><li>Source Attribute: ATOForecastControl; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovATOForecastControlValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ForecastControlValue",
                        "ATOForecastControl"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"RepairProgramValue LOV",
                    "description":"Repair programs.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RepairProgramValue; Target Attribute: Meaning</li><li>Source Attribute: RepairProgram; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovRepairProgramValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "RepairProgramValue",
                        "RepairProgram"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"PurchasingInputTaxClassificationValue LOV",
                    "description":"Tax classification code for purchasing input.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PurchasingInputTaxClassificationValue; Target Attribute: TaxClassificationCode</li><li>Source Attribute: PurchasingTaxCode; Target Attribute: TaxClassificationCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovPurchasingTaxValue?fields=TaxClassificationCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "TaxClassificationCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the tax classification."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PurchasingInputTaxClassificationValue",
                        "PurchasingTaxCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"UnitOfIssueValue LOV",
                    "description":"Units of issue.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: UnitOfIssueValue; Target Attribute: UnitOfMeasure</li><li>Source Attribute: UnitOfIssue; Target Attribute: UnitOfMeasure</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovUnitOfIssueValue?fields=UnitOfMeasure",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnitOfMeasure":{
                                "type":"string",
                                "description":"Unit of measure."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "UnitOfIssueValue",
                        "UnitOfIssue"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"HazardClassValue LOV",
                    "description":"Hazard classes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HazardClassValue; Target Attribute: HazardClass</li><li>Source Attribute: HazardClassId; Target Attribute: HazardClassId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovHazardClassValue?fields=HazardClass,HazardClassId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "HazardClass":{
                                "type":"string",
                                "description":"Hazard class name."
                            },
                            "HazardClassId":{
                                "type":"integer",
                                "description":"Hazard class Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "HazardClassValue",
                        "HazardClassId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"BuyerOrganizationValue LOV",
                    "description":"Buyer organizations.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BuyerOrganizationValue; Target Attribute: OrganizationCode</li><li>Source Attribute: BuyerOrganizationId; Target Attribute: OrganizationId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovBuyerOrganizationValue?fields=OrganizationCode,OrganizationId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "OrganizationCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the buyer organization."
                            },
                            "OrganizationId":{
                                "type":"integer",
                                "description":"Buyer organization Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "BuyerOrganizationValue",
                        "BuyerOrganizationId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultBuyerValue LOV",
                    "description":"Buyer defaults.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultBuyerValue; Target Attribute: ListName</li><li>Source Attribute: BuyerId; Target Attribute: AssignmentId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovBuyerValue?fields=ListName,AssignmentId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ListName":{
                                "type":"string",
                                "description":"Name of the buyer list."
                            },
                            "AssignmentId":{
                                "type":"integer",
                                "description":"Assignment identification."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultBuyerValue",
                        "BuyerId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"UNNumberValue LOV",
                    "description":"United Nations numbers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: UNNumberValue; Target Attribute: UnNumber</li><li>Source Attribute: UNNumberId; Target Attribute: UnNumberId</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovUNNumberValue?fields=UnNumber,UnNumberId",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "UnNumber":{
                                "type":"string",
                                "description":"UN number."
                            },
                            "UnNumberId":{
                                "type":"integer",
                                "description":"UN number Id."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "UNNumberValue",
                        "UNNumberId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"OutsideProcessingUnitTypeValue LOV",
                    "description":"Unit types for outside processing.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OutsideProcessingUnitTypeValue; Target Attribute: Meaning</li><li>Source Attribute: OutsideOperationUOMType; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovOutsideOperationUOMTypeValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "OutsideProcessingUnitTypeValue",
                        "OutsideOperationUOMType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"MatchConfigurationOptionValue LOV",
                    "description":"Invoice match options.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MatchConfigurationOptionValue; Target Attribute: Meaning</li><li>Source Attribute: ConfigMatch; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovConfigMatchValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "MatchConfigurationOptionValue",
                        "ConfigMatch"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ReceiptRountingValue LOV",
                    "description":"Receipt routings.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReceiptRountingValue; Target Attribute: Meaning</li><li>Source Attribute: ReceivingRoutingId; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovReceivingRoutingValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ReceiptRountingValue",
                        "ReceivingRoutingId"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"EnforceShipToLocation LOV",
                    "description":"Enforce ship-to-location flag.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EnforceShipToLocation; Target Attribute: Meaning</li><li>Source Attribute: EnforceShipToLocationCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovEnforceShipToLocationValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "EnforceShipToLocation",
                        "EnforceShipToLocationCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ReceiptDateActionValue LOV",
                    "description":"Receipt date actions.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReceiptDateActionValue; Target Attribute: Meaning</li><li>Source Attribute: ReceiptDaysExceptionCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovReceiptDaysExceptionValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ReceiptDateActionValue",
                        "ReceiptDaysExceptionCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"QuantityReceivedToleranceAction LOV",
                    "description":"Tolerance actions for quantity received.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: QuantityReceivedToleranceAction; Target Attribute: Meaning</li><li>Source Attribute: QuantityRcvExceptionCode; Target Attribute: LookupCode</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/LovQuantityRcvExceptionValue?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "QuantityReceivedToleranceAction",
                        "QuantityRcvExceptionCode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SafetyStockPlanningMethodValue LOV",
                    "description":"Planning methods for safety stock.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SafetyStockPlanningMethodValue; Target Attribute: Meaning</li><li>Source Attribute: SafetyStockPlanningMethod; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/lov/SafetyStockPlanningMethodVA?fields=Meaning,LookupCode",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "Meaning":{
                                "type":"string",
                                "description":"Display value of the lookup."
                            },
                            "LookupCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SafetyStockPlanningMethodValue",
                        "SafetyStockPlanningMethod"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "link":{
            "properties":{
                "href":{
                    "type":"string",
                    "description":"The URI to the related resource.",
                    "title":"hyperlink reference"
                },
                "rel":{
                    "type":"string",
                    "description":"The name of the relation to the resource instance.  Example: self.",
                    "title":"relation"
                }
            },
            "type":"object"
        },
        "squery":{
            "properties":{
                "dependency":{
                    "type":"string",
                    "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                },
                "expand":{
                    "type":"string",
                    "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers)."
                },
                "fields":{
                    "type":"string",
                    "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2"
                },
                "onlyData":{
                    "type":"boolean",
                    "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                }
            },
            "type":"object"
        },
        "rmaReceiptSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/rmaReceiptSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "rmaReceiptSerials-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies a single item in inventory that logistics will not use for a similar item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "purchaseOrdersForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/purchaseOrdersForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "purchaseOrdersForReceiving-item":{
            "properties":{
                "OrganizationCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "PurchaseOrder":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the purchase order, which is a commercial document that you can use to send a request to a seller to supply a product or a service in return for payment."
                },
                "SoldToLegalEntity":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the legal entity to sell the item to."
                },
                "SoldtoLeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the legal entity to sell the item to."
                },
                "Supplier":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the supplier who provides the goods or services that are part of the purchase order, in return for what might or might not require payment."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "rmaRestrictedSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/rmaRestrictedSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "rmaRestrictedSerials-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies a single item in inventory and that logistics will not use for a similar item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "rmaLinesForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/rmaLinesForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "rmaLinesForReceiving-item":{
            "properties":{
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "RMA":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Number that identifies the return material authorization."
                },
                "RMALine":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number that identifies the document line for the return material authorization."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header that the application created for the return material authorization that it received from the customer."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the line on the receipt advice that the application created for the return material authorization that it received from the customer."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "resourceTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/resourceTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "resourceTransactions-ResourceTransactionDetail":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/resourceTransactions-ResourceTransactionDetail-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "resourceTransactions-ResourceTransactionDetail-item":{
            "properties":{
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Names of the error messages that occurred when processing the resource transaction. Each error message name corresponds to one text string that the ErrorMessages attribute contains. A comma ( , ) separates each message name."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text of the error messages that occurred when processing the resource transaction. Each text string for each error message corresponds to one error message name that the ErrorMessageNames attribute contains. A double dollar sign ($$) separates each message."
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Work order operation that the resource transaction references."
                },
                "OrganizationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization that performs the resource transaction."
                },
                "ResourceActivityCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the resource activity that fulfills the resource transaction."
                },
                "ResourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the resource that performs the transaction."
                },
                "ResourceSequenceNumber":{
                    "type":"number",
                    "description":"Operation sequence on the work order that the resource transaction references."
                },
                "SourceHeaderReference":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reference to the object header that the source system contains."
                },
                "SourceHeaderReferenceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the object header in the source system."
                },
                "SourceLineReference":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reference to the object line that the source system contains."
                },
                "SourceLineReferenceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the object line in the source system."
                },
                "SourceSystemCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source system that starts the resource transaction."
                },
                "TransactionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the transaction occurred."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transacted quantity of the resource for the work order operation."
                },
                "TransactionTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains one of the following values. RESOURCE_CHARGE: charge the resource against the work order. RESOURCE_REVERSE: reverse the charges of the resource against the work order operation."
                },
                "TransactionUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the transacted quantity uses. The application can transact the resource only in the unit of measure that the work order definition or the resource specifies."
                },
                "WoResourceTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"If the transaction successfully finishes, then WoResourceTransactionId contains the number that identifiies this transaction. If the transaction does not successfully finish, then WoResourceTransactionId contains 0 (zero), the ErrorsExistFlag attribute contains True, and the ErrorMessages and ErrorMessageNames attributes contain error details. The response payload includes this attribute."
                },
                "WorkOrderNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Work order that the resource transaction references."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "resourceTransactions-item":{
            "properties":{
                "ErrorsExistFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: an error occurred while processing the resource transactions. False: an error did not occur while processing the resource transactions. The response payload includes this attribute."
                },
                "ResourceTransactionDetail":{
                    "$ref":"#/definitions/resourceTransactions-ResourceTransactionDetail",
                    "description":"The Resource Transaction Detail resource manages the details of the resource charges to the work order.",
                    "title":"Resource Transaction Details"
                },
                "SourceSystemCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source system that starts this resource transaction. This code must be registered in Manufacturing Cloud. The application validates this value against the WIE_SOURCE_SYSTEMS_V database view."
                },
                "SourceSystemType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of source system that starts the resource transaction. Values include INTERNAL or EXTERNAL."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountTransactions-countLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountTransactions-countLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountTransactions-countLines-item":{
            "properties":{
                "Comments":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Comments that describe the count request. If the transaction requires an adjustment, then the warehouse adds these comments to the reference on the adjustment transaction."
                },
                "ConsignmentAgreementNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Consignment agreement number for the consigned item."
                },
                "CountDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse counted the count request. If this date is empty, then the warehouse uses the current date for the count date. If necessary, it also uses this date as the transaction date and the approval date for the adjustment transaction."
                },
                "CountName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the cycle count."
                },
                "CountQuantity":{
                    "type":"number",
                    "description":"Quantity counted for this count request."
                },
                "CountSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Sequence that identifies an open count request for the cycle count. If the warehouse finds an open count request for the count sequence, then it runs the transaction for this count request. If the warehouse does not find an open count request for the count sequence, then it treats the transaction as an unscheduled count."
                },
                "CountUOM":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Contains a value or is empty. Value: serial number. Empty: serials do not control the item."
                },
                "CountUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the count quantity uses."
                },
                "CountedByEmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee who performed the count."
                },
                "CountedByEmployeeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of employee who performed the count."
                },
                "CycleCountEntryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the cycle count sequence."
                },
                "CycleCountHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the cycle count."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "Item":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the inventory item."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "LocatorName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the locator."
                },
                "Lot":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains a value or is empty. Value: lot number. Empty: lots do not control the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OwningEntityCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the owning entity. If the item is consigned, then this attribute contains the vendor site identifier. If the item is owned, then this attribute contains the organization identifier."
                },
                "OwningEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning entity. If the item is consigned, then this attribute contains the vendor site identifier. If the item is owned, then this attribute contains the organization identifier."
                },
                "OwningType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Determines whether the item is consigned or owned."
                },
                "ProcurementBU":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the procurement business unit for the consigned item."
                },
                "Reason":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Reason for the count request. If the transaction requires an adjustment, then the warehouse adds this reason to the reference on the adjustment transaction."
                },
                "Revision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Contains a value or is empty. Value: revision of the item. Empty: revisions do not control the item."
                },
                "SecondaryCountQuantity":{
                    "type":"number",
                    "description":"Quantity counted for this count request in the secondary unit of measure."
                },
                "SecondaryUOM":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure that the count quantity uses."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure that the count quantity uses."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains a value or is empty. Value: serial number. Empty: serials do not control the item."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "TransactionReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "UniqueTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the input count transaction. The system creates this value so the requestor does not need to provide it."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the vendor for the consigned item."
                },
                "VendorNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Vendor number for the consigned item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountTransactions-item":{
            "properties":{
                "ErrorCode":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: name of the error message from the request. Empty: the request was successful."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: error message from the request. Empty: the request was successful."
                },
                "ErrorUniqueTransactionId":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: uniquely identifies the transaction of the failed record. Empty: the request was successful."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Indicates whether or not the warehouse successfully completed the request."
                },
                "countLines":{
                    "$ref":"#/definitions/cycleCountTransactions-countLines",
                    "description":"The Count Lines resource manages transaction details for the count sequence.",
                    "title":"Count Lines"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "purchaseOrderLinesForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/purchaseOrderLinesForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "purchaseOrderLinesForReceiving-item":{
            "properties":{
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line to receive."
                },
                "PurchaseOrder":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Number that identifies the purchase order, which is a commercial document that you can use to send a request to a seller to supply a product or a service in return for payment."
                },
                "PurchaseOrderLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the purchase order line."
                },
                "SupplierItem":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Supplier item number from the purchase order line."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "issueLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/issueLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "issueLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date that controls availability of the lot for transaction and planning purposes."
                },
                "LotNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "materialTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/materialTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "materialTransactions-MaterialTransactionDetail":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "materialTransactions-MaterialTransactionDetail-TransactionLot":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionLot-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "materialTransactions-MaterialTransactionDetail-TransactionLot-item":{
            "properties":{
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Names of the error messages that occurred when processing the transaction lot. Each error message name corresponds to one text string that the ErrorMessages attribute contains. A comma ( , ) separate each message name."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text of the error messages that occurred when processing this transaction lot. Each text string for each error message corresponds to one error message name that the ErrorMessageNames attribute contains. Double dollar signs ($$) separate each message."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number of the component issued for the work order. This attribute is optional."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transacted lot quantity of the component for the work order."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "materialTransactions-MaterialTransactionDetail-TransactionSerial":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionSerial-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "materialTransactions-MaterialTransactionDetail-TransactionSerial-item":{
            "properties":{
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Names of the error messages that occurred when processing the transaction serial. Each error message name corresponds to one text string that the ErrorMessages attribute contains. A comma ( , ) separate each message name."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text of the error messages that occurred when processing this transaction serial. Each text string for each error message corresponds to one error message name that the ErrorMessageNames attribute contains. Double dollar signs ($$) separate each message."
                },
                "LotNumber":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Lot number of the serial of the component that the application issued for the work order. This attribute is optional."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number that identifies the component that the application issued for the work order."
                },
                "SerialNumberTo":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number that identifies the component that the application issued for the work order."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "materialTransactions-MaterialTransactionDetail-item":{
            "properties":{
                "AssemblySerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number that identifies the assembly where fulfillment issues the components."
                },
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Names of the error messages that occurred when processing the item transaction. Each error message name corresponds to one text string that the ErrorMessages attribute contains. A comma ( , ) separate each message name."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text of the error messages that occurred when processing the item transaction. Each text string for each error message that corresponds to one error message name that the ErrorMessageNames attribute contains. Double dollar signs ($$) separate each message."
                },
                "InvTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"If the transaction successfully finishes, then InvTransactionId contains the number that identifiies this transaction. If the transaction does not successfully finish, then InvTransactionId contains 0 (zero), the ErrorsExistFlag attribute contains True, and the ErrorMessages and ErrorMessageNames attributes contain error details. The response payload includes this attribute."
                },
                "InventoryItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Item transacted or product completed."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item transacted or product completed."
                },
                "Locator":{
                    "maxLength":800,
                    "type":"string",
                    "description":"Locator where fufillment issues the item from or returns the item to."
                },
                "OrganizationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization where fulfillment performs the item transaction."
                },
                "POLineNumber":{
                    "type":"number",
                    "description":"Value that uniquely identifies the line on the purchase order document."
                },
                "PONumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number of the purchase order document. Use this attribute only if the plant is a contract manufacturing plant."
                },
                "ReasonCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the reason that you specify for the orderless scrap and orderless return from a scrap transaction. Use this attribute only for an orderless transaction."
                },
                "SoldToLegalEntityName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Sold-to organization in the purchase order document. Use this attribute only if the plant is a contract manufacturing plant."
                },
                "SourceHeaderReference":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reference to the object header in the source system."
                },
                "SourceHeaderReferenceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the object header in the source system."
                },
                "SourceLineReference":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reference to the object line in the source system."
                },
                "SourceLineReferenceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the object line in the source system."
                },
                "SourceSystemCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source system that started the item transaction."
                },
                "SubinventoryCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Subinventory where fufillment issues the item from or returns the item to."
                },
                "TransactionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when fulfillment performs the transaction."
                },
                "TransactionLot":{
                    "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionLot",
                    "description":"The Transaction Lots resource manages details of the lot of the component issued to or returned from the work order.",
                    "title":"Transaction Lots"
                },
                "TransactionNote":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Text instructions for the production supervisor for an orderless transaction."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transacted quantity of the component for the work order. When the transaction type code is MATERIAL_NEGATIVE_ISSUE or MATERIAL_NEGATIVE_RETURN, then the transaction quantity is negative."
                },
                "TransactionSerial":{
                    "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionSerial",
                    "description":"The Transaction Serials resource manages details of the serial of the component issued to or returned from the work order.",
                    "title":"Transaction Serials"
                },
                "TransactionTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines whether the transaction is orderless, component issue, or component return. Values include MATERIAL_ISSUE, MATERIAL_RETURN, MATERIAL_NEGATIVE_ISSUE, MATERIAL_NEGATIVE_RETURN, ORDERLESS_COMPLETION, ORDERLESS_RETURN, ORDERLESS_SCRAP and ORDERLESS_RETURN_SCRAP."
                },
                "TransactionUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure to use when reporting the transacted quantity."
                },
                "WoOperationSequenceNumber":{
                    "type":"number",
                    "description":"Work order operation that transacts the item."
                },
                "WorkDefinitionCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work definition that fulfillment uses to run the work order. This attribute can also indicate an alternate way of making a product."
                },
                "WorkOrderNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Work order that the item transaction references."
                },
                "WorkOrderSubType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicator that you specify to indicate the nature of work that fulfillment reports through an orderless transaction. Use this attribute only with an orderless transaction."
                },
                "WorkOrderType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Indicator that you specify to indicate the nature of work that fulfillment reports through an orderless transaction. Use this attribute only with an orderless transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "materialTransactions-item":{
            "properties":{
                "ErrorsExistFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: an error occurred while processing the material transaction. False: an error did not occur. The response payload includes this attribute."
                },
                "MaterialTransactionDetail":{
                    "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail",
                    "description":"The Material Transaction Details resource manages the details of the component issued to or returned from the work order.",
                    "title":"Material Transaction Details"
                },
                "SourceSystemCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source system that starts the material transaction. Values include INTERNAL or EXTERNAL."
                },
                "SourceSystemType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of source system that starts this material transaction. You must register this type in Oracle Manufacturing Cloud. The application validates this value against the WIE_SOURCE_SYSTEMS_V database view."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickTransactions-item":{
            "properties":{
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error that occurred when the pick transaction fails. If the pick transaction does not fail, then the ErrorCode attribute is empty."
                },
                "ErrorExplanation":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Explanation of why the error occurred when the pick transaction fails. If the pick transaction does not fail, then the ErrorExplanation attribute is empty."
                },
                "PickSlip":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the pick slip that the transaction references."
                },
                "PickSlipLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies a line on the pick slip that the transaction references."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the pick transaction. The ReturnStatus attribute can contain one of the following values: SUCCESS or ERROR."
                },
                "TransactionHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction header."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "pickLines":{
                    "$ref":"#/definitions/pickTransactions-pickLines",
                    "description":"The Pick Lines resource manages picking details that describe the line to confirm.",
                    "title":"Pick Lines"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickTransactions-pickLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-item":{
            "properties":{
                "Locator":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Physical area, such as a row, aisle, bin, or shelf, in the subinventory that stores the item."
                },
                "PickSlip":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies a line on the pick slip."
                },
                "PickSlipLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the pick slip that the pick line references."
                },
                "PickedQuantity":{
                    "type":"number",
                    "description":"Quantity picked for the pick line in the primary unit of measure."
                },
                "SecondaryPickedQuantity":{
                    "type":"number",
                    "description":"Quantity picked for the pick line in the secondary unit of measure."
                },
                "SubinventoryCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Subinventory to use when picking the item."
                },
                "TransactionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the transaction occurred."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotItemLots":{
                    "$ref":"#/definitions/pickTransactions-pickLines-lotItemLots",
                    "description":"The Lots for Picked Items resource manages the lot that controls the picked item. Use it when a lot controls the item.",
                    "title":"Lots for Picked Items"
                },
                "lotSerialItemLots":{
                    "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots",
                    "description":"The Lots That Share Control resource manages the lot that controls the picked item. Use it when lots and serials control the item.",
                    "title":"Lots That Share Control"
                },
                "serialItemSerials":{
                    "$ref":"#/definitions/pickTransactions-pickLines-serialItemSerials",
                    "description":"The Serials for Picked Items resource manages the serial that controls the picked item. Use it when a serial controls the item.",
                    "title":"Serials for Picked Items"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-lotItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickTransactions-pickLines-lotItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-lotItemLots-item":{
            "properties":{
                "Lot":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot that includes the picked item. The lot includes items that you produce together as a group and that share similar production costs and specifications. Applies when only the lot controls the item."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity picked for the lot. Applies when only the lot controls the item."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Quantity picked for the lot using the secondary unit of measure. Applies when only the lot controls the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-lotSerialItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-lotSerialItemLots-item":{
            "properties":{
                "Lot":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot that includes the picked item. The lot includes items that you produce together as a group and that share similar production costs and specifications. Applies when the lot and the serial control the item."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity picked for the lot. Applies when the lot and the serial control the item."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Quantity picked for the lot using the secondary unit of measure. Applies when the lot and the serial control the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotSerialItemSerials":{
                    "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials",
                    "description":"The Serials That Share Control resource manages the serial that controls the picked item. Use it when lots and serials control the item.",
                    "title":"Serials That Share Control"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers for the lot. Applies when the lot and the serial control the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers for the lot. Applies when the lot and the serial control the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-serialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickTransactions-pickLines-serialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickTransactions-pickLines-serialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers for the item. Applies when only the serial controls the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers for the item. Applies when only the serial controls the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "activeLocators":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/activeLocators-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "activeLocators-item":{
            "properties":{
                "Description":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Description of the locator."
                },
                "DisableDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse disabled the locator."
                },
                "InventoryLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory locator."
                },
                "InventoryLocationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of inventory location."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Physical area in the subinventory, such as a row, aisle, bin, or shelf, that stores the item."
                },
                "LocatorType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Type of locator. The INV_LOCATOR_TYPES lookup defines the values that you can use with this attribute."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "PickingOrder":{
                    "type":"number",
                    "description":"Sequence to use when picking the item."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Abbreviation that identifies the status."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the status."
                },
                "SubinventoryCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "SubinventoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the subinventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receiptLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receiptLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receiptLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot expires. This attribute controls availability of the lot for transaction and planning purposes."
                },
                "LotNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Number assigned to an item or group of items for identification purposes."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "generateLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/generateLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "generateLots-item":{
            "properties":{
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "type":"string",
                    "description":"Name of the inventory item."
                },
                "LotNumber":{
                    "type":"string",
                    "description":"Lot number."
                },
                "OrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "ReturnMessageName":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: name of the error message from the request. Empty: the request was successful."
                },
                "ReturnMessageText":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: error message from the request. Empty: the request was successful."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the lot request."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrdersMetrics":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrdersMetrics-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrdersMetrics-item":{
            "properties":{
                "CompletingToday":{
                    "type":"number",
                    "description":"Number of work orders that are scheduled to finish today, according to your time zone."
                },
                "Delayed":{
                    "type":"number",
                    "description":"Number of work orders that are overdue, according to your time zone and the tolerance for calculating the count of overdue work orders."
                },
                "ExceptionCount":{
                    "type":"number",
                    "description":"Number of open exceptions for work orders."
                },
                "OnHoldCount":{
                    "type":"number",
                    "description":"Number of work orders that are On Hold."
                },
                "OperationDelay":{
                    "type":"number",
                    "description":"Number of work orders that are not overdue but that include one or more delayed operations."
                },
                "StartingToday":{
                    "type":"number",
                    "description":"Number of work orders that are scheduled to start today, according to your time zone."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inTransitShipments":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inTransitShipments-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inTransitShipments-item":{
            "properties":{
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "ReceiptSource":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Source type of the shipment. Values include INVENTORY or TRANSFER ORDER."
                },
                "Shipment":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Number that identifies the shipment of the item that is in transit."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "SourceOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization that shipped the item."
                },
                "SourceOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that shipped the item."
                },
                "SourceOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization that shipped the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickSlipDetails":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickSlipDetails-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-item":{
            "properties":{
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the warehouse created the pick slip."
                },
                "Customer":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Customer who purchases the item, typically for a fee."
                },
                "DueDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the pick slip is due."
                },
                "MovementRequest":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Document that contains information about the suggestions for put away, pick, and replenishment of inventory items."
                },
                "NumberOfPicks":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of picks on the pick slip."
                },
                "Order":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Value that uniquely identifies the sales order or transfer order."
                },
                "Organization":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Warehouse or organization where someone picks and stages the item."
                },
                "PickSlip":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the pick slip."
                },
                "PickWave":{
                    "type":"string",
                    "description":"Group of sales orders released into picking at the same time."
                },
                "ShipToLocation":{
                    "type":"string",
                    "description":"Location where the supplier ships the items that the pick slip references."
                },
                "Shipment":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Collection of goods or materials that ship under the terms of a single bill of lading."
                },
                "ShippingMethod":{
                    "maxLength":2082,
                    "type":"string",
                    "description":"Transportation method for the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "pickLines":{
                    "$ref":"#/definitions/pickSlipDetails-pickLines",
                    "description":"The Pick Lines resource manages picking details that describe the line to confirm.",
                    "title":"Pick Lines"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickSlipDetails-pickLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-item":{
            "properties":{
                "Customer":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Customer who purchases the item, typically for a fee."
                },
                "DestinationAccount":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Financial account that includes depreciation expenses."
                },
                "DestinationLocator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Locator that identifies where to deposit the picked item."
                },
                "DestinationSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Subinventory that identifies where to deposit the picked item."
                },
                "Item":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Value that uniquely identifies the<br>item."
                },
                "MovementRequest":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Document that contains information about the suggestions for put away, pick, and replenishment of inventory items."
                },
                "MovementRequestLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies<br>the movement request line."
                },
                "PickSlip":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the<br>pick slip that the pick line references."
                },
                "PickSlipLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies a line on the pick slip."
                },
                "RequestedQuantity":{
                    "type":"number",
                    "description":"Quantity that the transaction requests for the pick line."
                },
                "RequiredDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the pick is due."
                },
                "Revision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "SecondaryRequestedQuantity":{
                    "type":"number",
                    "description":"Quantity that the transaction requests using the secondary unit of measure."
                },
                "SecondaryUOM":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure to use for the quantity."
                },
                "ShipToLocation":{
                    "type":"string",
                    "description":"Location where the supplier ships the items that the pick line references."
                },
                "ShippingPriority":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Importance of shipping an item when compared to other items."
                },
                "SourceLocator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Locator that identifies where to pick the item."
                },
                "SourceOrder":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Value that uniquely identifies<br>the fulfillment order."
                },
                "SourceOrderLine":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Value that uniquely identifies<br>the fulfillment order line."
                },
                "SourceSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Subinventory to use when picking the item."
                },
                "TransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the<br>transaction."
                },
                "TransactionType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction type."
                },
                "UOM":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Primary unit of measure to use when picking the item."
                },
                "itemLots":{
                    "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots",
                    "description":"The Lot Details resource manages lot details for the item picked.",
                    "title":"Lot Details"
                },
                "itemSerials":{
                    "$ref":"#/definitions/pickSlipDetails-pickLines-itemSerials",
                    "description":"The Serial Details resource manages details about the serial that controls the picked item. Use this resource when the serial controls the item.",
                    "title":"Serial Details"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-itemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-itemLots-item":{
            "properties":{
                "Lot":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity picked for the lot number."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Quantity picked for the lot number using the secondary unit of measure."
                },
                "itemLotSerials":{
                    "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots-itemLotSerials",
                    "description":"The Serial Details in the Lot resource manages details about the serial when the lot controls the picked item. Use this resource when the lot controls the item.",
                    "title":"Serial Details in the Lot"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-itemLots-itemLotSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots-itemLotSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-itemLots-itemLotSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers for the lot."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers for the lot."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-itemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/pickSlipDetails-pickLines-itemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "pickSlipDetails-pickLines-itemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers for the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers for the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receipts":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-item":{
            "properties":{
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error message if the call fails. If the call is successful, then this attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message text of the error if the call fails. If the call is successful, then this attribute is empty."
                },
                "ErrorUniqueHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt header that includes errors. If the call is successful, then this attribute is empty."
                },
                "ErrorUniqueTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt line that includes an error. If the call is successful, then this attribute is empty."
                },
                "GroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the current service call. Values include SUCCESS or FAILURE."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "receiptHeaders":{
                    "$ref":"#/definitions/receipts-receiptHeaders",
                    "description":"The Receipt Headers resource manages details about the receipt header or inbound shipment header.",
                    "title":"Receipt Headers"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-receiptHeaders-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-item":{
            "properties":{
                "BUId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the business unit. For a purchase order receipt, this attribute references the procurement business unit of the supplier site. For a receipt that includes a return material authorization, this attribute references the business unit that the return material authorization contains."
                },
                "BillOfLading":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Number that identifies the bill of lading for this shipment."
                },
                "BusinessUnit":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the business unit. For a purchase order receipt, this attribute references the procurement business unit of the supplier site. For a receipt that includes a return material authorization, this attribute references the business unit that the return material authorization contains."
                },
                "Comments":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Text that describes the receiving that occurred when receiving the item."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the customer."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee who performed the receiving transactions."
                },
                "EmployeeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the employee who performed the receiving transactions."
                },
                "FreightCarrierId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the freight carrier."
                },
                "FreightCarrierName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the freight carrier."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the source organization for an in-transit shipment."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source organization for an in-transit shipment."
                },
                "NumberOfPackingUnits":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of containers in the shipment."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "PackingSlip":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Number that identifies the packing slip for a container on the shipment."
                },
                "RADOOSourceSystemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source system that created the receipt advice for this item."
                },
                "RADOOSourceSystemName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the source system that created the receipt advice for this item."
                },
                "ReceiptHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt header or shipment header. Use this attribute when you receive an inbound shipment or advance shipment notice, or when you add an item to a receipt that already exists."
                },
                "ReceiptNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies items that the warehouse receives in a single receipt."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source of the shipment or the receipt. Values include VENDOR, INVENTORY, TRANSFER ORDER, or CUSTOMER."
                },
                "ShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Shipment number that the shipment source assigns. This number corresponds to the number that identifies one of the following objects: advance shipment notice, in-transit shipment, or transfer order shipment."
                },
                "ShippedDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the supplier shipped the item."
                },
                "TransactionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction occurred."
                },
                "UniqueHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt header."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the supplier."
                },
                "VendorNumber":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Number that identifies the supplier."
                },
                "VendorSiteCode":{
                    "maxLength":35,
                    "type":"string",
                    "description":"Abbreviation that identifies the supplier site for the business unit."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "WaybillAirbillNumber":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Number that identifies the waybill or airbill."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "receiptLines":{
                    "$ref":"#/definitions/receipts-receiptHeaders-receiptLines",
                    "description":"The Receipt Lines resource manages details about the receipt line transaction or the inbound shipment line.",
                    "title":"Receipt Lines"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-item":{
            "properties":{
                "ASNLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the line on the advance shipment notice."
                },
                "Amount":{
                    "type":"number",
                    "description":"Transaction amount in the purchase order currency. Use this attribute for a fixed price line."
                },
                "AutoTransactCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that determines how to finish subsequent transactions. For example, if transaction type is RECEIVE, and if the auto transact code is DELIVER, then the warehouse will complete the putaway when it processes the receipt."
                },
                "BUId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the business unit. For a purchase order receipt, this attribute references the procurement business unit of the supplier site. For a receipt that includes a return material authorization, this attribute references the business unit that the return material authorization contains."
                },
                "BusinessUnit":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the business unit. For a purchase order receipt, this attribute references the procurement business unit of the supplier site. For a receipt that includes a return material authorization, this attribute references the business unit that the return material authorization contains."
                },
                "Comments":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Text that describes the receiving that occurred when receiving the item."
                },
                "ConsignmentLine":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Indicates whether or not the receiving transaction is for consigned material."
                },
                "ContainerNumber":{
                    "maxLength":35,
                    "type":"string",
                    "description":"Container number for the receipt line."
                },
                "CountryOfOriginCode":{
                    "maxLength":2,
                    "type":"string",
                    "description":"Abbreviation that identifies the country of manufacture for this item."
                },
                "CreateDebitMemo":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Determines whether or not to create the debit memo."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency that the receiving transaction uses."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the currency conversion occurred for the receipt. Use this attribute only for a purchase order receipt."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Currency conversion rate for the receipt. Use this attribute only for a purchase order receipt."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of currency conversion rate of the purchase order. Use this attribute only for a purchase order receipt."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that the customer uses to uniquely identify the item."
                },
                "CustomerItemNumber":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Number that the customer uses to identify the item."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the customer."
                },
                "DeliverToLocationCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Abbreviation that identifies the deliver-to location."
                },
                "DeliverToLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the deliver-to location."
                },
                "DeliverToPersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the deliver-to person or requester."
                },
                "DeliverToPersonName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the deliver-to person or requester."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the receiving transaction."
                },
                "DocumentDistributionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the document distribution for the receiving transaction."
                },
                "DocumentLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the document line number for the receiving transaction."
                },
                "DocumentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the document for the receiving transaction."
                },
                "DocumentScheduleNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the document schedule for the receiving transaction."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee who performed the receiving transaction."
                },
                "EmployeeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the employee who performed the receiving transaction."
                },
                "Exception":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: if an exception occurs, then record it on the receiving transaction. No: if an exception occurs, then do not record it on the receiving transaction."
                },
                "FromLocator":{
                    "maxLength":81,
                    "type":"string",
                    "description":"Source locator name for the receiving transaction."
                },
                "FromLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source locator for the receiving transaction."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the source organization for an interorganization transfer."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source organization for an in-transit shipment."
                },
                "FromSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Source subinventory name for the receiving transaction."
                },
                "InspectionQualityCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the inspection quality. The RCV_QUALITY_CODE lookup defines the values that you can use with this attribute."
                },
                "InterfaceSourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source that interfaced the receiving transaction."
                },
                "InterfaceSourceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the interfaced source line."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item. For a purchase order receipt, this attribute describes the item on the purchase order line. For other receipts, this attribute describes the inventory item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the item."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision number of the item."
                },
                "Locator":{
                    "maxLength":81,
                    "type":"string",
                    "description":"Name of the destination locator for the receiving transaction."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the destination locator for the receiving transaction."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "PackingSlip":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Packing slip number for the container that contains this item."
                },
                "ParentSourceTransactionNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Number that identifies the source transaction number of the parent receiving transaction."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent receiving transaction."
                },
                "PhysicalMaterialReturnRequired":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Determines whether or not the return against a transfer order requires a physical return of the item."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity in the primary unit of measure that the item uses."
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure that the item in the receiving organization uses."
                },
                "PrimaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Primary unit of measure that the item in the receiving organization uses."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Transaction quantity in the unit of measure that the receiving transaction uses."
                },
                "RMAReference":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the return material authorization that the supplier provides when returning goods to the supplier."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction reason for the receiving transaction."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the inventory transaction reason for the receiving transaction."
                },
                "ReceiptAdviceDocumentLineNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Line number on the source document that the warehouse uses for the receipt advice."
                },
                "ReceiptAdviceDocumentNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Source document number that the warehouse uses for the receipt advice."
                },
                "ReceiptAdviceDocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Schedule number on the source document that the warehouse uses for the receipt advice line."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source of the shipment or the receipt. Values include VENDOR, INVENTORY, TRANSFER ORDER, or CUSTOMER."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving routing. Values include 1 for standard receipt, 2 for inspection required, or 3 for direct delivery."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity in the secondary unit of measure that the item uses."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure that the item in the receiving organization uses."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure that the item in the receiving organization uses."
                },
                "ShipToLocationCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving location."
                },
                "ShipToLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving shipment or receipt header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "ShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Shipment number that the shipment source assigns. This number corresponds to the number that identifies one of the following objects: advance shipment notice, in-transit shipment, or transfer order shipment."
                },
                "SoldtoLegalEntity":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the sold-to legal entity."
                },
                "SoldtoLegalEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the sold-to legal entity."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of source document. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "SourceTransactionNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Number that identifies the unique transaction identifier in the source system."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the destination subinventory for the receiving transaction."
                },
                "SubstituteItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the substitute item."
                },
                "SubstituteItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Substitute item number for the item on the receipt line."
                },
                "SubstituteUnorderedCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Indicates whether the transaction is for a substitute item. Value is SUBSTITUTE."
                },
                "TransactionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the receiving transaction occurred."
                },
                "TransactionType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Type of receiving transaction. The RCV_TRANSACTION_TYPE lookup defines the values that you can use with this attribute."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure that the receiving transaction uses."
                },
                "UniqueTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving transaction."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure for the receiving transaction."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that the supplier uses to identify the item."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the supplier."
                },
                "VendorNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the supplier."
                },
                "VendorSiteCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the supplier site for a business unit."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotItemLots":{
                    "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotItemLots",
                    "description":"The Lots That Control Items resource manages details about the lot when the lot controls the item.",
                    "title":"Lots That Control Items"
                },
                "lotSerialItemLots":{
                    "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots",
                    "description":"The Lots That Share Control resource manages details about the lot when the lot and the serial controls the item.",
                    "title":"Lots That Share Control"
                },
                "serialItemSerials":{
                    "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-serialItemSerials",
                    "description":"The Serial Item Serials resource manages details about the serial when the serial controls the item.",
                    "title":"Serials That Control Items"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-lotItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-lotItemLots-item":{
            "properties":{
                "HoldDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse applied a hold on the lot."
                },
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the item of the lot expires."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number for the item when lots control the item."
                },
                "MaturityDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot matures."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot originated."
                },
                "OriginationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of origination."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for the lot in the primary unit of measure that the item uses."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the reason for the receiving transaction for the lot when the lot controls the item."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the reason for the receiving transaction for the lot when the lot controls the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for the lot in the secondary unit of measure that the item uses."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the item for the lot when lots control the item."
                },
                "VendorLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Supplier lot number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-lotSerialItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-lotSerialItemLots-item":{
            "properties":{
                "HoldDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse applied a hold on the lot."
                },
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the item of this lot expires."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number for the item when lots and serials control the item."
                },
                "MaturityDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot matures."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this lot originated."
                },
                "OriginationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of origination."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the primary unit of measure that the item uses."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the reason for the receiving transaction for the lot when lots and serials control the item."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the reason for the receiving transaction for the lot when lots and serials control the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the secondary unit of measure that the item uses."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the item when lots and serials control the item."
                },
                "VendorLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Supplier lot number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotSerialItemSerials":{
                    "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials",
                    "description":"The Serials That Share Control resource manages details about the serial when the lot and the serial controls the item.",
                    "title":"Serials That Share Control"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers when lots and serials control the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers when lots and serials control the item."
                },
                "VendorSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Supplier serial number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-serialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-serialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receipts-receiptHeaders-receiptLines-serialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers when serials control the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers when serials control the item."
                },
                "VendorSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Supplier serial number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-item":{
            "properties":{
                "ErrorCode":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: error message name of the failed request. Empty: the request succeeded."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: error explanation of the failed request. Empty: the request succeeded."
                },
                "ErrorUniqueTransactionId":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: transaction identifier of the failed request. Empty: the request succeeded."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status that indicates whether or not the request finished successfully."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "transactionLines":{
                    "$ref":"#/definitions/inventoryTransactions-transactionLines",
                    "description":"The Transaction Lines resource manages details about each transaction line.",
                    "title":"Transaction Lines"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactions-transactionLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-item":{
            "properties":{
                "AgingOnsetDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the inventory aging starts for the consigned item."
                },
                "DistributionAccountId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the distribution account."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "Item":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the item."
                },
                "LocationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of ship-to location."
                },
                "Locator":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the locator."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "OwningOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning organization."
                },
                "OwningOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the owning organization."
                },
                "OwningTpType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of owning party."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity in the primary unit of measure."
                },
                "ProcurementBU":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Procurement business unit for a consigned item."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "ReasonName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction reason."
                },
                "Revision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Secondary transaction quantity."
                },
                "ShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the shipment."
                },
                "SourceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction source header."
                },
                "SourceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction source line."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "TransactionAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction action."
                },
                "TransactionActionId":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the transaction action."
                },
                "TransactionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction occurred."
                },
                "TransactionHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction header."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity."
                },
                "TransactionSourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction source."
                },
                "TransactionSourceName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the transaction source."
                },
                "TransactionSourceTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction source type."
                },
                "TransactionSourceTypeName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the transaction source type."
                },
                "TransactionType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction type."
                },
                "TransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction type."
                },
                "TransactionUOM":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure for the transaction."
                },
                "TransactionUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure for the transaction."
                },
                "TransferLocator":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Destination locator identifier for a transfer transaction."
                },
                "TransferLocatorName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the destination locator for a transfer transaction."
                },
                "TransferOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the destination organization for transfer transactions."
                },
                "TransferOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the transfer organization."
                },
                "TransferOwningOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer owning organization."
                },
                "TransferOwningOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the transfer owning organization."
                },
                "TransferOwningTpType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of the transfer owning party."
                },
                "TransferSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the destination subinventory for a transfer transaction."
                },
                "UniqueTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction line."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Supplier name for the consigned item."
                },
                "VendorNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Supplier number for the consigned item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotItemLots":{
                    "$ref":"#/definitions/inventoryTransactions-transactionLines-lotItemLots",
                    "description":"The Lots That Control Items resource manages details about the lot. Use it when only the lot controls the item.",
                    "title":"Lots That Control Items"
                },
                "lotSerialItemLots":{
                    "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots",
                    "description":"The Lots That Share Control resource manages details about the lots that control the item. Use it when lots and serials control the item.",
                    "title":"Lots That Share Control"
                },
                "serialItemSerials":{
                    "$ref":"#/definitions/inventoryTransactions-transactionLines-serialItemSerials",
                    "description":"The Serials That Control Items resource manages details about the serial. Use it when only the serial controls the item.",
                    "title":"Serials That Control Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-lotItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactions-transactionLines-lotItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-lotItemLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot expires. Applies when only the lot controls the item."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number. Applies when only the lot controls the item."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number. Applies when only the lot controls the item."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the lot in the primary unit of measure. Applies when only the lot controls the item."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the reason for the lot. Applies when only the lot controls the item."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the reason for the lot. Applies when only the lot controls the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Secondary transaction quantity of the lot. Applies when only the lot controls the item."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the lot. Applies when only the lot controls the item."
                },
                "VendorLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Vendor number. Applies when the only lot controls the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-lotSerialItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-lotSerialItemLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot expires. Applies when the lot and serial control the item."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number. Applies when the lot and serial control the item."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number of the parent of the log. Applies when the lot and serial control the item."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the lot in the primary unit of measure. Applies when the lot and serial control the item."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the reason for the lot. Applies when the lot and serial control the item."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the reason for the lot. Applies when the lot and serial control the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Secondary transaction quantity of the lot. Applies when the lot and serial control the item."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the lot. Applies when the lot and serial control the item."
                },
                "VendorLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Supplier of the lot. Applies when the lot and serial control the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotSerialItemSerials":{
                    "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials",
                    "description":"The Serials That Share Control resource manages details about the serials that control the item. Use it when lots and serials control the item.",
                    "title":"Serials That Share Control"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range. Applies when the lot and serial control the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range. Applies when the lot and serial control the item."
                },
                "VendorSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Supplier serial number. Applies when the lot and serial control the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-serialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactions-transactionLines-serialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactions-transactionLines-serialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in a range. Applies when only the serial controls the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in a range. Applies when only the serial controls the item."
                },
                "VendorSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Supplier serial number. Applies when only the serial controls the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inTransitShipmentLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inTransitShipmentLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inTransitShipmentLines-item":{
            "properties":{
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "Shipment":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Number that identifies the shipment of the item that is in transit."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the shipment line."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "linesToPutAway":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/linesToPutAway-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "linesToPutAway-item":{
            "properties":{
                "ASNLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Line number of the advanced shipment notice."
                },
                "ASNNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Number that identifies the advanced shipment notice for the shipment from the supplier."
                },
                "AvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to put away the parent transaction."
                },
                "BackToBack":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order."
                },
                "CategoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the category name."
                },
                "CategoryName":{
                    "maxLength":250,
                    "type":"string",
                    "description":"Name of the category that classifies the item. A category groups items that possess similar characteristics, such as plastics, paints, inks, foods, and so on."
                },
                "Comments":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Comments provided when receiving the item."
                },
                "ConsignedItems":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the receipt is consigned. N: the receipt is not consigned."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency, such as USD."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use when determining the rates to use when calculating the currency conversion."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Rate to use when calculating the currency conversion."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Currency conversion type."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who purchases the item, typically for a fee."
                },
                "DestinationType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Destination type for the item on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the material on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DocumentDistributionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Distribution number for the document schedule. This attribute applies only for a purchase order or transfer order."
                },
                "DocumentLineNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Line number for the document number."
                },
                "DocumentNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document number that identifies one of the following: the purchase order number for the purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER."
                },
                "DocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Schedule number for the document line number."
                },
                "DocumentType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee."
                },
                "EmployeeName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the person who performed the transaction."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advance shipment notices."
                },
                "FromOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "InspectionStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Inspection status of the item. The RCV_INSPECTION_STATUS lookup defines the values that you can use with this attribute."
                },
                "InspectionStatusCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the inspection status code of the item. The RCV_INSPECTION_STATUS lookup defines the values that you can use with this attribute."
                },
                "InventoryTransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction type."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the item to receive. This item is any part, material, product, or service that contains unique attributes when compared to other items."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "LineStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Current status of the received line, such as Received, Delivered, or Inspected. The RCV_LINE_STATUS lookup defines the values that you can use with this attribute."
                },
                "Location":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Physical location of the warehouse that receives items."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the locator where the item currently resides."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "PORevisionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Revision number of the purchase order."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction."
                },
                "ParentTransactionType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Transaction type of the parent transaction."
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure that the item references."
                },
                "Reason":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Describes the rationale for classifying a transaction."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the received line includes an exception. N: the received line does not include an exception."
                },
                "ReceiptNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the receipt of the shipment in the warehouse."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source type of the shipment."
                },
                "Routing":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing name for the type of transaction entry that determines the steps that receive the item. The RCV_ROUTING_HEADERS lookup defines the values that you can use with this attribute."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving routing."
                },
                "SecondaryAvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to put away the parent transaction, using the secondary unit of measure."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure to use for the quantity that is available to put away the parent transaction."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure to use for the quantity that is available to put away the parent transaction."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory where the item currently resides."
                },
                "TOShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the transfer order shipment."
                },
                "ToOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the ship-to organization of the line to put away."
                },
                "ToOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ship-to organization of the line to put away."
                },
                "TransactionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction finished."
                },
                "TransferOrderDistId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order distribution."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure to use for the quantity that is available to put away the parent transaction."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure to use for the quantity that is available to put away the parent transaction."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorItemNumber":{
                    "maxLength":1200,
                    "type":"string",
                    "description":"Number that the supplier uses to identify the item."
                },
                "VendorName":{
                    "maxLength":1440,
                    "type":"string",
                    "description":"Name of the party who provides a product in return for an item that might or might not require payment."
                },
                "VendorSiteCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Abbreviation that identifies the buying organization that conducts business with the supplier."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactionTypes":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactionTypes-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactionTypes-item":{
            "properties":{
                "TransactionAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction action."
                },
                "TransactionActionId":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the transaction action."
                },
                "TransactionSourceTypeDefinedBy":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Indicates whether the user defined the transaction source type or the system defined the transaction source type."
                },
                "TransactionSourceTypeDefinedByCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the user defined the transaction source type. N: the system defined the transaction source type."
                },
                "TransactionSourceTypeDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the transaction source type."
                },
                "TransactionSourceTypeEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this transaction source type becomes inactive."
                },
                "TransactionSourceTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction source type."
                },
                "TransactionSourceTypeName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction source type."
                },
                "TransactionSourceTypeStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this transaction source type becomes active."
                },
                "TransactionTypeDefinedBy":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Indicates whether the user defined the transaction type or the system defined the transaction type."
                },
                "TransactionTypeDefinedByCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the user defined the transaction type. N: the system defined the transaction type."
                },
                "TransactionTypeDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the transaction type."
                },
                "TransactionTypeEndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this transaction type becomes inactive."
                },
                "TransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction type."
                },
                "TransactionTypeName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the transaction type."
                },
                "TransactionTypeStartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this transaction type becomes active."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "dispatchListWorkOrderOperations":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/dispatchListWorkOrderOperations-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "dispatchListWorkOrderOperations-WorkOrderOperationProductSerial":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/dispatchListWorkOrderOperations-WorkOrderOperationProductSerial-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "dispatchListWorkOrderOperations-WorkOrderOperationProductSerial-item":{
            "properties":{
                "OperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the operation. It is a primary key that the application generates for an operation on the work order. The item serial is in a dispatch status for this operation."
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Number that you define that uniquely identifies an operation in the work order."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order serial. It is a primary key that the application generates when it creates the serial number."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number of the item that the plant is manufacturing."
                },
                "SerialStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status of the item serial that the plant is manufacturing. Possible statuses include Associated, In Progress, Rejected, Scrapped, or Completed."
                },
                "SerialStatusDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the status of the serial."
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderProductSerialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the product serial number. It is a primary key that the application generates when it creates the serial number for an item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "dispatchListWorkOrderOperations-item":{
            "properties":{
                "CustomerId":{
                    "type":"number",
                    "description":"Value that uniquely identifies the customer. It is a primary key that the application generates when it creates the customer. If the application reserves the work order as supply for the sales order, then this attribute will contain a value."
                },
                "CustomerName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Customer name on the sales order that the work order references. Fulfillment reserves this work order as supply for the sales order."
                },
                "DispatchState":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Current dispatch status of an operation, such as Ready to be worked on, Completed, Scrapped, or Rejected. It also represents Optional operations.",
                    "title":"Lookup Code"
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item. It is a primary key that the application generates when it creates the item.",
                    "title":"Item Number"
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item.",
                    "title":"Item Description"
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number of the item that the plant is manufacturing.",
                    "title":"Item"
                },
                "OperationDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the operation.",
                    "title":"Description"
                },
                "OperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the inventory organization."
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Number that the user defines that uniquely identifies an operation in the work order.",
                    "title":"Operation Sequence"
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the inventory organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization. It is a primary key that the application generates when it creates an inventory organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the inventory organization."
                },
                "PlannedCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Scheduled completion date and time of the work order operation.",
                    "title":"Completion Date"
                },
                "PlannedStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Scheduled start date and time of the work order operation.",
                    "title":"Start Date"
                },
                "PurchaseOrder":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Purchase order number that the work order references."
                },
                "PurchaseOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies a purchase order. It is a primary key that the application generates when it creates the purchase order. If the work order is for contract manufacturing, then this attribute will contain a value."
                },
                "PurchaseOrderLine":{
                    "type":"number",
                    "description":"Line number on the purchase order that the work order references.",
                    "title":"Line"
                },
                "PurchaseOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line. It is a primary key that the application generates when it creates the purchase order line. If the work order is for contract manufacturing, then this attribute will contain a value."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity of the work order operations that are the Dispatch status."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure of the quantity that the plant is manufacturing.",
                    "title":"UOM"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work center.",
                    "title":"Code"
                },
                "WorkCenterDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center.",
                    "title":"Description"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work order.",
                    "title":"Description"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Value that uniquely identifies a work order in an inventory organization. The application creates this number according to the organization settings.",
                    "title":"Work Order"
                },
                "WorkOrderOperationProductSerial":{
                    "$ref":"#/definitions/dispatchListWorkOrderOperations-WorkOrderOperationProductSerial",
                    "description":"The Product Serials for Work Order Operations resource manages the serials for the work order operation according to dispatch status.",
                    "title":"Product Serials for Work Order Operations"
                },
                "WorkOrderPriority":{
                    "type":"number",
                    "description":"Priority of the work order.",
                    "title":"Priority"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "activeSubinventories":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/activeSubinventories-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "activeSubinventories-item":{
            "properties":{
                "AllowReservations":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not the warehouse can reserve the inventory."
                },
                "AssetInventory":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to consider the inventory in the subinventory as assets."
                },
                "AssetInventoryCode":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to consider the inventory in the subinventory as assets."
                },
                "Depreciable":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Y or N. Y: this subinventory is depreciable. N: this subinventory is not depreciable."
                },
                "DepreciableCode":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the inventory in this subinventory is depreciable."
                },
                "Description":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Description of the subinventory."
                },
                "DisableDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to disable the subinventory."
                },
                "IncludeInATP":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Y or N. Y: include the inventory when calculating available to promise. N: do not include the inventory when calculating available to promise."
                },
                "InventoryATPCode":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to include the inventory when calculating the invetory that is available to promise."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the location."
                },
                "LocationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the location."
                },
                "LocatorType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Type of stock locator control that this subinventory uses."
                },
                "LocatorTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the the type of stock locator control that this subinventory uses."
                },
                "Nettable":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not the inventory is nettable."
                },
                "NettableCode":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the inventory is nettable."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "PickingOrder":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Sequence to use when picking the item from this subinventory."
                },
                "PostprocessingLeadTime":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Postprocessing lead time to use when sourcing the item."
                },
                "PreprocessingLeadTime":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Preprocessing lead time to use when sourcing the item."
                },
                "ProcessingLeadTime":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Processing lead time to use when sourcing the item."
                },
                "QuantityTracked":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to track the quantity that is on-hand for the item."
                },
                "QuantityTrackedCode":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the warehouse tracks the quantity that is on-hand."
                },
                "ReservableType":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the warehouse can reserve the inventory."
                },
                "SecondaryInventoryName":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "SourceOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization to use when sourcing the item."
                },
                "SourceOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization to use when sourcing the item."
                },
                "SourceOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization to use when sourcing the item."
                },
                "SourceSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Subinventory to use when sourcing the item."
                },
                "SourceType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Sourcing type to use when replenishing the item."
                },
                "SourceTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the sourcing type to use for replenishment."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the status."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the status."
                },
                "SubinventoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the subinventory."
                },
                "SubinventoryType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"The type of subinventory."
                },
                "SubinventoryTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of subinventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "availableQuantityDetails":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/availableQuantityDetails-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "availableQuantityDetails-item":{
            "properties":{
                "AvailableToTransact":{
                    "type":"number",
                    "description":"Quantity that is available for transactions after the warehouse considers allocations and reservations."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "type":"string",
                    "description":"Name of the item."
                },
                "ItemRevision":{
                    "type":"string",
                    "description":"Revision of the item."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "Lot":{
                    "type":"string",
                    "description":"Number that identifies an item or group of items."
                },
                "OrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OwningEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning party."
                },
                "PrimaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Primary unit of measure of the item."
                },
                "QuantityOnhand":{
                    "type":"number",
                    "description":"On-hand quantity for the item."
                },
                "ReturnMessageName":{
                    "type":"string",
                    "description":"Message name to use if a failure occurs."
                },
                "ReturnMessageText":{
                    "type":"string",
                    "description":"Message text to use if a failure occurs."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Return status of the resource."
                },
                "SecondaryAvailableToTransact":{
                    "type":"number",
                    "description":"Quantity that is available for transactions in the secondary unit of measure."
                },
                "SecondaryQuantityOnhand":{
                    "type":"number",
                    "description":"On-hand quantity for the item in the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Secondary unit of measure of the item."
                },
                "Subinventory":{
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "returnLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/returnLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "returnLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the items in the lot are no longer available for transactions and planning."
                },
                "LotNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inTransitReceiptLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inTransitReceiptLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inTransitReceiptLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date that controls availability of the lot for transaction and planning purposes."
                },
                "LotNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrderStatuses":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrderStatuses-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrderStatuses-item":{
            "properties":{
                "SeededFlag":{
                    "type":"boolean",
                    "description":"Contains True or False.<br>True: the status code comes predefined with the application. <br>False: the customer defines the status codes."
                },
                "WoStatusCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work order status."
                },
                "WoStatusDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work order status."
                },
                "WoStatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates a work order status."
                },
                "WoStatusName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the work order status."
                },
                "WoSystemStatusCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the predefined status of this work order."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receivingTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingTransactions-item":{
            "properties":{
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error that occurred when calling the service. If the call is successful, then this attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message text of the error that occurred when calling the service. If the call is successful, then this attribute is empty."
                },
                "ErrorUniqueTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt line that caused the error. If the call is successful, then this attribute is empty."
                },
                "GroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the current service call. Values include SUCCESS or FAILURE."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "transactionLines":{
                    "$ref":"#/definitions/receivingTransactions-transactionLines",
                    "description":"The Transaction Lines resource manages details about the transaction and the inbound shipment line.",
                    "title":"Transaction Lines"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingTransactions-transactionLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-item":{
            "properties":{
                "ASNLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the line on the advanced shipment notice."
                },
                "Amount":{
                    "type":"number",
                    "description":"Transaction amount in the purchase order currency. This attribute applies to fixed price lines."
                },
                "AutoTransactCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to complete subsequent transactions. For example, if the transaction type is RECEIVE, and if the auto transact code is DELIVER, then the warehouse will complete the putaway when it processes the receipt."
                },
                "BUId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the business unit. For a purchase order receipt, this column references the procurement business unit of the supplier site. For an RMA receipt, this column references the RMA business unit."
                },
                "BusinessUnit":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the business unit. For a purchase order receipt, this column references the procurement business unit of the supplier site. For an RMA receipt, this column references the RMA business unit."
                },
                "Comments":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the receiving that occurred when receiving the item."
                },
                "ConsignmentLine":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Determines whether or not the receiving transaction is for a consigned item."
                },
                "ContainerNumber":{
                    "maxLength":35,
                    "type":"string",
                    "description":"Container number for the receipt line of the receiving shipment."
                },
                "CountryOfOriginCode":{
                    "maxLength":2,
                    "type":"string",
                    "description":"Abbreviation that identifies the country of manufacture for this item."
                },
                "CreateDebitMemo":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Determines whether or not to create a debit memo."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency of the receiving transaction."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the currency conversion occurred for the receipt. Use this attribute only for a purchase order receipt."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Currency conversion rate for the receipt. Use this attribute only for a purchase order receipt."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of currency conversion rate for the purchase order. Use this attribute only for a purchase order receipt."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer for the item."
                },
                "CustomerItemNumber":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Customer item number that references the item."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the customer."
                },
                "DeliverToLocationCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Abbreviation that identifies the deliver-to location."
                },
                "DeliverToLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the deliver-to location."
                },
                "DeliverToPersonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the deliver-to person or the requester."
                },
                "DeliverToPersonName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the deliver-to person or the requester."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the receiving transaction."
                },
                "DocumentDistributionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the document distribution for the receiving transaction."
                },
                "DocumentLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the document line number for the receiving transaction."
                },
                "DocumentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the document for the receiving transaction."
                },
                "DocumentScheduleNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the document schedule for the receiving transaction."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee who performed the receiving transaction."
                },
                "EmployeeName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the employee who performed the receiving transaction."
                },
                "Exception":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: record an exception on the receiving transaction. N: do not record an exception on the receiving transaction."
                },
                "FromLocator":{
                    "maxLength":81,
                    "type":"string",
                    "description":"Source locator name for the receiving transaction."
                },
                "FromLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source locator for the receiving transaction."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the source organization for an interorganization transfer."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source organization for the in-transit shipment."
                },
                "FromSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Source subinventory name for the receiving transaction."
                },
                "InspectionQualityCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the inspection quality. The RCV_QUALITY_CODE lookup defines the values that you can use with this attribute."
                },
                "InterfaceSourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source of the receiving transaction."
                },
                "InterfaceSourceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the source line."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the item."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision number of the item."
                },
                "Locator":{
                    "maxLength":81,
                    "type":"string",
                    "description":"Name of the destination locator for the receiving transaction."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the destination locator for the receiving transaction."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "PackingSlip":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Packing slip number of the container to use when packing this item."
                },
                "ParentSourceTransactionNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Number that identifies the source transaction number of the parent receiving transaction."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent receiving transaction."
                },
                "PhysicalMaterialReturnRequired":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Determines whether or not the return for a transfer order requires a physical return of the item."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity in the primary unit of measure that the item uses."
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure that the item in the receiving organization uses."
                },
                "PrimaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Primary unit of measure that the item in the receiving organization uses."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Transaction quantity in the unit of measure that the receiving transaction uses."
                },
                "RMAReference":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the return material authorization to use when returning goods to the supplier."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction reason for this receiving transaction."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the inventory transaction reason for this receiving transaction."
                },
                "ReceiptAdviceDocumentLineNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number that identifies the source document line for the receipt advice."
                },
                "ReceiptAdviceDocumentNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number that identifies the source document for the receipt advice."
                },
                "ReceiptAdviceDocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number that identifies the source document schedule for the receipt advice line."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source type of the shipment or the receipt. Values include VENDOR, INVENTORY, TRANSFER ORDER, or CUSTOMER."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving routing. Values include 1 for standard receipt, 2 for inspection required, and 3 for direct delivery."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity in the secondary unit of measure that the item uses."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure that the item in the receiving organization uses."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure that the item in the receiving organization uses."
                },
                "ShipToLocationCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving location."
                },
                "ShipToLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving shipment or the receiving receipt header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "ShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that the shipment source assigns. This number corresponds to the number for one of the following documents: advanced shipment notice, in-transit shipment, or transfer order shipment."
                },
                "SoldtoLegalEntity":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the sold-to legal entity."
                },
                "SoldtoLegalEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the sold-to legal entity."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of source document. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "SourceTransactionNumber":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Value that uniquely identifies the transaction identifier in the source system."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the destination subinventory for the receiving transaction."
                },
                "SubstituteItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the substitute item."
                },
                "SubstituteItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Substitute item number for the item on this receipt line."
                },
                "SubstituteUnorderedCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Determines whether or not the transaction will substitute an item. Value is SUBSTITUTE."
                },
                "TransactionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the receiving transactions occurred."
                },
                "TransactionType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Type of receiving transaction. The RCV_TRANSACTION_TYPE lookup defines the values that you can use with this attribute."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure that the receiving transaction uses."
                },
                "UniqueTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving transaction."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the receiving transaction uses."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that the supplier uses to identify the item."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the supplier."
                },
                "VendorNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the supplier."
                },
                "VendorSiteCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the supplier site for the business unit."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotItemLots":{
                    "$ref":"#/definitions/receivingTransactions-transactionLines-lotItemLots",
                    "description":"The Lot Item Lots resource manages details about the lot. You can use this resource if the lot controls the item that the receipt references.",
                    "title":"Lot Item Lots"
                },
                "lotSerialItemLots":{
                    "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots",
                    "description":"The Lot Serial Item Serials resource manages details about the serial. You can use this resource if the lot and serial controls the item.",
                    "title":"Lot Serial Item Lots"
                },
                "serialItemSerials":{
                    "$ref":"#/definitions/receivingTransactions-transactionLines-serialItemSerials",
                    "description":"The Serial Item Serials resource manages details about the serial. You can use this resource if the serial controls the item.",
                    "title":"Serial Item Serials"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-lotItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingTransactions-transactionLines-lotItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-lotItemLots-item":{
            "properties":{
                "HoldDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse applied a hold on the lot."
                },
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the item of this lot expires."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number for the item. Applies when the lot controls the item."
                },
                "MaturityDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot matures."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this lot originated."
                },
                "OriginationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of origination for the lot."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the primary unit of measure that the item uses."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction reason for the receiving transaction for this lot. Applies when the lot controls the item."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the inventory transaction reason for the receiving transaction for this lot. Applies when the lot controls the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the secondary unit of measure that the item uses."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the item for this lot. Applies when the lot controls the item."
                },
                "VendorLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Supplier lot number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-lotSerialItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-lotSerialItemLots-item":{
            "properties":{
                "HoldDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse applied a hold on the lot."
                },
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the item of this lot expires."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number for the item. Applies when the lot and serial control the item."
                },
                "MaturityDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot matures."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this lot originated."
                },
                "OriginationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of origination."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the primary unit of measure that the item uses."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction reason for this receiving transaction for this lot. Applies when the lot and serial control the item."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the inventory transaction reason for this receiving transaction for this lot. Applies when the lot and serial control the item."
                },
                "SecondaryTransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the secondary unit of measure that the item uses."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transaction quantity of the item for this lot. Applies when the lot and serial control the item."
                },
                "VendorLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Supplier lot number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "lotSerialItemSerials":{
                    "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials",
                    "description":"The Lot Serial Item Lots resource manages details about the lot. You can use this resource if the lot and serial controls the item.",
                    "title":"Lot Serial Item Serials"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in the range of serial numbers. Applies when the lot and serial control the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in the range of serial numbers. Applies when the lot and serial control the item."
                },
                "VendorSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Supplier serial number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-serialItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingTransactions-transactionLines-serialItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingTransactions-transactionLines-serialItemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Starting serial number in the range of serial numbers. Applies when the serial controls the item."
                },
                "ToSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Ending serial number in the range of serial numbers. Applies when the serial controls the item."
                },
                "VendorSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Supplier serial number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "issueSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/issueSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "issueSerials-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Serial number that tracks items that are in inventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validateCorrectedQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validateCorrectedQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validateCorrectedQuantities-item":{
            "properties":{
                "ConsignedItems":{
                    "type":"string",
                    "description":"Contains Y or N. Y: the item is consigned. N: the item is not consigned."
                },
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Code attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Explanation attribute is empty."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction to correct."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity recommended to correct the transaction."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains one of the following values. SUCCESS: the application successfully validated the quantity for the transaction. ERROR: this validation failed. WARNING: the validation found a potential problem, but allows the transaction to continue."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Secondary quantity recommended to correct the transaction."
                },
                "SecondaryUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the secondary quantity recommended to correct the transaction."
                },
                "SourceDocumentCode":{
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "TransactionType":{
                    "type":"string",
                    "description":"Type of transaction. Set this attribute to CORRECT for a correction transaction."
                },
                "UOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure."
                },
                "UnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the quantity recommended to correct the transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "splitPickTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/splitPickTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "splitPickTransactions-item":{
            "properties":{
                "ErrorCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the error that occurred when the pick split fails. If the pick split does not fail, then this attribute is empty."
                },
                "ErrorExplanation":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Explanation of why the error occurred when the pick split fails. If the pick split does not fail, then this attribute is empty."
                },
                "NewPickSlipLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the new line on the pick slip."
                },
                "PickSlip":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the pick slip."
                },
                "PickSlipLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies a line on the pick slip."
                },
                "RemoveAllocatedLotSerials":{
                    "type":"string",
                    "description":"Contains Y or N. Y: remove allocated lots and serials. N: do not remove allocated lots and serials. If allocated lots and serials exist, then the warehouse cannot split the transaction. The default value is N."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the pick split. This attribute can contain one of the following values: SUCCESS or ERROR."
                },
                "SplitQuantity":{
                    "type":"number",
                    "description":"Quantity to split into the new pick slip line."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validateInspectQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validateInspectQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validateInspectQuantities-item":{
            "properties":{
                "DocumentDistributionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Distribution number for the document schedule. This attribute applies only for a purchase order or transfer order."
                },
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Code attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Explanation attribute is empty."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction to inspect."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity recommended to inspect the transaction."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains one of the following values. SUCCESS: the application successfully validated the quantity for the transaction. ERROR: this validation failed. WARNING: the validation found a potential problem, but allows the transaction to continue."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Secondary quantity recommended to inspect the transaction."
                },
                "SecondaryUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the secondary quantity recommended to inspect the transaction."
                },
                "SourceDocumentCode":{
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "UOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure."
                },
                "UnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the quantity recommended to inspect the transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "transferOrderLinesForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/transferOrderLinesForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "transferOrderLinesForReceiving-item":{
            "properties":{
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "TransferOrder":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Number that identifies the request to transfer the item."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header."
                },
                "TransferOrderLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the transfer order line."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "linesToReceive":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/linesToReceive-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "linesToReceive-item":{
            "properties":{
                "ASNLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Line number of the advanced shipment notice."
                },
                "ASNNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the advanced shipment notice for the shipment from the supplier."
                },
                "AvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to receive."
                },
                "BackToBack":{
                    "maxLength":4,
                    "type":"string",
                    "description":"Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order."
                },
                "CategoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the category name."
                },
                "CategoryName":{
                    "maxLength":250,
                    "type":"string",
                    "description":"Name of the category that classifies the item. A category groups items that possess similar characteristics, such as plastics, paints, inks, foods, and so on."
                },
                "ConsignedItems":{
                    "maxLength":4,
                    "type":"string",
                    "description":"Contains Y or N. Y: the item is consigned. N: the item is not consigned."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency, such as USD."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use when determining the rates to use when calculating the currency conversion."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Rate to use when calculating the currency conversion."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Currency conversion type."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who purchases the product, typically for a fee."
                },
                "DestinationType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Destination type for the item on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the item on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DocumentDistributionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Distribution number for the document schedule. This attribute applies only for a purchase order or transfer order."
                },
                "DocumentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies<br>the document line."
                },
                "DocumentLineNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Line number for the document number."
                },
                "DocumentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Document number that identifies one of the following: the purchase order number for the purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER."
                },
                "DocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Schedule number for the document line number."
                },
                "DocumentType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "DueDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse expects to receive the item."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advance shipment notices."
                },
                "FromOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "HeaderNoteToReceiver":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Note to the receiver on the header."
                },
                "IntegrationStatus":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Integration status for the line when communicating with a system that resides outside of Oracle. The ORA_RCV_EXT_SYS_INTG_STATUS lookup defines the values that you can use with this attribute."
                },
                "InventoryTransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction type."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the item to receive. This item is any part, material, product, or service that contains unique attributes when compared to other items."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "MatchOption":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Describes the matching criteria to use for the invoice."
                },
                "OrderedQuantity":{
                    "type":"number",
                    "description":"Quantity ordered on the document line."
                },
                "OrderedUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"The unit of measure for the ordered quantity as per the document line."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "PORevisionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Revision number of the purchase order."
                },
                "POUnitPrice":{
                    "type":"number",
                    "description":"Unit price on the document line."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source type of the shipment."
                },
                "Routing":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing name for the type of transaction entry that determines the steps that receive the item. The RCV_ROUTING_HEADERS lookup defines the values that you can use with this attribute."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving routing."
                },
                "ScheduleNoteToReceiver":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Note to the receiver on the schedule."
                },
                "SecondaryAvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to receive, using the secondary unit of measure."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure to use for the quantity that is available to receive."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure to use for the quantity that is available to receive."
                },
                "ShipToLocation":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Physical location of the warehouse that receives the item."
                },
                "ShipToLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "SoldtoLegalEntity":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Legal entity that is liable for the purchase order amount."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "SourceSystem":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Application that captures the source document for the order line. The source system identifies the trading partner systems that receiving uses, such as Order Management Cloud, the customer of a logistics service, or an order management system that resides outside of Oracle."
                },
                "TOShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the transfer order shipment."
                },
                "ToOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the ship-to organization of the received line."
                },
                "ToOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ship-to organization of the received line."
                },
                "TransferOrderDistId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order distribution."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure to use for the quantity that is available to receive."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure to use for the quantity that is available to receive."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the vendor who supplies the item."
                },
                "VendorItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that the supplier uses to identify the item."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the company that provides a product in return for an item that might or might not require payment."
                },
                "VendorSiteCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the buying organization that conducts business with the supplier."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workCenters":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workCenters-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workCenters-WorkCenterDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workCenters-WorkCenterDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workCenters-WorkCenterDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. You can use a flexfield with this work center resource. A flexfield is a flexible data field that your organization can use to modify your implementation without having to write programming code."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Context codes that the descriptive flexfields reference.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/workCenters/{WorkCenterId}/child/WorkCenterDFF/{WorkCenterId2}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Context codes that the descriptive flexfields reference."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "workCenters-WorkCenterResource":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workCenters-WorkCenterResource-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workCenters-WorkCenterResource-item":{
            "properties":{
                "Available24HoursFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: work center resource is available 24 hours for each day. False: work center resource is not available 24 hours for each day. A work center resource that is not available 24 hours for each day is available only during the shifts that you assign to this work center resource. A work center resource is available in shifts only if Available24HoursFlag contains False.",
                    "title":"Available 24 Hours"
                },
                "CheckCtpFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: Global Order Promising considers the capacity of this work center resource during order promising. False: Global Order Promising does not consider this capacity.<br>If CheckCtpFlag contains False, then the capable-to-promise (CTP) check does not consider the capacity of this work center resource.",
                    "title":"Check Capable To Promise"
                },
                "EfficiencyPercentage":{
                    "type":"number",
                    "description":"Percent of time that the work center resource requires to finish the task.",
                    "title":"Efficiency"
                },
                "ResourceDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center resource.",
                    "title":"Description"
                },
                "ResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center resource. It is a primary key that the application generates when it creates a work center resource."
                },
                "ResourceName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center resource.",
                    "title":"Name"
                },
                "ResourceQuantity":{
                    "type":"number",
                    "description":"Number of work center resources assigned to this work center.",
                    "title":"Default Units Available"
                },
                "UtilizationPercentage":{
                    "type":"number",
                    "description":"Percent of time that is available to perform the task.",
                    "title":"Utilization"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center that this work center resource references."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workCenters-item":{
            "properties":{
                "InactiveDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the work area becomes inactive.",
                    "title":"Inactive On"
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the inventory organization.",
                    "title":"Organization"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization. It is a primary key that the application generates when it creates an inventory organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the inventory organization.",
                    "title":"Organization Name"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work area.",
                    "title":"Description"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates a work area.",
                    "title":"Work Area"
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work center.",
                    "title":"Code"
                },
                "WorkCenterDFF":{
                    "$ref":"#/definitions/workCenters-WorkCenterDFF",
                    "description":"The Flexfields for Work Centers resource manages the descriptive flexfields that the work center references.",
                    "title":"Flexfields for Work Centers"
                },
                "WorkCenterDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center.",
                    "title":"Description"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates a work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkCenterResource":{
                    "$ref":"#/definitions/workCenters-WorkCenterResource",
                    "description":"The Work Center Resources resource manages work center resources that the work center uses.",
                    "title":"Work Center Resources"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "productionResources":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/productionResources-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "productionResources-ResourceDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/productionResources-ResourceDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "productionResources-ResourceDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "ResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the production resource. You can use a flexfield with this production resource. A flexfield is a flexible data field that your organization can use to modify your implementation without having to write programming code."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Context codes that the descriptive flexfields reference.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/productionResources/{ResourceId}/child/ResourceDFF/{ResourceId2}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Context codes that the descriptive flexfields reference."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "productionResources-item":{
            "properties":{
                "CostedFlag":{
                    "type":"boolean",
                    "description":"Contains Y or N. Y: consider resource costs in work order costing. N: Does not consider these costs.",
                    "title":"Costing enabled"
                },
                "InactiveDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the production resource becomes inactive.",
                    "title":"Inactive On"
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the inventory organization.",
                    "title":"Organization"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization. It is a primary key that the application generates when it creates an inventory organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the inventory organization.",
                    "title":"Organization Name"
                },
                "ResourceClassCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the class that groups production resources.",
                    "title":"Class"
                },
                "ResourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the production resource.",
                    "title":"Code"
                },
                "ResourceDFF":{
                    "$ref":"#/definitions/productionResources-ResourceDFF",
                    "description":"The Flexfields for Production Resources resource manages descriptive flexfields that the production resource uses.",
                    "title":"Flexfields"
                },
                "ResourceDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the production resource.",
                    "title":"Description"
                },
                "ResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the production resource. It is a primary key that the application generates when it creates a production resource."
                },
                "ResourceName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the production resource.",
                    "title":"Name"
                },
                "ResourceType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the production resource. Values include Labor or Equipment.",
                    "title":"Type"
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Name of the unit of measure.",
                    "title":"UOM"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "purchaseOrderSchedulesForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/purchaseOrderSchedulesForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "purchaseOrderSchedulesForReceiving-item":{
            "properties":{
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line to receive."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "PurchaseOrder":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Number that identifies the purchase order, which is a commercial document that you can use to send a request to a seller to supply a product or a service in return for payment."
                },
                "PurchaseOrderLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the purchase order line."
                },
                "PurchaseOrderSchedule":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the purchase order schedule."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryItemSerialNumbers":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryItemSerialNumbers-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryItemSerialNumbers-item":{
            "properties":{
                "Allocated":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Indicates whether or not the warehouse allocated the item."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the item."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the locator."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "ReceiptDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse completed or received the item."
                },
                "Reserved":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Indicates whether or not the warehouse reserved the item for a transaction."
                },
                "Revision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number."
                },
                "ShippedDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse shipped the item."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Abbreviation that identifies the status of the item."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material status."
                },
                "SubinventoryCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Abbreviation that identifies the subinventory."
                },
                "Usage":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Current usage of the item."
                },
                "UsageCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines the current usage of the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validateInventoryTransactionQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validateInventoryTransactionQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validateInventoryTransactionQuantities-item":{
            "properties":{
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "type":"string",
                    "description":"Number that identifies the inventory item."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "LotNumber":{
                    "type":"string",
                    "description":"Lot number of the item."
                },
                "OrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OwningEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning entity."
                },
                "ReturnMessageName":{
                    "type":"string",
                    "description":"Error message name when the request fails. If the request is successful, then this attribute is empty."
                },
                "ReturnMessageText":{
                    "type":"string",
                    "description":"Error explanation when the request fails. If the request is successful, then this attribute is empty."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Return status from the call to the validate service."
                },
                "Revision":{
                    "type":"string",
                    "description":"Revision of the item."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity in the secondary unit of measure."
                },
                "SecondaryUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Secondary unit of measure."
                },
                "Subinventory":{
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Quantity to validate in the unit of measure that the transaction uses."
                },
                "TransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction type."
                },
                "TransactionTypeName":{
                    "type":"string",
                    "description":"Name of the transaction type."
                },
                "TransactionUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure that the transaction uses."
                },
                "TransactionUnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure that the transaction uses."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "linesToReturn":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/linesToReturn-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "linesToReturn-item":{
            "properties":{
                "ASNLineNumber":{
                    "type":"number",
                    "description":"Line number of the advanced shipment notice."
                },
                "ASNNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the advanced shipment notice for the shipment from the supplier."
                },
                "AvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to return the parent transaction."
                },
                "BackToBack":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order."
                },
                "CategoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the category name."
                },
                "CategoryName":{
                    "maxLength":250,
                    "type":"string",
                    "description":"Name of the category that classifies the item. A category groups items that possess similar characteristics, such as plastics, paints, inks, foods, and so on."
                },
                "ConsignedItems":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the item is consigned. N: the item is not consigned."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency, such as USD."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use when determining the rates to use when calculating the currency conversion."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Rate to use when calculating the currency conversion."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Currency conversion type."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who purchases the item, typically for a fee."
                },
                "DestinationType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Destination type for the item on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the material on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DocumentDistributionNumber":{
                    "type":"number",
                    "description":"Distribution number for the document schedule. This attribute applies only for a purchase order or transfer order."
                },
                "DocumentLineNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Line number for the document number."
                },
                "DocumentNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document number that identifies one of the following: the purchase order number for the purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER."
                },
                "DocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Schedule number for the document line number."
                },
                "DocumentType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee."
                },
                "EmployeeName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the person who performed the transaction."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advance shipment notices."
                },
                "GrandParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the grandparent transaction."
                },
                "InventoryTransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction type."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the item to receive. This item is any part, material, product, or service that contains unique attributes when compared to other items."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "LineStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Current status of the received line, such as Received, Delivered, or Inspected. The RCV_LINE_STATUS lookup defines the values that you can use with this attribute."
                },
                "Location":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Physical location of the warehouse that receives items."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the locator where the item currently resides."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order location."
                },
                "PORevisionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Revision number of the purchase order."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction."
                },
                "ParentTransactionType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Transaction type of the parent transaction."
                },
                "Reason":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Describes the rationale for classifying the transaction."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the received line includes an exception. N: the received line does not include an exception."
                },
                "ReceiptNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the receipt of the shipment in the warehouse."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source type of the shipment."
                },
                "Routing":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing name for the type of transaction entry that determines the steps that receive the item. The RCV_ROUTING_HEADERS lookup defines the values that you can use with this attribute."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving routing header."
                },
                "SecondaryAvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to return the parent transaction, using the secondary unit of measure."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Secondary unit of measure to use for the quantity that is available to return the parent transaction."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure to use for the quantity that is available to return the parent transaction."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory where the item currently resides."
                },
                "TOShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the transfer order shipment."
                },
                "ToOrganizationCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the ship-to organization of the received line."
                },
                "ToOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ship-to organization of the received line."
                },
                "TransactionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction finished."
                },
                "TransferOrderDistId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order distribution."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Unit of measure to use for the quantity that is available to return the parent transaction."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure to use for the quantity that is available to return the parent transaction."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the vendor who supplies the item."
                },
                "VendorName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who provides a product in return for an item that might or might not require payment."
                },
                "VendorSiteCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the buying organization that conducts business with the supplier."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountDefinitions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-countClasses":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountDefinitions-countClasses-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-countClasses-item":{
            "properties":{
                "AbcClass":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Name of the ABC class that the cycle count includes."
                },
                "AbcClassId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ABC class that the cycle count includes."
                },
                "AdjustmentValueNegativeTolerance":{
                    "type":"number",
                    "description":"Negative percent that the warehouse allows the value to vary for each item that resides in this class."
                },
                "AdjustmentValuePositiveTolerance":{
                    "type":"number",
                    "description":"Positive percent that the warehouse allows the value to vary for each item that resides in this class."
                },
                "CountsPerYear":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of counts for each year that this class includes."
                },
                "CycleCountClassId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the class of the cycle count."
                },
                "HitAndMissNegativePercentage":{
                    "type":"number",
                    "description":"Negative percent tolerance that the warehouse uses for hit or miss analysis for this count class."
                },
                "HitAndMissPostivePercentage":{
                    "type":"number",
                    "description":"Positive percent tolerance that the warehouse uses for hit or miss analysis for this count class."
                },
                "QuantityVarianceNegativePercentage":{
                    "type":"number",
                    "description":"Negative percent that the warehouse allows the quantity to vary from the requested quantity for this class."
                },
                "QuantityVariancePositivePercentage":{
                    "type":"number",
                    "description":"Positive percent that the warehouse allows the quantity to vary from the requested quantity for this class."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-countItems":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountDefinitions-countItems-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-countItems-item":{
            "properties":{
                "AbcClass":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Name of the ABC class that the item references."
                },
                "AbcClassId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ABC class that the item references."
                },
                "AdjustmentValueNegativeTolerance":{
                    "type":"number",
                    "description":"Negative adjustment that the warehouse allows the value to vary for the item."
                },
                "AdjustmentValuePositiveTolerance":{
                    "type":"number",
                    "description":"Positive adjustment that the warehouse allows the value to vary for the item."
                },
                "CycleCountItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item that the cycle count definition references."
                },
                "IncludeInSchedule":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to schedule this item. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "IncludeInScheduleCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to schedule this item. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Item number."
                },
                "LastScheduledDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Value that indicates the most recent date that the warehouse scheduled this item for counting."
                },
                "QuantityVarianceNegativePercentage":{
                    "type":"number",
                    "description":"Negative percent that the warehouse allows the quantity to vary from the requested quantity for the item."
                },
                "QuantityVariancePositivePercentage":{
                    "type":"number",
                    "description":"Positive percent that the warehouse allows the quantity to vary from the requested quantity for the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-countSubinventories":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountDefinitions-countSubinventories-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-countSubinventories-item":{
            "properties":{
                "IncludeInCount":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to include the subinventory when counting. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "IncludeInCountCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to include the subinventory when counting. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory that the warehouse includes in this count definition."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountDefinitions-item":{
            "properties":{
                "AbcAssigmentGroup":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Name of the ABC group."
                },
                "AbcAssignmentGroupId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ABC group that the warehouse uses to initialize the item classification."
                },
                "ApprovalRequired":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not the warehouse requires approval. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "ApprovalRequiredCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the warehouse requires approval."
                },
                "ApprovalType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Type of approval that the warehouse requires for an adjustment transaction. The INV_APPROVAL_REQ lookup defines the values that you can use with this attribute."
                },
                "ApprovalTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines the type of approval that the warehouse requires for adjustment transactions. The INV_APPROVAL_REQ lookup defines the values that you can use with this attribute."
                },
                "AutomaticallySchedule":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not the warehouse schedules the counts. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "AutomaticallyScheduleCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the warehouse schedules the counts. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "CountZeroQuantity":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether the warehouse schedules a cycle count for an item when the onhand quantity is zero. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "CountZeroQuantityCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether the warehouse schedules a cycle count for an item when the onhand quantity is zero. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "CycleCountHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the cycle count definition."
                },
                "CycleCountName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the cycle count."
                },
                "Description":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the cycle count."
                },
                "DisplaySuggestedQuantity":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to display the on-hand quantity for the cycle count sequence. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "DisplaySuggestedQuantityCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to display the on-hand quantity for the cycle count sequence. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "EndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this cycle count becomes inactive."
                },
                "Frequency":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines the time interval to use between two consecutive scheduling runs for a cycle count. The INV_CC_SCHED_TIME lookup defines the values that you can use with this attribute."
                },
                "FrequencyCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines the time interval to use between two consecutive scheduling runs for a cycle count. The INV_CC_SCHED_TIME lookup defines the values that you can use with this attribute."
                },
                "LastScheduledDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date that the warehouse will use as the last scheduled run for this cycle count."
                },
                "ManualCountSequencePrefix":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Prefix for a manual count sequence."
                },
                "ManualCountsAllowed":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not the warehouse can use this cycle count to enter an unscheduled count. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "ManualCountsAllowedCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not the warehouse can use this cycle count to enter an unscheduled count. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "MaximumDaysBeforeLate":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of days after creation before the warehouse considers a scheduled count as late."
                },
                "MaximumRecounts":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Maximum number of recounts that the warehouse uses on a cycle count."
                },
                "NegativeAdjustmentTolerance":{
                    "type":"number",
                    "description":"Negative currency tolerance. If the currency falls below this tolerance, then the warehouse requires approval for the adjustment transaction."
                },
                "NegativeHitMissPercentage":{
                    "type":"number",
                    "description":"Negative percent tolerance that the warehouse uses for hit or miss analysis."
                },
                "NegativeTolerancePercentage":{
                    "type":"number",
                    "description":"Negative percent tolerance. If the adjustment falls below this tolerance, then the warehouse requires approval for the adjustment transaction."
                },
                "NextScheduledDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date that the warehouse will use for the next scheduled run for this cycle count."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "PositiveAdjustmentTolerance":{
                    "type":"number",
                    "description":"Positive currency tolerance. If the currency exceeds this tolerance, then the warehouse requires approval for the adjustment transaction."
                },
                "PositiveHitMissPercentage":{
                    "type":"number",
                    "description":"Positive percent tolerance that the warehouse uses for hit or miss analysis."
                },
                "PositiveTolerancePercentage":{
                    "type":"number",
                    "description":"Positive percent tolerance. If the adjustment exceeds this tolerance, then the warehouse requires approval for the adjustment transaction."
                },
                "RecordCountSerials":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines the detail level to use when counting serial items. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "RecordCountSerialsCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines the detail level to use when counting serial items. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "SerialCountOption":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to include serial items when creating the count. The INV_CC_SERIAL_COUNT_OPTIONS lookup defines the values that you can use with this attribute."
                },
                "SerialCountOptionCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to include serial items when creating the count. The INV_CC_SERIAL_COUNT_OPTIONS lookup defines the values that you can use with this attribute."
                },
                "SerialDiscrepancyAllowed":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to allow discrepancy when counting serial items. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "SerialDiscrepancyCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to allow discrepancy when counting serial items. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "SerialNumberAdjustment":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to adjust for serial items. The INV_CC_SERIAL_ADJ_OPTIONS lookup defines the values that you can use with this attribute."
                },
                "SerialNumberAdjustmentCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to adjust for serial items. The INV_CC_SERIAL_ADJ_OPTIONS lookup defines the values that you can use with this attribute."
                },
                "SerializedItemsAllowed":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not to use the cycle count to count serial items. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "SerializedItemsAllowedCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to use the cycle count to count serial items. The INV_YES_NO_NUMERIC lookup defines the values that you can use with this attribute."
                },
                "StartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this cycle count becomes active."
                },
                "StartingCountSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Starting number that the warehouse uses for the count sequence for the next scheduling run of the cycle count."
                },
                "WorkdaySchedule":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Workday schedule that the count references."
                },
                "WorkdayScheduleCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the workday schedule that the cycle count references."
                },
                "countClasses":{
                    "$ref":"#/definitions/cycleCountDefinitions-countClasses",
                    "description":"The Count Classes resource manages the count classes that the warehouse can use in the cycle count.",
                    "title":"Count Classes"
                },
                "countItems":{
                    "$ref":"#/definitions/cycleCountDefinitions-countItems",
                    "description":"The Count Items resource manages the items that the warehouse can use in the cycle count.",
                    "title":"Count Items"
                },
                "countSubinventories":{
                    "$ref":"#/definitions/cycleCountDefinitions-countSubinventories",
                    "description":"The Count Subinventories resource manages the subinventories that the warehouse can use with the cycle count.",
                    "title":"Count Subinventories"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "rmasForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/rmasForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "rmasForReceiving-item":{
            "properties":{
                "Customer":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Number that identifies the customer who is returning the item."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "OrganizationCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "type":"number",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "RMA":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number that identifies the return material authorization."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header that the application created for the return material authorization that it received from the customer."
                },
                "SourceSystem":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the system or application that captures the source of the transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "linesToCorrect":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/linesToCorrect-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "linesToCorrect-item":{
            "properties":{
                "ASNLineNumber":{
                    "type":"number",
                    "description":"Line number of the advanced shipment notice."
                },
                "ASNNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the advanced shipment notice for the shipment from the supplier."
                },
                "AvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to correct the parent transaction."
                },
                "BackToBack":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order."
                },
                "CategoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the category name."
                },
                "CategoryName":{
                    "maxLength":250,
                    "type":"string",
                    "description":"Name of the category that classifies the item. A category groups items that possess similar characteristics, such as plastics, paints, inks, foods, and so on."
                },
                "ConsignedItems":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the item is consigned. N: the item is not consigned."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency, such as USD."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use when determining the rates to use when calculating the currency conversion."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Rate to use when calculating the currency conversion."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Currency conversion type."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who purchases the product, typically for a fee."
                },
                "DestinationType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Destination type for the item on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the item on the transaction line. It determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DocumentDistributionNumber":{
                    "type":"number",
                    "description":"Distribution number for the document schedule. This attribute applies only for a purchase order or transfer order."
                },
                "DocumentLineNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Line number for the document number."
                },
                "DocumentNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document number that identifies one of the following: a purchase order number for a purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for a source document code of type RMA; the in-transit shipment number for a source document code of type INVENTORY; or the transfer order number for a source document code of type TRANSFER ORDER."
                },
                "DocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Schedule number for the document line number."
                },
                "DocumentType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee."
                },
                "EmployeeName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the person who performed the transaction."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advance shipment notices."
                },
                "GrandParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the grandparent transaction."
                },
                "InventoryTransactionTypeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory transaction type."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the item to receive. This item is any part, material, product, or service that contains unique attributes when compared to other items."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "LineStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Current status of the received line, such as Received, Delivered, or Inspected. The RCV_LINE_STATUS lookup defines the values that you can use with this attribute."
                },
                "Location":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Physical location of the warehouse that receives items."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the locator where the item currently resides."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction."
                },
                "ParentTransactionType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Transaction type of the parent transaction."
                },
                "Reason":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Describes the rationale for classifying a transaction."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the received line includes an exception. N: the received line does not include an exception."
                },
                "ReceiptNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the receipt of the shipment in the warehouse."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Source type of the shipment."
                },
                "Routing":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing name for the type of transaction entry that determines the steps that receive the item. The RCV_ROUTING_HEADERS lookup defines the values that you can use with this attribute."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving routing."
                },
                "SecondaryAvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to correct the parent transaction, using the secondary unit of measure."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure to use for the quantity that is available to correct the parent transaction."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure to use for the quantity that is available to correct the parent transaction."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory where the item currently resides."
                },
                "TOShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the transfer order shipment."
                },
                "ToOrganizationCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the ship-to organization of the received line."
                },
                "ToOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ship-to organization of the received line."
                },
                "TransactionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction finished."
                },
                "TransferOrderDistId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order distribution."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure to use for the quantity that is available to correct the parent transaction."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure to use for the quantity that is available to correct the parent transaction."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that the supplier uses to identify the item."
                },
                "VendorName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who provides a product in return for an item that might or might not require payment."
                },
                "VendorSiteCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the buying organization that conducts business with the supplier."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validateReceiveQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validateReceiveQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validateReceiveQuantities-item":{
            "properties":{
                "ASNLineNumber":{
                    "type":"string",
                    "description":"Line number of the advance shipment notice."
                },
                "DocumentLineNumber":{
                    "type":"string",
                    "description":"Line number for the document."
                },
                "DocumentNumber":{
                    "type":"string",
                    "description":"Document number that identifies one of the following: the purchase order number for a purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER."
                },
                "DocumentScheduleNumber":{
                    "type":"string",
                    "description":"Schedule number for the document."
                },
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Code attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Explanation attribute is empty."
                },
                "FromOrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the name of the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advance shipment notices."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "type":"string",
                    "description":"Number that identifies the item to receive. This item is any part, material, product, or service that contains unique attributes when compared to other items."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity recommended to receive."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies receipt advice line."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains one of the following values. SUCCESS: the application successfully validated the quantity for the transaction. ERROR: this validation failed. WARNING: the validation found a potential problem, but allows the transaction to continue."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Secondary quantity recommended to receive."
                },
                "SecondaryUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the secondary quantity recommended to receive."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "ShipmentNumber":{
                    "type":"string",
                    "description":"Number that identifies the shipment for an advance shipment notice or transfer order depending on the document type."
                },
                "SoldToLegalEntity":{
                    "type":"string",
                    "description":"Legal entity that is liable for the purchase order amount."
                },
                "SourceDocumentCode":{
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "SourceSystem":{
                    "type":"string",
                    "description":"Application that captures the source document for the order line. The source system identifies the trading partner systems that receiving uses, such as Order Management Cloud, the customer of a logistics service, or an order management system that resides outside of Oracle."
                },
                "ToOrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the ship-to organization."
                },
                "ToOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ship-to organization."
                },
                "UOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure."
                },
                "UnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the quantity recommended to receive."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "asnsForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/asnsForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "asnsForReceiving-item":{
            "properties":{
                "ASN":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Advanced shipment notice. Number that identifies the shipment of the item."
                },
                "OrganizationCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "type":"number",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header of the advanced shipment notice."
                },
                "Supplier":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the supplier that shipped the item."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validatePickedQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validatePickedQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validatePickedQuantities-item":{
            "properties":{
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Code attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Explanation attribute is empty."
                },
                "PickSlip":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the pick slip."
                },
                "PickSlipLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies one line on the pick slip."
                },
                "PickedQuantity":{
                    "type":"number",
                    "description":"Picked quantity to confirm in the primary unit of measure that the item uses."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains one of the following values. SUCCESS: the application successfully validated the quantity for the transaction. ERROR: this validation failed. WARNING: the validation found a potential problem, but allows the transaction to continue."
                },
                "SecondaryPickedQuantity":{
                    "type":"number",
                    "description":"Picked quantity to confirm in the secondary unit of measure that the item uses."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validateReturnQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validateReturnQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validateReturnQuantities-item":{
            "properties":{
                "ConsignedItems":{
                    "type":"string",
                    "description":"Contains Y or N. Y: the item is consigned. N: the item is not consigned."
                },
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Code attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Explanation attribute is empty."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies<br>the parent transaction to return."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity recommended to return."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains one of the following values. SUCCESS: the application successfully validated the quantity for the transaction. ERROR: this validation failed. WARNING: the validation found a potential problem, but allows the transaction to continue."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Secondary quantity recommended to return."
                },
                "SecondaryUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the secondary quantity recommended to return."
                },
                "SourceDocumentCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the <br>document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "UOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the <br>unit of measure."
                },
                "UnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the quantity recommended to return."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderActiveOperation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderActiveOperation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderActiveOperation-item":{
            "properties":{
                "ActualCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Actual finish date of the operation."
                },
                "ActualStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Actual start date of the operation."
                },
                "AutoTransactFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: If an operation occurs on the shop floor, then report it automatically in the application when the operation occurs. False: do not report this operation automatically. If the operation is not significant, then it is recommended that you set AutoTransactFlag to Y. The Count Point attribute and the Automatically Transact attribute are mutually exclusive. You must make sure that each of these attributes do not both contain Y. If Count Point and Automatically Transact each contain N, then the operation is optional. Note that the user can manually report component usage and resource usage for an optional operation.",
                    "title":"Automatically transact"
                },
                "CompletedQuantity":{
                    "type":"number",
                    "description":"Quantity that is finished for the operation.",
                    "title":"Completed"
                },
                "CountPointOperationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: make this operation a count point operation. If an operation occurs on the shop floor, then require the user to manually report it in the application when the operation occurs. False: do not make this operation a count point operation, and do not require the user to report the operation. It is recommended that you configure each work order so that it includes at least one count point operation, and to make sure that the last operation that the work order performs is a count point operation.",
                    "title":"Count Point"
                },
                "DelayStatus":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Delay status of the work order or work order operation. It contains one of the following values. 0: no delay; 1: a delay exists in starting the work order operation; 2: a delay exists in finishing the work order operation; 3: a delay exists in one or more of the work order operations."
                },
                "MaterialsCount":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Count of the components that the application requires to perform this operation."
                },
                "OperationDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the operation.",
                    "title":"Description"
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "PlannedCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to finish the operation. The scheduling application sets this date. The planned completion date must not occur before the start date of the work order or after the finish date of the work order. This attribute is required.",
                    "title":"Completion Date"
                },
                "PlannedStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to start the operation. The scheduling application sets this date. The planned start date must not occur before the start date of the work order or after the finish date of the work order. This attribute is required.",
                    "title":"Start Date"
                },
                "ReadyQuantity":{
                    "type":"number",
                    "description":"Quantity that is ready for the operation.",
                    "title":"Ready"
                },
                "RejectedQuantity":{
                    "type":"number",
                    "description":"Quantity rejected, if any, for the operation.",
                    "title":"Rejected"
                },
                "ResourcesCount":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Count of the resources that the application requires to perform this operation."
                },
                "ScrappedQuantity":{
                    "type":"number",
                    "description":"Quantity scrapped, if any, for the operation.",
                    "title":"Scrapped"
                },
                "SerialTrackingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: enforce serial tracking for the operation. False: do not enforce. The work definition that the work order references provides this value.",
                    "title":"Serialization"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the standard operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the standard operation that the work order references. It is a primary key that the application generates when it creates the standard operation."
                },
                "StandardOperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the standard operation.",
                    "title":"Name"
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the quantity uses for the operation.",
                    "title":"UOM"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work area.",
                    "title":"Description"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work center.",
                    "title":"Code"
                },
                "WorkCenterDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center.",
                    "title":"Description"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.",
                    "title":"Work Center"
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Number that identifies the work order. This number is unique in the manufacturing organization. The user can manually assign the number when the user creates the work order, or can allow the application to create a unique number from the numbering scheme that the following Plant parameters define: Work Order Prefix or Work Order Starting Number.",
                    "title":"Work Order"
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderAttachment":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderAttachment-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderAttachment-item":{
            "properties":{
                "AttachedDocumentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the attachment of a work order. It is a primary key that the application generates when a document is attached to the work order."
                },
                "CategoryName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the attachment.",
                    "title":"Category"
                },
                "ContentRepositoryFileShared":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the attachment is shared. False: the attachment is not shared.",
                    "title":"Shared"
                },
                "CreatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"User who created the attachment."
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the user created the attachment record."
                },
                "DatatypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the data type.",
                    "title":"Type"
                },
                "Description":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Description of the attachment.",
                    "title":"Description"
                },
                "DmFolderPath":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Folder path of the attachment."
                },
                "ErrorStatusCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error code, if any, for the attachment.",
                    "title":"Error Status Code"
                },
                "ErrorStatusMessage":{
                    "type":"string",
                    "description":"Error message, if any, for the attachment.",
                    "title":"Error Status Message"
                },
                "ExpirationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Expiration date of the contents in the attachment.",
                    "title":"Expiration Date"
                },
                "FileContents":{
                    "format":"binary",
                    "type":"string",
                    "description":"Contents of the attachment.",
                    "title":"File Contents"
                },
                "FileName":{
                    "maxLength":2048,
                    "type":"string",
                    "description":"File name of the attachment.",
                    "title":"File Name"
                },
                "FileUrl":{
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) of the attachment."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the user most recently updated the document that is attached to the work order.",
                    "title":"Last Update Date"
                },
                "LastUpdatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login of the user who most recently updated the document that is attached to the work order.",
                    "title":"Last Updated By"
                },
                "Title":{
                    "type":"string",
                    "description":"Title of the attachment.",
                    "title":"Title"
                },
                "UploadedFileContentType":{
                    "type":"string",
                    "description":"Content type of the attachment."
                },
                "UploadedFileLength":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Length of the attachment file.",
                    "title":"Size"
                },
                "UploadedFileName":{
                    "type":"string",
                    "description":"Name of the attachment file."
                },
                "UploadedText":{
                    "type":"string",
                    "description":"Text of the attachment."
                },
                "Uri":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URI (Uniform Resource Identifier) that identifies the attachment.",
                    "title":"Uri"
                },
                "Url":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) that locates the attachment."
                },
                "UserName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login that the user used when adding or modifying the attachment.",
                    "title":"Category Name"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the descriptive flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Abbreviations that identify each descriptive flexfield that is defined for the work order.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderDFF/{WorkOrderId2}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviations that identify each descriptive flexfield that is defined for the work order."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields that are defined for the work order."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "workOrders-WorkOrderMaterial":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderMaterial-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderMaterial-WorkOrderOperationMaterialAttachment":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialAttachment-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderMaterial-WorkOrderOperationMaterialAttachment-item":{
            "properties":{
                "AttachedDocumentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material attachment of a work order operation. It is a primary key that the application generates when a document is attached to the work order operation material."
                },
                "CategoryName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the attachment.",
                    "title":"Category"
                },
                "ContentRepositoryFileShared":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the attachment is shared. False: the attachment is not shared.",
                    "title":"Shared"
                },
                "CreatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"User who created the attachment."
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the application created the attachment record."
                },
                "DatatypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the data type.",
                    "title":"Type"
                },
                "Description":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Description of the attachment.",
                    "title":"Description"
                },
                "DmFolderPath":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Folder path to the attachment."
                },
                "ErrorStatusCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error code, if any, for the attachment.",
                    "title":"Error Status Code"
                },
                "ErrorStatusMessage":{
                    "type":"string",
                    "description":"Error message, if any, for the attachment.",
                    "title":"Error Status Message"
                },
                "ExpirationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Expiration date of the contents in the attachment.",
                    "title":"Expiration Date"
                },
                "FileContents":{
                    "format":"binary",
                    "type":"string",
                    "description":"Contents of the attachment.",
                    "title":"File Contents"
                },
                "FileName":{
                    "maxLength":2048,
                    "type":"string",
                    "description":"File name of the attachment.",
                    "title":"File Name"
                },
                "FileUrl":{
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) that locates the attachment."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the user most recently updated the document that is attached to the material.",
                    "title":"Last Update Date"
                },
                "LastUpdatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login of the user who most recently updated the document that is attached to the material for the work order operation.",
                    "title":"Last Updated By"
                },
                "Title":{
                    "type":"string",
                    "description":"Title of the attachment.",
                    "title":"Title"
                },
                "UploadedFileContentType":{
                    "type":"string",
                    "description":"Content type of the attachment."
                },
                "UploadedFileLength":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Length of the attachment file.",
                    "title":"Size"
                },
                "UploadedFileName":{
                    "type":"string",
                    "description":"Name of the attachment file."
                },
                "UploadedText":{
                    "type":"string",
                    "description":"Text of the attachment."
                },
                "Uri":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URI (Uniform Resource Identifier) that identifies the attachment.",
                    "title":"Uri"
                },
                "Url":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) that locates the attachment."
                },
                "UserName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login that the user used when adding or modifying the attachment.",
                    "title":"Category Name"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderMaterial-WorkOrderOperationMaterialDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderMaterial-WorkOrderOperationMaterialDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "WoOperationMaterialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the descriptive flex field."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Abbreviations that identify each descriptive flexfield that is defined for the material that the work order operation processes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial/{WorkOrderOperationMaterialId}/child/WorkOrderOperationMaterialDFF/{WoOperationMaterialId}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviations that identify each descriptive flexfield that is defined for the material that the work order operation processes."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields that are defined for the material that the work order operation processes."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "workOrders-WorkOrderMaterial-item":{
            "properties":{
                "BasisType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains 1 or 2. 1: the application does not consider the quantity of the work order when it sets the component quantity that it requires for the parent assembly 2: the application varies the component quantity that it requires for the parent assembly according to the quantity of the work order.",
                    "title":"Basis"
                },
                "IncludeInPlanningFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: planning considers the operation that processes the material when it plans supply. False: planning does not consider the operation that processes the material when it plans supply.",
                    "title":"Include in planning"
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates."
                },
                "InverseQuantity":{
                    "type":"number",
                    "description":"Inverse of the component quantity.",
                    "title":"Inverse"
                },
                "IssuedQuantity":{
                    "type":"number",
                    "description":"Net quantity of the material that the application issued for the operation.",
                    "title":"Issued Quantity"
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item.",
                    "title":"Item Description"
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Item number. If the material type is COMPONENT, then ItemNumber references the component to issue to the work order. If the material type is PRIMARY_PRODUCT, then ItemNumber references the assembly that is an output of the work order.",
                    "title":"Item"
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "MaterialSequenceNumber":{
                    "type":"number",
                    "description":"Unique sequence of the component assigned to the work order operation.",
                    "title":"Sequence"
                },
                "MaterialType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of material of the items or components that the work order operation references. It includes one of the following values. COMPONENT: the material that the application issued to the work order. PRIMARY_PRODUCT: the material is an assembly that is an output of this work order. ASSEMBLY_COMPONENT: the material is a component in the assembly that the application uses for the work order that performs the rework."
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation that processes the material.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Operation Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "ProducedQuantity":{
                    "type":"number",
                    "description":"Quantity of the assembly or parent that the plant put into inventory. The material type for this material is PRIMARY_PRODUCT."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Required component quantity.",
                    "title":"Required Quantity"
                },
                "QuantityPERProduct":{
                    "type":"number",
                    "description":"Quantity required to manufacture each unit of the product.",
                    "title":"Quantity per Product"
                },
                "RequiredDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the plant requires the materials so that it perform the operation. The required date must not occur before the operation start date, or after the operation completion date.",
                    "title":"Required Date"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the standard operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the standard operation that the work order references. It is a primary key that the application generates when it creates the standard operation."
                },
                "SupplyLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator. It is a primary key that the application generates when it creates the locator.",
                    "title":"Supply Locator"
                },
                "SupplySubinventory":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Subinventory to use, by default, when the plant draws material during assembly or an operation pull.",
                    "title":"Supply Subinventory"
                },
                "SupplyType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Consumption of the material. Values include Assembly pull, Operation pull, Push, Bulk, or Supplier.",
                    "title":"Supply Type"
                },
                "SupplyTypeDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the supply type."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure for the component quantity.",
                    "title":"UOM"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationMaterialAttachment":{
                    "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialAttachment",
                    "description":"The Attachments for Materials resource manages documents that the user attached to the materials that the work order operation processes.",
                    "title":"Material Attachments"
                },
                "WorkOrderOperationMaterialDFF":{
                    "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialDFF",
                    "description":"The Flexfields for operation materials resource manages descriptive flexfields that contain details about the materials that the work order operation processes.",
                    "title":"Material Flexfields"
                },
                "WorkOrderOperationMaterialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation."
                },
                "YieldFactor":{
                    "type":"number",
                    "description":"Factor to use when calculating the quantity that the operation requires to accommodate component waste when it processes the item. It is recommended that you set the yield to between 0 and 1. You can set the yield to a value that is greater than 1. The application considers the yield when it calculates the required quantity according to the Include plant parameter for the component yield.",
                    "title":"Item Yield"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderOperation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationAttachment":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationAttachment-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationAttachment-item":{
            "properties":{
                "AttachedDocumentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the attachment of a work order operation. It is a primary key that the application generates when a document is attached to the work order operation."
                },
                "CategoryName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the attachment.",
                    "title":"Category"
                },
                "ContentRepositoryFileShared":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the attachment is shared. False: the attachment is not shared.",
                    "title":"Shared"
                },
                "CreatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"User who created the attachment."
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the user created the attachment record."
                },
                "DatatypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the data type.",
                    "title":"Type"
                },
                "Description":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Description of the attachment.",
                    "title":"Description"
                },
                "DmFolderPath":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Folder path of the attachment."
                },
                "ErrorStatusCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error code, if any, for the attachment.",
                    "title":"Error Status Code"
                },
                "ErrorStatusMessage":{
                    "type":"string",
                    "description":"Error message, if any, for the attachment.",
                    "title":"Error Status Message"
                },
                "ExpirationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Expiration date of the contents in the attachment.",
                    "title":"Expiration Date"
                },
                "FileContents":{
                    "format":"binary",
                    "type":"string",
                    "description":"Contents of the attachment.",
                    "title":"File Contents"
                },
                "FileName":{
                    "maxLength":2048,
                    "type":"string",
                    "description":"File name of the attachment.",
                    "title":"File Name"
                },
                "FileUrl":{
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) of the attachment."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the user most recently updated the document that is attached to the work order operation.",
                    "title":"Last Update Date"
                },
                "LastUpdatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login of the user who updated the document that is attached to the work order operation.",
                    "title":"Last Updated By"
                },
                "Title":{
                    "type":"string",
                    "description":"Title of the attachment.",
                    "title":"Title"
                },
                "UploadedFileContentType":{
                    "type":"string",
                    "description":"Content type of the attachment."
                },
                "UploadedFileLength":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Length of the attachment file.",
                    "title":"Size"
                },
                "UploadedFileName":{
                    "type":"string",
                    "description":"Name of the attachment file."
                },
                "UploadedText":{
                    "type":"string",
                    "description":"Text of the attachment."
                },
                "Uri":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URI (Uniform Resource Identifier) that identifies the attachment.",
                    "title":"Uri"
                },
                "Url":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) that locates the attachment."
                },
                "UserName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login that the user used when adding or modifying the attachment.",
                    "title":"Category Name"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "WoOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the descriptive flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Abbreviations that identify each descriptive flexfield that is defined for the work order operation.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationDFF/{WoOperationId}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviations that identify each descriptive flexfield that is defined for the work order operation."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields that are defined for the work order operation."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationMaterial":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationMaterial-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationMaterial-item":{
            "properties":{
                "BasisType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains 1 or 2. 1: the application does not consider the quantity of the work order when it sets the component quantity that it requires for the parent assembly 2: the application varies the component quantity that it requires for the parent assembly according to the quantity of the work order.",
                    "title":"Basis"
                },
                "IncludeInPlanningFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: planning considers the operation that processes the material when it plans supply. False: planning does not consider the operation that processes the material when it plans supply.",
                    "title":"Include in planning"
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates."
                },
                "InverseQuantity":{
                    "type":"number",
                    "description":"Inverse of the Quantity Per Product. The application uses the inverse when the Quantity Per Product for the material is a fraction, but the inverse of this quantity is an integer.",
                    "title":"Inverse"
                },
                "IssuedQuantity":{
                    "type":"number",
                    "description":"Net quantity of the material that the application issued for the operation.",
                    "title":"Issued Quantity"
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the component.",
                    "title":"Item Description"
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Item number. If the material type is COMPONENT, then ItemNumber references the component to issue to the work order. If the material type is PRIMARY_PRODUCT, then ItemNumber references the assembly that is an output of the work order.",
                    "title":"Item"
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision number of the component."
                },
                "MaterialSequenceNumber":{
                    "type":"number",
                    "description":"Unique sequence of the component assigned to the work order operation.",
                    "title":"Sequence"
                },
                "MaterialType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of material of the items or components that the work order operation references. It includes one of the following values. COMPONENT: the material that the application issued to a work order. PRIMARY_PRODUCT: the material is an assembly that is an output of this work order. ASSEMBLY_COMPONENT: the material is a component in the assembly that the application uses for the work order that performs the rework."
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Operation Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "ProducedQuantity":{
                    "type":"number",
                    "description":"Quantity of the assembly or parent that the plant put into inventory. The material type for this material is PRIMARY_PRODUCT."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity for the operation that the plant requires to make the work order quantity. The application calculates this value depending on whether the Basis type is Fixed or Variable. Fixed: the Required Quantity equals the Quantity Per Product divided by the Yield. Variable: the Required Quantity equals the Quantity Per Product multiplied by the (Work Order Quantity divided by the Yield).",
                    "title":"Required Quantity"
                },
                "QuantityPERProduct":{
                    "type":"number",
                    "description":"Quantity required to make each unit of the product.",
                    "title":"Quantity per Product"
                },
                "RequiredDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the plant requires the materials so that it perform the operation. The required date must not occur before the operation start date, or after the operation completion date.",
                    "title":"Required Date"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the standard operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the standard operation that the work order references. It is a primary key that the application generates when it creates the standard operation."
                },
                "SupplyLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator. It is a primary key that the application generates when it creates the locator.",
                    "title":"Supply Locator"
                },
                "SupplySubinventory":{
                    "maxLength":20,
                    "type":"string",
                    "description":"Subinventory to use, by default, when the plant draws material during assembly or an operation pull.",
                    "title":"Supply Subinventory"
                },
                "SupplyType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Consumption of the material. Values include Assembly pull, Operation pull, Push, Bulk, or Supplier.",
                    "title":"Supply Type"
                },
                "SupplyTypeDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the supply type."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the item uses. It is the primary unit of measure.",
                    "title":"UOM"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationMaterialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation."
                },
                "YieldFactor":{
                    "type":"number",
                    "description":"Factor to use when calculating the quantity that the operation requires to accommodate component waste when it processes the item. It is recommended that you set the yield to between 0 and 1. You can set the yield to a value that is greater than 1. The application considers the yield when it calculates the required quantity according to the Include plant parameter for the component yield.",
                    "title":"Item Yield"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationResource":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationResource-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationResource-item":{
            "properties":{
                "ActualResourceUsage":{
                    "type":"number",
                    "description":"Net actual usage of the assigned resource.",
                    "title":"Actual Resource Usage"
                },
                "AssignedUnits":{
                    "type":"number",
                    "description":"Number of resource units the application assigns to perform the operation.",
                    "title":"Assigned Units"
                },
                "BasisType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains 1 or 2. 1: the resource consumption is fixed. It does not change according to work order quantity. 2: the resource consumption is not fixed. It might change according to work order quantity.",
                    "title":"Basis"
                },
                "ChargeType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Determines whether or not the user charges the resources or the application charges the resource when completing the operation.",
                    "title":"Charge Type"
                },
                "InverseRequiredUsage":{
                    "type":"number",
                    "description":"Inverse of the Usage Rate. The application uses this inverse when the resource usage rate is a fraction, but the inverse of this rate is an integer.",
                    "title":"Inverse"
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Operation Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "PhantomFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the resource that this operation uses a phantom. False: this resource is not a phantom."
                },
                "PlannedCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to finish the resource. The scheduling application sets this date. The planned completion date must not occur before the operation start date or after the operation finish date. This attribute is required.",
                    "title":"Completion Date"
                },
                "PlannedStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to start the resource. The scheduling application sets this date. The planned start date must not occur before the operation start date or after the operation finish date. This attribute is required.",
                    "title":"Start Date"
                },
                "PrincipalFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: This resource is the principal resource among the group of simultaneous resources. False: This resource is not the principal resource. Note that one of the simultaneous resources must be a principal resource.",
                    "title":"Principal"
                },
                "RequiredUsage":{
                    "type":"number",
                    "description":"Resource usage that the plant requires to make the work order quantity. The application calculates this value depending on whether the Basis type is fixed or variable. Fixed: the Required Usage equals the Usage Rate. Variable: the Required Usage equals the Usage Rate multiplied by the Work Order Quantity.",
                    "title":"Required Usage"
                },
                "ResourceActivityCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the resource activity.",
                    "title":"Activity"
                },
                "ResourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the resource.",
                    "title":"Code"
                },
                "ResourceDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the resource.",
                    "title":"Description"
                },
                "ResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the resource. It is a primary key that the application generates when it creates the resource."
                },
                "ResourceName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the resource.",
                    "title":"Name"
                },
                "ResourceSequenceNumber":{
                    "type":"number",
                    "description":"Number that the application uses to determine the step in the sequence it must use to make sure resources work together correctly to finish the operation. If multiple resource lines include the same resource sequence number, then the application schedules them to occur at the same time.",
                    "title":"Sequence"
                },
                "ResourceType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the resource. Values include Labor or Equipment.",
                    "title":"Type"
                },
                "ScheduledIndicator":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: scheduling schedules the resource and computes the start date and completion dates. No: scheduling does not schedule the resource, and it sets start date equal to the completion date.",
                    "title":"Scheduled"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the standard operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the standard operation that the work order references. It is a primary key that the application generates when it creates the standard operation."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the resource uses.",
                    "title":"UOM"
                },
                "UsageRate":{
                    "type":"number",
                    "description":"Resource usage that the plant requires to make each unit of the product.",
                    "title":"Usage Rate"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work area.",
                    "title":"Description"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work center.",
                    "title":"Code"
                },
                "WorkCenterDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center.",
                    "title":"Description"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationSerialNumber":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationSerialNumber-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-WorkOrderOperationSerialNumber-item":{
            "properties":{
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates."
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Operation Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number that identifies the assembly that this operation references."
                },
                "SerialStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status of the serial number that identifies the assembly that that this operation references."
                },
                "SerialStatusDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the status of the serial number.",
                    "title":"Meaning"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the standard operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the standard operation that the work order references. It is a primary key that the application generates when it creates the standard operation."
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationMaterialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation."
                },
                "WorkOrderProductSerialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the product serial in the work order. It is a primary key that the application generates when it creates the serial number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderOperation-item":{
            "properties":{
                "ActualCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Actual finish date of the operation."
                },
                "ActualStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Actual start date of the operation."
                },
                "AutoTransactFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: If an operation occurs on the shop floor, then report it automatically in the application when the operation occurs. False: do not report this operation automatically. If the operation is not significant, then it is recommended that you set AutoTransactFlag to Y. The Count Point attribute and the Automatically Transact attribute are mutually exclusive. You must make sure that each of these attributes do not both contain Y. If Count Point and Automatically Transact each contain N, then the operation is optional. Note that the user can manually report component usage and resource usage for an optional operation.",
                    "title":"Automatically transact"
                },
                "CompletedQuantity":{
                    "type":"number",
                    "description":"Quantity finished for the operation.",
                    "title":"Completed"
                },
                "CountPointOperationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: make this operation a count point operation. If an operation occurs on the shop floor, then require the user to manually report it in the application when the operation occurs. False: do not make this operation a count point operation, and do not require the user to report the operation. It is recommended that you configure each work order so that it includes at least one count point operation, and to make sure that the last operation that the work order performs is a count point operation.",
                    "title":"Count Point"
                },
                "DelayStatus":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Delay status of the work order or work order operation. It contains one of the following values. 0: no delay; 1: a delay exists in starting the work order operation; 2: a delay exists in finishing the work order operation; 3: a delay exists in one or more of the work order operations."
                },
                "MaterialsCount":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Count of the components that the application requires for this operation."
                },
                "OperationDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the operation.",
                    "title":"Description"
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "PlannedCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to finish the operation. The scheduling application sets this date. The planned completion date must not occur before the start date of the work order or after the finish date of the work order. This attribute is required.",
                    "title":"Completion Date"
                },
                "PlannedStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to start the operation. The scheduling application sets this date. The planned start date must not occur before the start date of the work order or after the finish date of the work order. This attribute is required.",
                    "title":"Start Date"
                },
                "ReadyQuantity":{
                    "type":"number",
                    "description":"Quantity that is ready for the operation.",
                    "title":"Ready"
                },
                "RejectedQuantity":{
                    "type":"number",
                    "description":"Quantity rejected, if any, for the operation.",
                    "title":"Rejected"
                },
                "ResourcesCount":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Count of the resources that the application requires for this operation."
                },
                "ScrappedQuantity":{
                    "type":"number",
                    "description":"Quantity scrapped, if any, for the operation.",
                    "title":"Scrapped"
                },
                "SerialTrackingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: enforce serial tracking for the operation. False: do not enforce. The work definition that the work order references provides this value.",
                    "title":"Serialization"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the operation that the work order references. It is a primary key that the application generates when it creates the operation."
                },
                "StandardOperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation.",
                    "title":"Name"
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the quantity uses for the operation.",
                    "title":"UOM"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work area.",
                    "title":"Description"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work center.",
                    "title":"Code"
                },
                "WorkCenterDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center.",
                    "title":"Description"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.",
                    "title":"Work Center"
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Number that identifies the work order. This number is unique in the manufacturing organization. The user can manually assign the number when the user creates the work order, or can allow the application to create a unique number from the numbering scheme that the following plant parameters define: Work Order Prefix or Work Order Starting Number.",
                    "title":"Work Order"
                },
                "WorkOrderOperationAttachment":{
                    "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationAttachment",
                    "description":"The Attachments for Operations resource manages documents that the user attached to the operation that the work order performs.",
                    "title":"Operation Attachments"
                },
                "WorkOrderOperationDFF":{
                    "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationDFF",
                    "description":"The Flexfields for Operations resource manages descriptive flexfields that each work order operation references.",
                    "title":"Operation Flexfields"
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationMaterial":{
                    "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationMaterial",
                    "description":"The Materials for Operations resource manages materials that the work order operation processes, including material requirements.",
                    "title":"Materials"
                },
                "WorkOrderOperationResource":{
                    "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationResource",
                    "description":"The Resources for Operations resource manages resources that the work order operation processes, including resource requirements.",
                    "title":"Operation Resources"
                },
                "WorkOrderOperationSerialNumber":{
                    "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationSerialNumber",
                    "description":"The Serials for Operations resource manages the work order operation for the serial.",
                    "title":"Operation Serials"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderReservation":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderReservation-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderReservation-item":{
            "properties":{
                "CustomerName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the customer on the demand source document."
                },
                "DemandSourceHeaderNumber":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Header number of the demand document that references the work order."
                },
                "DemandSourceLineNumber":{
                    "maxLength":1201,
                    "type":"string",
                    "description":"Document type of the demand. This type is typically a sales order."
                },
                "DemandSourceTypeName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the source where the demand originated."
                },
                "DueDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date that the demand source document is due."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "ReservationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the reservation of the work order quantity for the demand. It is a primary key that the application generates when it creates the reservation."
                },
                "ReservationQuantity":{
                    "type":"number",
                    "description":"Quantity of the work order that the application reserves for each demand document."
                },
                "ReservationUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Primary unit of measure that the quantity reserved uses."
                },
                "SupplySourceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the document header in the demand source."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderResource":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderResource-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderResource-WorkOrderOperationResourceAttachment":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceAttachment-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderResource-WorkOrderOperationResourceAttachment-item":{
            "properties":{
                "AttachedDocumentId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the resource attachment of a work order operation. It is a primary key that the application generates when a document is attached to the resource that a work order operation uses."
                },
                "CategoryName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the attachment.",
                    "title":"Category"
                },
                "ContentRepositoryFileShared":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the attachment is shared. False: the attachment is not shared.",
                    "title":"Shared"
                },
                "CreatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"User who created the attachment."
                },
                "CreationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the user created the attachment record."
                },
                "DatatypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that indicates the data type.",
                    "title":"Type"
                },
                "Description":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Description of the attachment.",
                    "title":"Description"
                },
                "DmFolderPath":{
                    "maxLength":1000,
                    "type":"string",
                    "description":"Folder path of the attachment."
                },
                "ErrorStatusCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the error code, if any, for the attachment.",
                    "title":"Error Status Code"
                },
                "ErrorStatusMessage":{
                    "type":"string",
                    "description":"Error message, if any, for the attachment.",
                    "title":"Error Status Message"
                },
                "ExpirationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Expiration date of the contents in the attachment.",
                    "title":"Expiration Date"
                },
                "FileContents":{
                    "format":"binary",
                    "type":"string",
                    "description":"Contents of the attachment.",
                    "title":"File Contents"
                },
                "FileName":{
                    "maxLength":2048,
                    "type":"string",
                    "description":"File name of the attachment.",
                    "title":"File Name"
                },
                "FileUrl":{
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) of the attachment."
                },
                "LastUpdateDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the user most recently updated the document that is attached to the resource.",
                    "title":"Last Update Date"
                },
                "LastUpdatedBy":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login of the user who most recently updated the document that is attached to resource for the work order operation.",
                    "title":"Last Updated By"
                },
                "Title":{
                    "type":"string",
                    "description":"Title of the attachment.",
                    "title":"Title"
                },
                "UploadedFileContentType":{
                    "type":"string",
                    "description":"Content type of the attachment."
                },
                "UploadedFileLength":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Length of the attachment file.",
                    "title":"Size"
                },
                "UploadedFileName":{
                    "type":"string",
                    "description":"Name of the attachment file."
                },
                "UploadedText":{
                    "type":"string",
                    "description":"Text of the attachment."
                },
                "Uri":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URI (Uniform Resource Identifier) that identifies the attachment.",
                    "title":"Uri"
                },
                "Url":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"URL (Uniform Resource Locator) that locates the attachment."
                },
                "UserName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Login that the user used when adding or modifying the attachment.",
                    "title":"Category Name"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderResource-WorkOrderOperationResourceDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderResource-WorkOrderOperationResourceDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "WoOperationResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies a resource of a work order operation. It is a primary key that the application generates when it creates the work order operation resource."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the descriptive flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Abbreviations that identify each descriptive flexfield that is defined for the resource that the work order operation processes.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource/{WorkOrderOperationResourceId}/child/WorkOrderOperationResourceDFF/{WoOperationResourceId}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviations that identify each descriptive flexfield that is defined for the resource that the work order operation processes."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields that are defined for the resource that the work order operation processes."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "workOrders-WorkOrderResource-item":{
            "properties":{
                "ActualResourceUsage":{
                    "type":"number",
                    "description":"Net actual usage of the assigned resource.",
                    "title":"Actual Resource Usage"
                },
                "AssignedUnits":{
                    "type":"number",
                    "description":"Number of resource units the application assigns to perform the operation.",
                    "title":"Assigned Units"
                },
                "BasisType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains 1 or 2. 1: the resource consumption is fixed. It does not change according to work order quantity. 2: the resource consumption is not fixed. It might change according to work order quantity.",
                    "title":"Basis"
                },
                "ChargeType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Determines whether or not the user charges the resources or the application charges the resource when completing the operation.",
                    "title":"Charge Type"
                },
                "InverseRequiredUsage":{
                    "type":"number",
                    "description":"Inverse of the Usage Rate. The application uses this inverse when the resource usage rate is a fraction, but the inverse of this rate is an integer.",
                    "title":"Inverse"
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation that processes the resource.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations.",
                    "title":"Operation Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "PhantomFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the resource that this operation uses a phantom. False: this resource is not a phantom."
                },
                "PlannedCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to finish creating the resource. The scheduling application sets this date. The planned completion date must not occur before the operation start date or after the operation finish date. This attribute is required.",
                    "title":"Completion Date"
                },
                "PlannedStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Planned date and time to start creating the resource. The scheduling application sets this date. The planned start date must not occur before the operation start date or after the operation finish date. This attribute is required.",
                    "title":"Start Date"
                },
                "PrincipalFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: This resource is the principal resource among the group of simultaneous resources. False: This resource is not the principal resource. Note that one of the simultaneous resources must be a principal resource.",
                    "title":"Principal"
                },
                "RequiredUsage":{
                    "type":"number",
                    "description":"Resource usage that the plant requires to make the work order quantity. The application calculates this value depending on whether the Basis type is fixed or variable. Fixed: the Required Usage equals the Usage Rate. Variable: the Required Usage equals the Usage Rate multiplied by the Work Order Quantity.",
                    "title":"Required Usage"
                },
                "ResourceActivityCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the resource activity.",
                    "title":"Activity"
                },
                "ResourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the resource.",
                    "title":"Code"
                },
                "ResourceDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the resource.",
                    "title":"Description"
                },
                "ResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the resource. It is a primary key that the application generates when it creates the resource."
                },
                "ResourceName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the resource.",
                    "title":"Name"
                },
                "ResourceSequenceNumber":{
                    "type":"number",
                    "description":"Number that the application uses to determine the step in the sequence it must use to make sure resources work together correctly to finish the operation. If multiple resource lines include the same resource sequence number, then the application schedules them to occur at the same time.",
                    "title":"Sequence"
                },
                "ResourceType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Category of the resource. Values include Labor or Equipment.",
                    "title":"Type"
                },
                "ScheduledIndicator":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: scheduling schedules the resource and computes the start date and completion dates. No: scheduling does not schedule the resource, and it sets start date equal to the completion date.",
                    "title":"Scheduled"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the standard operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the standard operation that the work order references. It is a primary key that the application generates when it creates the standard operation."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the resource uses.",
                    "title":"UOM"
                },
                "UsageRate":{
                    "type":"number",
                    "description":"Resource usage that the plant requires to make each unit of the product.",
                    "title":"Usage Rate"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work area.",
                    "title":"Description"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work center.",
                    "title":"Code"
                },
                "WorkCenterDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work center.",
                    "title":"Description"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationResourceAttachment":{
                    "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceAttachment",
                    "description":"The Attachments for Resources resource manages details about the documents that the user attached to the resources that the work order operations use.",
                    "title":"Resource Attachments"
                },
                "WorkOrderOperationResourceDFF":{
                    "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceDFF",
                    "description":"The Flexfields for Resources resource manages descriptive flexfields that contain details about the resources that the work order operations use.",
                    "title":"Resource Flexfields"
                },
                "WorkOrderOperationResourceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderSerialNumber":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workOrders-WorkOrderSerialNumber-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workOrders-WorkOrderSerialNumber-item":{
            "properties":{
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates."
                },
                "OperationName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the operation that references this serial number.",
                    "title":"Name"
                },
                "OperationSequenceNumber":{
                    "type":"number",
                    "description":"Sequence to use when performing the work order operations that reference this serial number.",
                    "title":"Operation Sequence"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates an inventory organization."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number that the work order product references."
                },
                "SerialStatus":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status of the serial number."
                },
                "SerialStatusDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the status of the serial number.",
                    "title":"Meaning"
                },
                "StandardOperationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the operation.",
                    "title":"Code"
                },
                "StandardOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the operation that the work order references. It is a primary key that the application generates when it creates the operation."
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "WorkCenterId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center."
                },
                "WorkCenterName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work center.",
                    "title":"Name"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order that this serial number references. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderOperationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation."
                },
                "WorkOrderOperationMaterialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation."
                },
                "WorkOrderProductSerialId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the product serial in the work order. It is a primary key that the application generates when it creates the serial number."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-item":{
            "properties":{
                "ActualCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Actual finish date of the work order. This date occurs when the work order status changes to Completed.",
                    "title":"Actual Completion Date"
                },
                "ActualStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Actual start date of the work order.",
                    "title":"Actual Start Date"
                },
                "BackToBackFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the work order was created as part of the back-to-back flow. False: the work order was not created as part of the back-to-back flow.",
                    "title":"Back to back"
                },
                "CanceledDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the application canceled the work order.",
                    "title":"Canceled Date"
                },
                "CanceledReason":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reason for canceling the work order.",
                    "title":"Canceled Reason"
                },
                "ClosedDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the application closed the work order.",
                    "title":"Closed Date"
                },
                "CmPOHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header. It is a primary key that the application generates when it creates the purchase order header.",
                    "title":"Purchase Order"
                },
                "CmPOLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line. It is a primary key that the application generates when it creates the purchase order line.",
                    "title":"Purchase Order Line"
                },
                "CmPOLineLocId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line schedule. It is a primary key that the application generates when it creates the purchase order line schedule.",
                    "title":"Purchase Order Schedule"
                },
                "CompletedQuantity":{
                    "type":"number",
                    "description":"Work order quantity that the application finished on the last operation and put into inventory.",
                    "title":"Completed Quantity"
                },
                "CompletionLocator":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Completion locator to use, by default, when considering the work order for product completion."
                },
                "CompletionLocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator. It is a primary key that the application generates when it creates the locator.",
                    "title":"Completion Locator"
                },
                "CompletionSubinventoryCode":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Completion subinventory to use, by default, when considering the work order for product completion.",
                    "title":"Completion Subinventory"
                },
                "ContractMfgFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the work order was created as part of the contract manufacturing flow. False: the work order was not created as part of the contract manufacturing flow.",
                    "title":"Contract manufacturing"
                },
                "DelayStatus":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Delay status of the work order. It contains one of the following values. 0: no delay; 1: a delay exists in starting the work order; 2: a delay exists in finishing the work order; 3: a delay exists in one or more of the work order operations."
                },
                "Description":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item.",
                    "title":"Item Description"
                },
                "FirmPlannedFlag":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains True or False. True: prevent the planning system from suggesting changes to the work order. False: do not prevent.",
                    "title":"Firm"
                },
                "InterfaceSourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the interface source."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates.",
                    "title":"Item"
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Item number that is an output of the work order.",
                    "title":"Item"
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item that is in effect according to the work definition date of the work order.",
                    "title":"Revision"
                },
                "ItemStructureName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the item structure that the work definition on the work order references.",
                    "title":"Name"
                },
                "NettableSupplyQuantityOverride":{
                    "type":"number",
                    "description":"Quantity that the planning system uses as supply for the work order.",
                    "title":"Nettable Quantity"
                },
                "OrchestrationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the orchestration process that created the work order."
                },
                "OrderLessFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the application created the work order as part of an orderless flow. False: the application did not create the work order as part of an orderless flow."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the inventory organization that the application enables for manufacturing.",
                    "title":"Organization"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization that the application enabled for manufacturing. It is a primary key that the application generates when it creates the inventory organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the inventory organization that the application enables for manufacturing.",
                    "title":"Organization Name"
                },
                "OvercomplToleranceType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Tolerance type for completing more work than the work order quantity requires.",
                    "title":"Over Completion Tolerance Type"
                },
                "OvercomplToleranceTypeDescription":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Description of the tolerance type for the over-completion."
                },
                "OvercomplToleranceValue":{
                    "type":"number",
                    "description":"Percent or quantity to allow the finished work to exceed the work order quantity.",
                    "title":"Over Completion Tolerance Value"
                },
                "PlannedCompletionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Scheduled date and time to finish the work order.",
                    "title":"Completion Date"
                },
                "PlannedStartDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Scheduled date and time to start the work order.",
                    "title":"Start Date"
                },
                "PlannedStartQuantity":{
                    "type":"number",
                    "description":"Planned production quantity for the work order.",
                    "title":"Quantity"
                },
                "RejectedQuantity":{
                    "type":"number",
                    "description":"Total rejected quantity across all operations for the work order.",
                    "title":"Rejected Quantity"
                },
                "ReleasedDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when the application released the work order.",
                    "title":"Released Date"
                },
                "SchedulingMethod":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Scheduling method that the application uses to schedule the work order."
                },
                "ScoSupplyOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supply order in the orchestration module of the supply chain. It is a primary key that the application generates when it creates the supply order."
                },
                "ScrappedQuantity":{
                    "type":"number",
                    "description":"Total scrapped quantity across all operations for the work order.",
                    "title":"Scrapped Quantity"
                },
                "SerialTrackingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: enforce serial tracking for the work order. False: do not enforce. The work definition that the work order references provides this value.",
                    "title":"Serial tracked production"
                },
                "SourceHeaderReference":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reference to the work order header in the source system.",
                    "title":"Source Header Reference"
                },
                "SourceHeaderReferenceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order header in the source system."
                },
                "SourceLineReference":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Reference to the work order line in the source system.",
                    "title":"Source Line Reference"
                },
                "SourceLineReferenceId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order line in the source system."
                },
                "SourceSystemId":{
                    "type":"number",
                    "description":"Value that uniquely identifies the source system.",
                    "title":"Source System"
                },
                "SourceSystemType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of source system. Values include INTERNAL or EXTERNAL. It is recommended that the client specify EXTERNAL.",
                    "title":"Source System Type"
                },
                "SupplyType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Default supply type to use for the work order components.",
                    "title":"Default Supply Type"
                },
                "SupplyTypeDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the supply type."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the quantity uses for the item that the work order manufactures. It is the primary unit of measure.",
                    "title":"UOM"
                },
                "WorkDefinitionAsOfDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"As-of date that the work definition uses to determine the work definition version.",
                    "title":"Date"
                },
                "WorkDefinitionCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work definition."
                },
                "WorkDefinitionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work definition.",
                    "title":"Work Definition"
                },
                "WorkDefinitionName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Work definition that the work order uses to examine the operation, material, and resource requirements.",
                    "title":"Work Definition"
                },
                "WorkDefinitionVersionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work definition version.",
                    "title":"Version"
                },
                "WorkDefinitionVersionNumber":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Version number of the work definition used in the work order.",
                    "title":"Version"
                },
                "WorkMethodCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the manufacturing method that the work order uses."
                },
                "WorkMethodId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work method. It is a primary key that the application generates when it creates the work method.",
                    "title":"Work Method"
                },
                "WorkOrderActiveOperation":{
                    "$ref":"#/definitions/workOrders-WorkOrderActiveOperation",
                    "description":"The Active Operations for Work Orders resource manages each active operation. An active operation is an operation that contains a quantity that is greater than zero.",
                    "title":"Active Operations"
                },
                "WorkOrderAttachment":{
                    "$ref":"#/definitions/workOrders-WorkOrderAttachment",
                    "description":"The Work Order Attachments resource manages documents that the user attached to the work order.",
                    "title":"Attachments"
                },
                "WorkOrderDFF":{
                    "$ref":"#/definitions/workOrders-WorkOrderDFF",
                    "description":"The Work Order Flexfields resource manages the descriptive flexfields that the work order references.",
                    "title":"Flexfields"
                },
                "WorkOrderDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"If the work order status is Unreleased, then the work order date is equal to the planned start date of the work order. If the work order status is not Unreleased, then the work order date is equal to the planned completion date. This is a calculated attribute."
                },
                "WorkOrderDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work order.",
                    "title":"Description"
                },
                "WorkOrderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order."
                },
                "WorkOrderMaterial":{
                    "$ref":"#/definitions/workOrders-WorkOrderMaterial",
                    "description":"The Work Order Materials resource manages materials that the operations use to process the work order.",
                    "title":"Materials"
                },
                "WorkOrderNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Number that identifies the work order. This number is unique in the manufacturing organization. The user can manually assign the number when the user creates the work order, or can allow the application to create a unique number from the numbering scheme that the following Plant parameters define: Work Order Prefix or Work Order Starting Number.",
                    "title":"Work Order"
                },
                "WorkOrderOperation":{
                    "$ref":"#/definitions/workOrders-WorkOrderOperation",
                    "description":"The Work Order Operations resource manages the operations that the application performs to process the work order.",
                    "title":"Operations"
                },
                "WorkOrderPriority":{
                    "type":"number",
                    "description":"Priority to use when determining when to run the work order in relation to other work orders.",
                    "title":"Priority"
                },
                "WorkOrderReservation":{
                    "$ref":"#/definitions/workOrders-WorkOrderReservation",
                    "description":"The Work Order Reservations resource manages the demand documents that the application uses to reserve the output quantity for the work order.",
                    "title":"Reservations"
                },
                "WorkOrderResource":{
                    "$ref":"#/definitions/workOrders-WorkOrderResource",
                    "description":"The Work Order Resources resource manages resources that the operations use to process the work order.",
                    "title":"Resources"
                },
                "WorkOrderSerialNumber":{
                    "$ref":"#/definitions/workOrders-WorkOrderSerialNumber",
                    "description":"The Work Order Serials resource manages serial numbers that identifiy the assemblies that the work order references.",
                    "title":"Serials"
                },
                "WorkOrderStatusCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the work order status."
                },
                "WorkOrderStatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work order status. Values include Unreleased, Released, On Hold, Completed, Closed, or Canceled.",
                    "title":"Status"
                },
                "WorkOrderStatusName":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Name of the work order status.",
                    "title":"Work Order Status"
                },
                "WorkOrderSubType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Description of the work being performed, such as Standard Production, Prototyping, or Repair.",
                    "title":"Subtype"
                },
                "WorkOrderSubTypeDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the work order subtype.",
                    "title":"Meaning"
                },
                "WorkOrderSystemStatusCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work order status. The system references the work order status to determine the abbreviation to display.",
                    "title":"System Status Code"
                },
                "WorkOrderType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of work order that the user selected when creating the work order.",
                    "title":"Type"
                },
                "WorkOrderTypeDescription":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the work order type.",
                    "title":"Meaning"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "workOrders-midpointRescheduleWorkOrderOperationRequest":{
            "properties":{
                "name":{
                    "type":"string",
                    "enum":[
                        "midpointRescheduleWorkOrderOperation"
                    ],
                    "description":"This parameter value must be set to \"midpointRescheduleWorkOrderOperation\"."
                },
                "parameters":{
                    "items":[
                        {
                            "properties":{
                                "operationId":{
                                    "format":"int64",
                                    "type":"integer",
                                    "description":"Value that uniquely identifies the work order operation that anchors rescheduling."
                                }
                            },
                            "additionalProperties":false,
                            "type":"object"
                        },
                        {
                            "properties":{
                                "scheduleOption":{
                                    "format":"int64",
                                    "type":"integer",
                                    "description":"Contains one of the following values. 1: assign the scheduleDate to the start date for the anchor operation. 2: assign the scheduleDate to the completion date for the anchor operation."
                                }
                            },
                            "additionalProperties":false,
                            "type":"object"
                        },
                        {
                            "properties":{
                                "scheduleDate":{
                                    "format":"date-time",
                                    "type":"string",
                                    "description":"Schedule date for the action of the operation that the application is anchoring. This date is one of the following values. 1: if the scheduling option equals the operation start date, then the application sets the schedule date to the operation start date. 2: if the the scheduling option equals the operation completion date, then the application sets the schedule date to the operation completion date."
                                }
                            },
                            "additionalProperties":false,
                            "type":"object"
                        }
                    ],
                    "minItems":3,
                    "maxItems":3,
                    "type":"array"
                }
            },
            "type":"object"
        },
        "workOrders-midpointRescheduleWorkOrderOperationResponse":{
            "properties":{
                "return":{
                    "type":"string",
                    "description":"If the action completes successfully, then midpointRescheduleWorkOrderOperation returns the identification of the work order."
                }
            },
            "type":"object"
        },
        "workAreas":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workAreas-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workAreas-WorkAreaDFF":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/workAreas-WorkAreaDFF-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "workAreas-WorkAreaDFF-item":{
            "properties":{
                "ObjectVersionNumber":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Object version number that the descriptive flexfield references."
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. You can use a flexfield with this resource. A flexfield is a flexible data field that your organization can use to modify your implementation without having to write programming code."
                },
                "_FLEX_NumOfSegments":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of segments in the descriptive flexfield."
                },
                "__FLEX_Context":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the descriptive flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"Context codes that the descriptive flexfields reference.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/manufacturingApi/resources/11.12.1.0/workAreas/{WorkAreaId}/child/WorkAreaDFF/{WorkAreaId2}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Context codes that the descriptive flexfields reference."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Names of the descriptive flexfields."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "workAreas-item":{
            "properties":{
                "InactiveDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the work area becomes inactive.",
                    "title":"Inactive On"
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the inventory organization.",
                    "title":"Organization"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization. It is a primary key that the application generates when it creates an inventory organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the inventory organization.",
                    "title":"Organization Name"
                },
                "WorkAreaCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the work area.",
                    "title":"Code"
                },
                "WorkAreaDFF":{
                    "$ref":"#/definitions/workAreas-WorkAreaDFF",
                    "description":"The Flexfields for Work Areas resource manages the names of the descriptive flexfields that a work area references.",
                    "title":"Flexfields for Work Areas"
                },
                "WorkAreaDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the work area.",
                    "title":"Description"
                },
                "WorkAreaId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates a work area."
                },
                "WorkAreaName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the work area.",
                    "title":"Name"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inTransitReceiptSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inTransitReceiptSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inTransitReceiptSerials-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Serial numbers that reference items that are in receiving and in transit."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "onhandQuantityDetails":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/onhandQuantityDetails-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "onhandQuantityDetails-ConsignedQuantityDetails":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/onhandQuantityDetails-ConsignedQuantityDetails-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "onhandQuantityDetails-ConsignedQuantityDetails-item":{
            "properties":{
                "ConsignedQuantity":{
                    "type":"number",
                    "description":"Consigned quantity for the item."
                },
                "PartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the owning party."
                },
                "PartyNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the owning party."
                },
                "PartyType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of the owning party. This attribute can contain only Person, Organization, or Group."
                },
                "SecondaryConsignedQuantity":{
                    "type":"number",
                    "description":"Secondary consigned quantity for the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "onhandQuantityDetails-InboundQuantityDetails":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/onhandQuantityDetails-InboundQuantityDetails-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "onhandQuantityDetails-InboundQuantityDetails-item":{
            "properties":{
                "DocumentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Document number that identifies the inbound shipment."
                },
                "DocumentType":{
                    "type":"string",
                    "description":"Type of document."
                },
                "InboundQuantity":{
                    "type":"number",
                    "description":"Inbound quantity for the item."
                },
                "LineNumber":{
                    "type":"number",
                    "description":"Line number that references the inbound shipment."
                },
                "Schedule":{
                    "type":"string",
                    "description":"Schedule for the shipment."
                },
                "SecondaryInboundQuantity":{
                    "type":"number",
                    "description":"Secondary inbound quantity for the item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "onhandQuantityDetails-item":{
            "properties":{
                "ConsignedQuantity":{
                    "type":"number",
                    "description":"Consigned quantity for the item."
                },
                "ConsignedQuantityDetails":{
                    "$ref":"#/definitions/onhandQuantityDetails-ConsignedQuantityDetails",
                    "description":"The Consigned Quantity Details resource uses information about the item and inventory location that you provide to get details about the consigned quantities in the primary UOM or secondary UOM.",
                    "title":"Consigned Quantity Details"
                },
                "InboundQuantity":{
                    "type":"number",
                    "description":"Inbound quantity for the item."
                },
                "InboundQuantityDetails":{
                    "$ref":"#/definitions/onhandQuantityDetails-InboundQuantityDetails",
                    "description":"The Inbound Quantity Details resource uses information about the item and inventory location that you provide to get details about the inbound quantities in the primary UOM or secondary UOM.",
                    "title":"Inbound Quantity Details"
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the inventory item."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "LotNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Lot number of the inventory item."
                },
                "OnhandQuantity":{
                    "type":"number",
                    "description":"On-hand quantity for the item."
                },
                "OrganizationCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OwningOrganization":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the owning organization."
                },
                "OwningOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning party."
                },
                "PrimaryUOMCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure."
                },
                "ReceivingQuantity":{
                    "type":"number",
                    "description":"Receiving quantity for the item."
                },
                "ReservedQuantity":{
                    "type":"number",
                    "description":"Reserved quantity for the item."
                },
                "SecondaryConsignedQuantity":{
                    "type":"number",
                    "description":"Secondary consigned quantity for the item."
                },
                "SecondaryInboundQuantity":{
                    "type":"number",
                    "description":"Secondary inbound quantity for the item."
                },
                "SecondaryOnhandQuantity":{
                    "type":"number",
                    "description":"Secondary on-hand quantity for the item."
                },
                "SecondaryReceivingQuantity":{
                    "type":"number",
                    "description":"Secondary receiving quantity for the item."
                },
                "SecondaryReservedQuantity":{
                    "type":"number",
                    "description":"Secondary reserved quantity for the item."
                },
                "SecondaryUOMCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Serial number of the item."
                },
                "SubinventoryCode":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "returnSerialsForLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/returnSerialsForLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "returnSerialsForLots-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies a single item in inventory that logistics will not use for a similar item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receivingParameters":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingParameters-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingParameters-item":{
            "properties":{
                "ASNControlAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Action to take when receiving a purchase order if an advance shipment notice already exists. Values include Reject, Warning, or None.",
                    "title":"Meaning"
                },
                "AllowRoutingOverride":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: allow the organization to override the receipt routing. No: allow the organization to override the receipt routing.",
                    "title":"Meaning"
                },
                "AllowRoutingOverrideCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to allow the organization to override the receipt routing."
                },
                "AllowSubstituteReceipts":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: allow the organization to substitute receipts for the item. No: do not allow the organization to substitute receipts for the item.",
                    "title":"Meaning"
                },
                "AllowSubstituteReceiptsCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to allow the organization to substitute receipts for the item."
                },
                "AllowUnorderedReceipts":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: allow the organization to use unordered receipts. No: do not allow the organization to use unordered receipts.",
                    "title":"Meaning"
                },
                "AllowUnorderedReceiptsCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to allow the organization to use unordered receipts."
                },
                "BlindReceivingCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to enforce blind receiving in the organization."
                },
                "EarlyReceiptToleranceInDays":{
                    "type":"number",
                    "description":"Number of days allowed to receive an early shipment."
                },
                "EnforceBlindReceiving":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: enforce blind receiving in the organization. No: do not enforce blind receiving in the organization.",
                    "title":"Meaning"
                },
                "EnforceRMALotNumber":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines how to enforce the lot number received for the line on the return material authorization. Values include W, R, or U."
                },
                "EnforceRMASerialNumbers":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: enforce the serial number received for the line on the return material authorization. N: do not enforce this serial number."
                },
                "EnforceShipToLocationCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the action to take if an exception occurs for the ship-to location. Values include REJECT, WARNING, or NONE."
                },
                "IncludeClosedPOReceipt":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to allow the organization to receive an item that references a closed purchase order."
                },
                "IncludeClosedPurchaseOrdersForReceipt":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: allow the organization to receive an item that references a closed purchase order. No: do not allow the organization to receive an item that references a closed purchase order.",
                    "title":"Meaning"
                },
                "IntfReturnsToShipping":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to interface supplier returns to shipping for shipping documents."
                },
                "LateReceiptToleranceInDays":{
                    "type":"number",
                    "description":"Number of days allowed to receive a late shipment."
                },
                "ManualReceiptNumberType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that determines the type of receipt number to use when manually creating a receipt. Values include NUMERIC or ALPHANUMERIC."
                },
                "NextReceiptNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Next number that is in the sequence for creating receipts."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization.",
                    "title":"Organization"
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "OverReceiptAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Action to take when receiving a quantity that exceeds tolerances. Possible values are Reject, Warning, and None.",
                    "title":"Meaning"
                },
                "OverReceiptTolerance":{
                    "type":"number",
                    "description":"Percent value allowed to receive items that exceed the tolerance."
                },
                "PrintReceiptTraveler":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: print the receipt traveler report in the organization. No: do not print the receipt traveler report in the organization.",
                    "title":"Meaning"
                },
                "PrintReceiptTravelerCode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to print the receipt traveler report in the organization."
                },
                "PrintShippingDocumentsForReturnsToSuppliers":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: interface supplier returns to shipping for shipping documents. No: do not interface supplier returns to shipping for shipping documents.",
                    "title":"Meaning"
                },
                "ProcessASNLinesTogether":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not to process all lines on an advance shipment notice together for success or failure."
                },
                "ProcessAllLinesTogether":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: process all lines on an advanced shipment notice together for success or failure. No: do not process all lines on an advanced shipment notice together for success or failure.",
                    "title":"Meaning"
                },
                "QuantityRcvExceptionCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the action to take if the receipt date occurs outside of tolerances. Values include REJECT, WARNING, or NONE."
                },
                "RMALotValidation":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines how to enforce the lot number received for the line on the return material authorization. Values include Warning, Restricted, or Unrestricted.",
                    "title":"Meaning"
                },
                "RMAReceiptRouting":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing to use when receiving the documents for the return material authorization. Values include Standard receipt, Inspection required, or Direct delivery.",
                    "title":"Meaning"
                },
                "RMAReceiptRoutingId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that identifies the routing to use when receiving documents for the return material authorization."
                },
                "RMASerialNumbersValidation":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Contains Yes or No. Yes: enforce the serial number received for the line on the return material authorization. No: do not enforce this serial number.",
                    "title":"Meaning"
                },
                "ReceiptASNExistsCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the action to take when receiving a purchase order if an advance shipment notice already exists. Values include REJECT, WARNING, or NONE."
                },
                "ReceiptDaysExceptionCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the action to take if a receipt date occurs that exceeds tolerances. Values include REJECT, WARNING, or NONE."
                },
                "ReceiptExceedDaysAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Action to take if a receipt date occurs that exceeds tolerances. Values include Reject, Warning, or None.",
                    "title":"Meaning"
                },
                "ReceiptNumberGeneration":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines how to create receipt numbers. Values include Manual or Automatic.",
                    "title":"Meaning"
                },
                "ReceiptNumberType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines the type of receipt number to use when manually creating a receipt. Possible values are Numeric and Alphanumeric.",
                    "title":"Meaning"
                },
                "ReceiptRouting":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing to use when receiving the item. Values include Standard receipt, Inspection required, or Direct delivery.",
                    "title":"Meaning"
                },
                "ReceivingRoutingId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the routing to use when receiving the item. Values include 1 for standard receipt, 2 for inspection required, or 3 for direct delivery."
                },
                "ShipToExceptionAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Action to take if an exception occurs for the ship-to location. Values include Reject, Warning, or None.",
                    "title":"Meaning"
                },
                "UserDefinedReceiptNumberCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that determines how to create receipt numbers. Values include MANUAL or AUTOMATIC."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "linesToInspect":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/linesToInspect-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "linesToInspect-item":{
            "properties":{
                "ASNLineNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Line number of the advanced shipment notice."
                },
                "ASNNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the advanced shipment notice for the shipment from the supplier."
                },
                "ASNType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the document type that specifies how to use this transaction. This attribute contains one of the following values. ASN: create an advance shipment notice; ASBN: create an advance shipment billing notice; STD: create a receipt."
                },
                "AvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to inspect the parent transaction."
                },
                "BackToBack":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order."
                },
                "CategoryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the category name."
                },
                "CategoryName":{
                    "maxLength":250,
                    "type":"string",
                    "description":"Name of the category that classifies the item. A category groups items that possess similar characteristics, such as plastics, paints, inks, foods, and so on."
                },
                "Comments":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Comments provided with the receiving transaction."
                },
                "ConsignedItems":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the item is consigned. N: the item is not consigned."
                },
                "CurrencyCode":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Abbreviation that identifies the currency, such as USD."
                },
                "CurrencyConversionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date to use when determining the rates that your deployment uses when calculating the currency conversion."
                },
                "CurrencyConversionRate":{
                    "type":"number",
                    "description":"Rate to use when calculating the currency conversion."
                },
                "CurrencyConversionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Currency conversion type."
                },
                "CustomerId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the customer."
                },
                "CustomerPartyName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the party who purchases the item, typically for a fee."
                },
                "DestinationType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Destination type for the item on the transaction line. This attribute determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DestinationTypeCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the destination type for the item on the transaction line. This attribute determines the accounting behavior of the transaction line. The RCV_DESTINATION_TYPE lookup defines the values that you can use with this attribute."
                },
                "DocumentLineNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Line number for the document."
                },
                "DocumentNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document number that identifies one of the following: the purchase order number for a purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER."
                },
                "DocumentScheduleNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Schedule number for the document."
                },
                "DocumentType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute."
                },
                "EmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee."
                },
                "EmployeeName":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Name of the person who performed the transaction."
                },
                "FromOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the name of the organization that is the point of origin of the shipment. This value is empty for purchase orders and advanced shipment notices."
                },
                "FromOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization that is the point of origin of the shipment. This value is empty for purchase orders and advance shipment notices."
                },
                "FromOrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the source organization."
                },
                "InspectionStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Inspection status of the item. The RCV_INSPECTION_STATUS lookup defines the values that you can use with this attribute."
                },
                "InspectionStatusCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the inspection status of the item. The RCV_INSPECTION_STATUS lookup defines the values that you can use with this attribute."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that identifies the item to receive. This item is any part, material, product, or service that contains unique attributes when compared to other items."
                },
                "ItemRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "LineStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Current status of the received line, such as received, delivered, or inspected. The RCV_LINE_STATUS lookup defines the values that you can use with this attribute."
                },
                "Location":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Physical location of the warehouse that receives the item."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving location."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the locator where the item currently resides."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "POHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order header."
                },
                "POLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order line."
                },
                "POLineLocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order schedule."
                },
                "PORevisionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that identifies the revision of the purchase order."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction."
                },
                "ParentTransactionType":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Transaction type of the parent transaction."
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure that the item uses."
                },
                "Reason":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Rationale for classifying the transaction."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "ReceiptAdviceHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice header."
                },
                "ReceiptAdviceLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receipt advice line."
                },
                "ReceiptException":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Contains Y or N. Y: the received line includes an exception. N: the received line does not include an exception."
                },
                "ReceiptNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies receipt of the shipment in the warehouse."
                },
                "ReceiptSourceCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Abbreviation that identifies the source type of the shipment."
                },
                "Routing":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Routing name for the type of transaction entry that determines the steps that receive the item. The RCV_ROUTING_HEADERS lookup defines the values that you can use with this attribute."
                },
                "RoutingHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the routing header."
                },
                "SecondaryAvailableQuantity":{
                    "type":"number",
                    "description":"Quantity that is available to inspect in the secondary unit of measure."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure for the quantity that the receipt transaction contains."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure for the quantity that the receipt transaction contains."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment line."
                },
                "SourceDocumentCode":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values for this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory where the item currently resides."
                },
                "TOShipmentNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the transfer order shipment."
                },
                "ToOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the name of the ship-to organization of the received line."
                },
                "ToOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the ship-to organization of the received line."
                },
                "TransactionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction finished."
                },
                "TransferOrderDistId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order distribution."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header. Each transfer order can request to move an item from one location to another location."
                },
                "TransferOrderLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order line."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure that the received transaction uses."
                },
                "UnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the received transaction uses."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier."
                },
                "VendorItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number that the supplier uses to identify the item."
                },
                "VendorName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the company that provides a product in return for an item that might or might not require payment."
                },
                "VendorSiteCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"Abbreviation that identifies the name of the buying organization that conducts business with the supplier."
                },
                "VendorSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactionAccounts":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactionAccounts-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactionAccounts-item":{
            "properties":{
                "Account":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Account number for the inventory transaction."
                },
                "CodeCombinationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the general ledger account."
                },
                "EndDateActive":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this transaction account becomes inactive."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the inventory organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the inventory organization."
                },
                "StartDateActive":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when this transaction account becomes active."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryOrganizations":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryOrganizations-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryOrganizations-invOrgParameters":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryOrganizations-invOrgParameters-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryOrganizations-invOrgParameters-item":{
            "properties":{
                "AllowDifferentLotStatus":{
                    "type":"number",
                    "description":"Determines whether or not the lot status can change when transferring material that the lot controls."
                },
                "AllowNegativeOnhandTransactionsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: allow each transaction that occurs during the cycle count to result in a negative quantity in inventory. False: do not allow allow each transaction that occurs during the cycle count to result in a negative quantity in inventory."
                },
                "AutoLotAlphaPrefix":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Alphanumeric text to add as a prefix to the lot number when creating the lot number."
                },
                "AutoSerialAlphaPrefix":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Alphanumeric text to add as a prefix to the serial number when creating the serial number."
                },
                "AutomaticallyCreateLotUOMConversion":{
                    "type":"number",
                    "description":"Determines whether or not to convert the unit of measure that the lot references."
                },
                "AutomaticallyDeleteAllocationsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: if the movement request cancels, then cancel the pick. False: if the movement request cancels, then do not cancel the pick."
                },
                "CapturePickingExceptionsFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: capture the exception for each deviation when picking. False: do not capture the exception for each deviation when picking."
                },
                "ChildLotControlFormatValidationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: validate the format of the lot number. False: do not validate this format."
                },
                "ChildLotControlPrefix":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Prefix to add to the child lot number when creating the child lot number."
                },
                "ChildLotControlTotalLength":{
                    "type":"number",
                    "description":"Value of the total length of the child lot number."
                },
                "ChildLotControlZeroPaddingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: pad the child lot number with zeros. False: do not pad the child lot number with zeros."
                },
                "ContractManufacturingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the organization is a contract manufacturing plant, and it also supports warehouse operations. False: the organization is not a contract manufacturing plant, but it does support warehouse operations."
                },
                "CopyLotAttributeFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: inherit each attribute from the parent lot. False: do not inherit these attributes."
                },
                "DefaultLocatorOrderValue":{
                    "type":"number",
                    "description":"Default picking order assigned to each locator when creating the work order."
                },
                "DefaultPickingRuleId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that identifies the default picking rule to use when selecting material."
                },
                "DefaultSubinventoryOrderValue":{
                    "type":"number",
                    "description":"Default picking order assigned to each subinventory when creating the work order."
                },
                "DistributedOrganizationFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the organization to provide logistics services, such as warehousing or shipping. False: do not use the organization to provide logistics services."
                },
                "EnforceLocatorAliasUniquenessFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: make sure each locator alias is unique across the organization. False: do not make sure each locator alias is unique across the organization."
                },
                "FillKillMoveOrderFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: Allow the request line of a replenishment movement request that is only partially picked to cancel. False: Do not allow this cancel."
                },
                "GS1128Flag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: enable GS1-128. False: do not enable GS1-128. If you enable GS1-128, then the work order uses the international barcode standard. This standard uses the Code 128 barcode specification to identify data and data formats."
                },
                "LotNumberGeneration":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Control level to use when creating each lot number for the organization."
                },
                "LotNumberLength":{
                    "type":"number",
                    "description":"Value of the total length of the lot number."
                },
                "LotNumberUniqueness":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Control level to use that makes sure each lot number is unique when creating the lot number."
                },
                "LotNumberZeroPaddingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: pad the lot number with zeros. False: do not pad the lot number with zeros."
                },
                "ManufacturingPlantFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the organization is a manufacturing plant, and it also supports warehouse operations. False: the organization is not a manufacturing plant, but it does support warehouse operations."
                },
                "MasterOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that identifies the parent organization or the master organization. This attribute is required."
                },
                "NegativeInvReceiptFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: the organization allows negative balances in inventory. False: the organization does not allow negative balances in inventory."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required."
                },
                "OverpickTransferOrdersFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: inventory management allows you to overpick the movement request. False: inventory management does not allow you to overpick the movement request."
                },
                "PackingUnitPrefix":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Prefix to add to the string when creating the packing unit string."
                },
                "PackingUnitStartingNumber":{
                    "type":"number",
                    "description":"Smallest number to use as the packing unit number when creating the packing unit."
                },
                "PackingUnitSuffix":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Suffix to add to the string when creating the packing unit string."
                },
                "PackingUnitTotalLength":{
                    "type":"number",
                    "description":"Value of the total length of the packing unit string."
                },
                "ParentChildGeneration":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Control level to use when creating each child lot number for the organization."
                },
                "PickConfirmationRequiredFlag":{
                    "type":"number",
                    "description":"Contains True or False. True: inventory management requires that you manually confirm each pick. False: inventory management does not require you to manually confirm each pick."
                },
                "PickQuantityDefaultReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Reason applied for picking quantity exceptions, by default. This attribute is optional."
                },
                "PickSlipBatchSize":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of movement request lines that inventory management processes together when it allocates material."
                },
                "PreFillPickedQuantityFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: populate each picked quantity when confirming the pick slip. False: do not populate each picked quantity when confirming the pick slip."
                },
                "PurchasingByRevisionFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the purchase order or the requisition must include the revision when restocking. False: the purchase order or the requisition can include the revision as an option when restocking."
                },
                "ReplenishmentMovementRequestGrouping":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Threshold to use when grouping movement request lines so that inventory management can replenish inventory."
                },
                "RoundReorderQuantityFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: round up the reorder quantity to minimize or maximize planning. False: do not round up the reorder quantity to minimize or maximize planning."
                },
                "ScheduleId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the work day calendar for the organization."
                },
                "SerialNumberGeneration":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Control level to use when creating each serial number for the organization."
                },
                "SerialNumberType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Control level to use that makes sure each serial number is unique when creating the serial number."
                },
                "SourceType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Source type to use when replenishing an item."
                },
                "StartAutoSerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Smallest number to use as the serial number when creating the serial number."
                },
                "StartingRevision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Starting revision to use for the new item, by default."
                },
                "StockLocatorControl":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Default locator control for subinventories, such as predefined, dynamic, or none."
                },
                "SupplierId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier that the contract manufacturing organization references. If ContractManufacturingFlag is True, then SupplierId is required."
                },
                "SupplierSiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier site that the contract manufacturing organization references. If ContractManufacturingFlag is True, then SupplierId is required."
                },
                "SystemSelectsSerialNumberFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the system selects each serial number. False: the user selects each serial number."
                },
                "Timezone":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Time zone that the organization uses."
                },
                "UseOriginalReceiptDateFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use the original receipt date for on-hand quantity during the transaction. False: do not use the original receipt date for on-hand quantity during the transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"StockLocatorControl LOV",
                    "description":"Default locator control for the subinventory, such as predefined, dynamic, or none.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StockLocatorControl; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/stockLocatorControlLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "StockLocatorControl"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SourceType LOV",
                    "description":"Source type when replenishing the item.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SourceType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/sourceTypeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SourceType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SerialNumberType LOV",
                    "description":"Control level that makes sure each serial number is unique when creating the serial number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SerialNumberType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/serialNumberTypeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SerialNumberType"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LotNumberUniqueness LOV",
                    "description":"Control level that makes sure each lot number is unique when creating the lot number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LotNumberUniqueness; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/lotNumberUniquenessLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LotNumberUniqueness"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"LotNumberGeneration LOV",
                    "description":"Control level when creating each lot number for the organization.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LotNumberGeneration; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/lotNumberGenerationLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "LotNumberGeneration"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"SerialNumberGeneration LOV",
                    "description":"Control level when creating each serial number for the organization.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SerialNumberGeneration; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/serialNumberGenerationLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "SerialNumberGeneration"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AllowDifferentLotStatus LOV",
                    "description":"Determines whether or not inventory management can modify the lot status when it transfers material that a lot controls.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AllowDifferentLotStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/allowDifferentLotStatusLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AllowDifferentLotStatus"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"AutomaticallyCreateLotUOMConversion LOV",
                    "description":"Determines whether or not to convert the unit of measure that the lot references.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AutomaticallyCreateLotUOMConversion; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/automaticallyCreateLotUOMConversionLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "AutomaticallyCreateLotUOMConversion"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ParentChildGeneration LOV",
                    "description":"Control level when creating each child lot number for the organization.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ParentChildGeneration; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/parentChildGenerationLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ParentChildGeneration"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"ReplenishmentMovementRequestGrouping LOV",
                    "description":"Threshold to use when grouping movement request lines so that inventory management can replenish inventory.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReplenishmentMovementRequestGrouping; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}/lov/replenishmentMovementRequestGroupingLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "ReplenishmentMovementRequestGrouping"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "inventoryOrganizations-item":{
            "properties":{
                "ContractManufacturingFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the organization is a contract manufacturing plant, and it also supports warehouse operations. False: the organization is not a contract manufacturing plant, but it does support warehouse operations."
                },
                "InventoryFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the object is an inventory organization. An inventory application can use the organization. False: the object is an item organization. An inventory application cannot use the organization."
                },
                "LegalEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the legal entity that the organization references. If the organization is not an item organization, then this attribute is required."
                },
                "LegalEntityName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the legal entity that the organization references."
                },
                "LocationCode":{
                    "maxLength":60,
                    "type":"string",
                    "description":"This attribute is obsolete. Do not use it."
                },
                "LocationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory location that this organization references."
                },
                "ManagementBusinessUnitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the management business unit that the organization references. If the organization is not an item organization, then this attribute is required."
                },
                "ManagementBusinessUnitName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the management business unit that the organization references."
                },
                "ManufacturingPlantFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the organization is a manufacturing plant, and it also supports warehouse operations. False: the organization is not a manufacturing plant but it does support warehouse operations."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization. This attribute is required."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization that the user provides when creating a transaction. This attribute is required."
                },
                "ProfitCenterBusinessUnitId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the business unit that operates as a profit center. The organization references this business unit."
                },
                "ProfitCenterBusinessUnitName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the business unit that operates as a profit center. The organization references this business unit."
                },
                "Status":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Status that indicates whether or not this organization is active."
                },
                "invOrgParameters":{
                    "$ref":"#/definitions/inventoryOrganizations-invOrgParameters",
                    "description":"The Inventory Organization Parameters resource manages the default values for the warehouse transaction or inventory transaction for each inventory organization.",
                    "title":"Inventory Organization Parameters"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "plantParameters":{
                    "$ref":"#/definitions/inventoryOrganizations-plantParameters",
                    "description":"The Plant Parameters resource manages the plant defaults for each manufacturing organization or maintenance organization.",
                    "title":"Plant Parameters"
                }
            },
            "type":"object"
        },
        "inventoryOrganizations-plantParameters":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryOrganizations-plantParameters-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryOrganizations-plantParameters-item":{
            "properties":{
                "AutoAssociateSerialNumberWorkOrderImportFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: create serial numbers and associate them with a job. False: do not create serial numbers. Use this attribute for jobs that you create through the WIP Mass Load interface."
                },
                "BackflushLotSelection":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Determines the lots to use when performing a backflush. It can include one of the following values: Manual, First In First Out, or First Expiration First Out."
                },
                "DefaultCompletionLocator":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Locator to use to store the product upon completion if the default is not defined. The default completion subinventory controls whether or not the locator is required."
                },
                "DefaultCompletionSubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Subinventory to use to store the product upon completion if the default is not defined."
                },
                "DefaultLabelTemplate":{
                    "maxLength":400,
                    "type":"string",
                    "description":"Layout template to use when printing labels."
                },
                "DefaultOvercompletionTolerance":{
                    "type":"number",
                    "description":"Percent of assemblies that you can overcomplete for each job or schedule."
                },
                "DefaultSupplyLocator":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Locator to use when performing a backflushing operation that pulls and assembles components, and that does not have default values defined. The default supply subinventory controls whether or not the locator is required."
                },
                "DefaultSupplySubinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Subinventory to use when performing a backflushing operation that pulls and assembles components, and that does not have default values defined."
                },
                "DefaultTransactionMode":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Allows inventory management to default the transaction quantity to the required quantity during a material transaction or resource transaction in the work order."
                },
                "DefaultTransactionQuantity":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Enables the default transaction mode. If the user chooses All Mode All Components, then inventory management defaults the resources that it uses for the operation, and the user can create a transaction that uses these resources."
                },
                "DefaultWorkOrderTravelerTemplate":{
                    "maxLength":400,
                    "type":"string",
                    "description":"Layout template to use when printing the work order traveler."
                },
                "IncludeComponentYieldFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: do not round each decimal quantity. False: round each decimal quantity."
                },
                "ManufacturingCalendarId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the schedule that the organization references as the manufacturing calendar."
                },
                "OperationSequenceIncrement":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that increments the sequence number for each new operation added in the work definition."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required."
                },
                "PhantomOperationInherit":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Determines whether to charge the components, resources, and overhead from the phantom work definition, or to get them from the operation sequence that is defined for the parent work item."
                },
                "QuantityChangeBackflush":{
                    "maxLength":1,
                    "type":"string",
                    "description":"Determines whether or not inventory management allows a change to the transaction quantity in the work order."
                },
                "StartingOperationSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Default sequence number for the first operation in a new work definition."
                },
                "WorkOrderPrefix":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Alphanumeric text to add as a prefix to the work order name when creating the work order name."
                },
                "WorkOrderStartingNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Starting numeric value to use in the document sequence when creating each work order number at the plant."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"PhantomOperationInherit LOV",
                    "description":"Determines whether inventory management charges the components, resources, and overhead from the phantom work definition, or inherits them in the same operation sequence that the parent item work uses.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PhantomOperationInherit; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters/{OrganizationId2}/lov/phantomOperationInheritLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "PhantomOperationInherit"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultTransactionMode LOV",
                    "description":"Default transaction mode. If the user chooses All, then inventory management defaults the resources for the operation, and the user can create a transaction that references them.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultTransactionMode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters/{OrganizationId2}/lov/defaultTransactionModeLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultTransactionMode"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"DefaultTransactionQuantity LOV",
                    "description":"Allows inventory management to default the transaction quantity to the required quantity during the material transactions and resource transactions that occur when fulfillng a work order. The user can modify this quantity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultTransactionQuantity; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters/{OrganizationId2}/lov/defaultTransactionQuantityLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "DefaultTransactionQuantity"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"QuantityChangeBackflush LOV",
                    "description":"Determines the modifications that inventory management allows the user to make to the transaction quantity in a work order, such as to override the default required quantity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: QuantityChangeBackflush; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters/{OrganizationId2}/lov/quantityChangeBackflushLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "QuantityChangeBackflush"
                    ],
                    "effectiveMethod":"get"
                },
                {
                    "rel":"lov",
                    "title":"BackflushLotSelection LOV",
                    "description":"Determines how to select lots when performing a backflush.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BackflushLotSelection; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>",
                    "method":"get",
                    "href":"/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters/{OrganizationId2}/lov/backflushLotSelectionLOV?fields=LookupCode,Meaning",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "LookupCode":{
                                "type":"string",
                                "description":"Value that uniquely identifies the lookup."
                            },
                            "Meaning":{
                                "type":"string",
                                "description":"Display value for the lookup in the application."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "BackflushLotSelection"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "inventoryAccountAliases":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryAccountAliases-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryAccountAliases-item":{
            "properties":{
                "Account":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Account number."
                },
                "AccountAlias":{
                    "maxLength":40,
                    "type":"string",
                    "description":"Name of the account alias."
                },
                "Description":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Description of the account alias."
                },
                "DispositionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the account alias."
                },
                "DistributionAccountId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the distribution account."
                },
                "EndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the account alias becomes inactive."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "StartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the account alias becomes active."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "carriers":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/carriers-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "carriers-item":{
            "properties":{
                "ActiveFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: the carrier is active. False: the carrier is not active."
                },
                "CarrierId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies the carrier. This attribute is required."
                },
                "CarrierName":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the carrier. This attribute is required."
                },
                "ManifestingEnabledFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: use a manifest with this carrier. False: do not use a manifest with this carrier."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "rmaRestrictedLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/rmaRestrictedLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "rmaRestrictedLots-item":{
            "properties":{
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the items in the lot are no longer available for transactions and planning."
                },
                "LotNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number of the lot."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryItemLots-item":{
            "properties":{
                "ActiveLot":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Determines whether or not the lot is active."
                },
                "ActiveLotCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that determines whether or not the lot is active."
                },
                "ExpirationAction":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Expiration action."
                },
                "ExpirationActionCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Abbreviation that identifies the expiration action."
                },
                "ExpirationActionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse performed the expiration action."
                },
                "ExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse expired the lot."
                },
                "Grade":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Abbreviation that identifies the grade of the item."
                },
                "HoldUntilDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the hold expires."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the item."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the item."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number."
                },
                "MaturityDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the item matures."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse created the lot."
                },
                "OriginationType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Origination type."
                },
                "OriginationTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the origination type."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Parent lot number."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the status."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the status."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryOwningPartySites":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryOwningPartySites-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryOwningPartySites-item":{
            "properties":{
                "OwningParty":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the owning party."
                },
                "OwningPartyId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning party."
                },
                "OwningPartySite":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Name of the owning party site."
                },
                "OwningPartySiteId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning party site."
                },
                "ProcurementBU":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the procurement business unit."
                },
                "ProcurementBUId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the procurement business unit."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inspectionStatuses":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inspectionStatuses-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inspectionStatuses-item":{
            "properties":{
                "InspectionStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Inspection status of the inspection transaction type. Values include Accepted or Rejected.",
                    "title":"Meaning"
                },
                "TransactionType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of inspection transaction. Values include ACCEPT or REJECT.",
                    "title":"Lookup Code"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryTransactionReasons":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryTransactionReasons-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryTransactionReasons-item":{
            "properties":{
                "Description":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the transaction reason."
                },
                "EndDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction reason becomes inactive."
                },
                "ReasonContext":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Transaction reason context."
                },
                "ReasonContextCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the transaction reason context."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transaction reason."
                },
                "ReasonName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the transaction reason."
                },
                "ReasonType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Type of transaction reason."
                },
                "ReasonTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of transaction reason."
                },
                "StartDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the transaction reason becomes active."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-item":{
            "properties":{
                "FailedRecordsCount":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Total number of failed balance records."
                },
                "ReturnMessageCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the response message."
                },
                "ReturnMessageText":{
                    "type":"string",
                    "description":"Message text of the response."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the current service call. Values include SUCCESS or FAILURE."
                },
                "SubmitForProcessing":{
                    "type":"string",
                    "description":"Contains Yes or No. Yes: process the inventory balance records. No: do not process these records."
                },
                "SuccessRecordsCount":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Total number of successful balance records."
                },
                "TotalRecordsCount":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Total number of balance records."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                },
                "transactionLines":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines",
                    "description":"The Transaction Lines resource manages details about the inventory balance.",
                    "title":"Transaction Lines"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-dffForTransactionLines":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-dffForTransactionLines-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-dffForTransactionLines-item":{
            "properties":{
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Context value of the descriptive flexfield that references the transaction line."
                },
                "__FLEX_Context_DisplayValue":{
                    "type":"string",
                    "description":"Display value of the descriptive flexfield that references the transaction line."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"List of values for the transaction lines.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/dffForTransactionLines/{dffForTransactionLinesUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup value for the context type of the descriptive flexfield that references the transaction line."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the lookup value for the context type of the descriptive flexfield that references the transaction line."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-item":{
            "properties":{
                "AccountAliasId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the account to use for the adjustment transaction."
                },
                "AccountAliasName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the account alias to use for the adjustment transaction."
                },
                "AgingOnsetDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the aging period starts for the balance record in consigned inventory."
                },
                "ConsignmentAgreementNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number that identifies the consignment agreement for the consigned quantity."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Number of the item."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "LocatorName":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Locator name. It contains the concatenated segment values for the locator."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "OwningOrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Site of the owning organization."
                },
                "OwningOrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning organization."
                },
                "OwningTradingPartnerType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains 1 or 2. 1: the balance record is a consigned quantity. 2: the balance record is an owned item quantity."
                },
                "PrcBUName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the procuring business unit. Applies only for a consigned quantity."
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure for the item in the current organization."
                },
                "PrimaryUOMQuantity":{
                    "type":"number",
                    "description":"Balance quantity in the primary unit of measure for the item."
                },
                "PrimaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Primary unit of measure for the item in the current organization."
                },
                "Revision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Contains one of the following values. Revision: revisions control the item. Empty: revisions do not control the item."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure for the item in the current organization."
                },
                "SecondaryUOMQuantity":{
                    "type":"number",
                    "description":"Balance quantity in the secondary unit of measure if two UOMs control this item."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure for the item in the current organization."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "TransactionSourceCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source of the transaction."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the supplier who supplies the consigned quantity."
                },
                "VendorNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the supplier who supplies the consigned quantity."
                },
                "dffForTransactionLines":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-dffForTransactionLines",
                    "description":"The Flexfields for Transaction Lines resource manages descriptive flexfields that contain details about the transaction line.",
                    "title":"Flexfields for Transaction Lines"
                },
                "itemLots":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots",
                    "description":"The Lot Details for Items resource manages details about the lot that the inventory balance references when a lot controls the item.",
                    "title":"Lot Details for Items"
                },
                "itemSerials":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials",
                    "description":"The Serial Details for Items resource manages details about the serial that the inventory balance references when a serial controls the item.",
                    "title":"Serial Details for Items"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots-item":{
            "properties":{
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Context value of the descriptive flexfield that references the lot."
                },
                "__FLEX_Context_DisplayValue":{
                    "type":"string",
                    "description":"Display value of the descriptive flexfield."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"List of values for the item lots.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/dffForItemLots/{dffForItemLotsUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup value for the context type of the descriptive flexfield that references the item lot."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the lookup value for the context type of the descriptive flexfield that references the item lot."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-item":{
            "properties":{
                "Age":{
                    "type":"number",
                    "description":"Age of the lot."
                },
                "ExpirationActionCode":{
                    "maxLength":32,
                    "type":"string",
                    "description":"Expiration action for the lot."
                },
                "ExpirationActionDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot expiration action occurred."
                },
                "ExpirationActionName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Description of the lot expiration action."
                },
                "GradeCode":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Abbreviation that identifies the lot grade."
                },
                "HoldDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the hold will release for the lot."
                },
                "LotExpirationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot expires."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number of the item when a lot controls the item."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the lot originated."
                },
                "OriginationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Origination type of the lot."
                },
                "ParentLotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number of the parent lot."
                },
                "PlaceOfOrigin":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Place of origin of the lot."
                },
                "PrimaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the primary unit of measure for the item."
                },
                "PrimaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the primary unit of measure for the item in the current organization."
                },
                "PrimaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Primary unit of measure for the item in the current organization."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Transaction quantity for this lot in the secondary unit of measure for the item."
                },
                "SecondaryUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure for the item in the current organization."
                },
                "SecondaryUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure for the item in the current organization."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Abbreviation that identifies the status of the material that the lot references."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the lot status."
                },
                "StatusName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the lot status."
                },
                "SupplierLotNumber":{
                    "maxLength":150,
                    "type":"string",
                    "description":"Supplier lot number."
                },
                "TerritoryCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the territory."
                },
                "TerritoryShortName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the territory."
                },
                "VendorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the supplier who supplies materials for the lot."
                },
                "VendorName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the supplier who supplies materials for the lot."
                },
                "dffForItemLots":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots",
                    "description":"The Flexfields for Lots resource manages descriptive flexfields that contain details about the lot.",
                    "title":"Flexfields for Lots"
                },
                "itemSerialsForLot":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot",
                    "description":"The Serial and Lot Details for Items resource manages details that the inventory balance references when a serial and a lot control the item.",
                    "title":"Serial and Lot Details for Items"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot-item":{
            "properties":{
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Context value of the descriptive flexfield that references the serial."
                },
                "__FLEX_Context_DisplayValue":{
                    "type":"string",
                    "description":"Display value of the descriptive flexfield that references the serial."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"List of values for the item serials for lots.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/itemSerialsForLot/{itemSerialsForLotUniqID}/child/dffForItemSerialsForLot/{dffForItemSerialsForLotUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup value for the context type of the descriptive flexfield that references the item lot serial."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the lookup value for the context type of the descriptive flexfield that references the item lot serial."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers when a lot and a serial control the item."
                },
                "FromVendorSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Starting supplier serial number in a range of serial numbers when a lot and a serial control the item."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the serial originated."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Abbreviation that identifies the serial status."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the serial status."
                },
                "StatusName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the serial status."
                },
                "TerritoryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the territory."
                },
                "TerritoryShortName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the territory."
                },
                "ToSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers when a lot and a serial control the item."
                },
                "ToVendorSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Ending supplier serial number in a range of serial numbers when a lot and a serial control the item."
                },
                "dffForItemSerialsForLot":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot",
                    "description":"The Flexfields for Serials and Lots resource manages descriptive flexfields that contain details about the item when a serial and lot control the item.",
                    "title":"Flexfields for Serials and Lots"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials-item":{
            "properties":{
                "__FLEX_Context":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Context value of the descriptive flexfield that references the serial."
                },
                "__FLEX_Context_DisplayValue":{
                    "type":"string",
                    "description":"Display value of the descriptive flexfield that references the serial."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "x-links":[
                {
                    "rel":"lov",
                    "title":"__FLEX_Context LOV",
                    "description":"List of values for the item serials.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: __FLEX_Context; Target Attribute: ContextCode</li><li>Display Attribute: Name</li></ul>",
                    "method":"get",
                    "href":"/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemSerials/{itemSerialsUniqID}/child/dffForItemSerials/{dffForItemSerialsUniqID}/lov/LVVO___FLEX_Context?fields=ContextCode,Name",
                    "mediaType":"application/vnd.oracle.adf.resourcecollection+json",
                    "encType":"application/x-www-form-urlencoded",
                    "targetSchema":{
                        "properties":{
                            "ContextCode":{
                                "type":"string",
                                "description":"Abbreviation that identifies the lookup value for the context type of the descriptive flexfield that references the item serial."
                            },
                            "Name":{
                                "type":"string",
                                "description":"Name of the lookup value for the context type of the descriptive flexfield that references the item serial."
                            }
                        },
                        "type":"object"
                    },
                    "schema":{
                        "properties":{
                            "limit":{
                                "type":"integer",
                                "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources."
                            },
                            "offset":{
                                "type":"integer",
                                "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0."
                            },
                            "totalResults":{
                                "type":"boolean",
                                "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\"."
                            },
                            "onlyData":{
                                "type":"boolean",
                                "description":"The resource item payload will be filtered in order to contain only data (no links section, for example)."
                            },
                            "dependency":{
                                "type":"string",
                                "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;"
                            },
                            "orderBy":{
                                "type":"string",
                                "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc"
                            },
                            "links":{
                                "items":{
                                    "$ref":"#/definitions/link"
                                },
                                "type":"array",
                                "description":"The link relations associated with the resource instance."
                            }
                        },
                        "type":"object"
                    },
                    "o:properties":[
                        "__FLEX_Context"
                    ],
                    "effectiveMethod":"get"
                }
            ],
            "type":"object"
        },
        "inventoryBalanceTransactions-transactionLines-itemSerials-item":{
            "properties":{
                "FromSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Starting serial number in a range of serial numbers when a serial controls the item."
                },
                "FromVendorSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Starting supplier serial number in a range of serial numbers when a serial controls the item."
                },
                "OriginationDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the serial originated."
                },
                "StatusCode":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Abbreviation that identifies the serial status."
                },
                "StatusId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the serial status."
                },
                "StatusName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the serial status."
                },
                "TerritoryCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Value that uniquely identifies the territory."
                },
                "TerritoryShortName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the territory."
                },
                "ToSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Ending serial number in a range of serial numbers when a serial controls the item."
                },
                "ToVendorSerialNumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Ending supplier serial number in a range of serial numbers when a serial controls the item."
                },
                "dffForItemSerials":{
                    "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials",
                    "description":"The Flexfields for Serials resource manages descriptive flexfields that contain details about the item when a serial controls the item.",
                    "title":"Flexfields for Serials"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "cycleCountSequenceDetails":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/cycleCountSequenceDetails-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "cycleCountSequenceDetails-item":{
            "properties":{
                "AdjustmentDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse posted the adjustment transaction."
                },
                "AdjustmentValue":{
                    "type":"number",
                    "description":"Cost of the adjustment transaction."
                },
                "Comments":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Comments that describe the current count."
                },
                "CountDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the warehouse counted this sequence."
                },
                "CountQuantity":{
                    "type":"number",
                    "description":"Count quantity."
                },
                "CountSequence":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of the cycle count sequence."
                },
                "CountSequenceStatus":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Current status of the count sequence."
                },
                "CountSequenceStatusCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that indicates the current status of the count sequence."
                },
                "CountType":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Type of count to perform. The INV_CC_ITEM_TYPES lookup defines the values that you can use with this attribute."
                },
                "CountTypeCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the type of count to perform. The INV_CC_ITEM_TYPES lookup defines the values that you can use with this attribute."
                },
                "CountUOM":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure that the current count uses."
                },
                "CountUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the <br>unit of measure that the current count uses."
                },
                "CountedBy":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the employee who performed the current count."
                },
                "CountedByEmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee who performed the current count."
                },
                "CycleCountEntryId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the cycle count sequence."
                },
                "CycleCountHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the cycle count."
                },
                "CycleCountName":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Name of the cycle count."
                },
                "ExportCode":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Abbreviation that determines whether or not to export the count sequence to the interface."
                },
                "Exported":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Indicates whether or not the warehouse exported the count sequence to the interface."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the inventory item."
                },
                "ItemNumber":{
                    "maxLength":300,
                    "type":"string",
                    "description":"Name of the inventory item."
                },
                "Locator":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Name of the locator."
                },
                "LocatorId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the locator."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Number that identifies an item or group of items."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "OrganizationName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the organization."
                },
                "OwningEntityId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the owning entity. If the item is consigned, then this attribute contains the vendor site identifier. If the item is owned, then this attribute contains the owning organization identifier."
                },
                "OwningParty":{
                    "maxLength":360,
                    "type":"string",
                    "description":"Name of the owning party."
                },
                "OwningPartySite":{
                    "maxLength":15,
                    "type":"string",
                    "description":"Name of the owning party site."
                },
                "OwningType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Contains 1 or 2. 1: consigned. 2: owned."
                },
                "PrimaryAdjustmentQuantity":{
                    "type":"number",
                    "description":"Adjustment quantity that the warehouse requires to make the system quantity equal the count quantity."
                },
                "PrimarySuggestedQuantity":{
                    "type":"number",
                    "description":"System quantity that existed during the current count."
                },
                "Reason":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Reason for the adjustment transaction."
                },
                "ReasonId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the reason."
                },
                "Recounts":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number of times that the warehouse counted this count sequence."
                },
                "ReviewDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the employee approved the adjustment."
                },
                "ReviewedBy":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Name of the employee who approved the adjustment."
                },
                "ReviewedByEmployeeId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the employee who approved the adjustment."
                },
                "Revision":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Revision of the item."
                },
                "SecondaryAdjustmentQuantity":{
                    "type":"number",
                    "description":"Adjustment quantity that is required to make the secondary system quantity equal the secondary count quantity."
                },
                "SecondaryCountQuantity":{
                    "type":"number",
                    "description":"Quantity of the current count in the secondary unit of measure that the item uses."
                },
                "SecondaryCountUOM":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Secondary unit of measure that the current count uses."
                },
                "SecondaryCountUOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the <br>secondary unit of measure that the current count uses."
                },
                "SecondarySuggestedQuantity":{
                    "type":"number",
                    "description":"Secondary system quantity that existed during the current count."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number to count."
                },
                "Subinventory":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Name of the subinventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "asnLinesForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/asnLinesForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "asnLinesForReceiving-item":{
            "properties":{
                "ASN":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Advanced shipment notice. It is a number that identifies the shipment of the item."
                },
                "ASNLine":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Number that identifies a line on the advanced shipment notice."
                },
                "ItemDescription":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Description of the item."
                },
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the receiving organization."
                },
                "ShipmentHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the shipment header of the advanced shipment notice."
                },
                "ShipmentLineId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the advanced shipment notice."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "purchaseOrderReceiptSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/purchaseOrderReceiptSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "purchaseOrderReceiptSerials-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Serial numbers of the items to track in inventory."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "returnSerials":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/returnSerials-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "returnSerials-item":{
            "properties":{
                "SerialNumber":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Value that uniquely identifies a single item in inventory that logistics will not use for a similar item."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "unitsOfMeasure":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/unitsOfMeasure-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "unitsOfMeasure-item":{
            "properties":{
                "Description":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Description of the unit of measure."
                },
                "DisableDate":{
                    "format":"date",
                    "type":"string",
                    "description":"Date when the unit of measure is no longer available."
                },
                "UOM":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Name of the unit of measure. This attribute is required."
                },
                "UOMClass":{
                    "maxLength":10,
                    "type":"string",
                    "description":"Class that categorizes the unit of measure. This attribute is required."
                },
                "UOMCode":{
                    "maxLength":3,
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure. This attribute is required."
                },
                "UOMPluralDescription":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Description of the plural value of the unit of measure. For example: Use Feet as the plural value for the Foot unit of measure."
                },
                "UOMReciprocalDescription":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Description of how to process the unit of measure so that the quantity that results from dividing it equals one. For example: Use Per Month for a service that uses the Month unit of measure."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "generateSerialNumbers":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/generateSerialNumbers-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "generateSerialNumbers-item":{
            "properties":{
                "EndSerialNumber":{
                    "type":"string",
                    "description":"Ending serial number in the range of serial numbers to create."
                },
                "InventoryItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the inventory item."
                },
                "ItemNumber":{
                    "type":"string",
                    "description":"Name of the inventory item."
                },
                "NumberOfSerials":{
                    "format":"int32",
                    "type":"integer",
                    "description":"Number of serial numbers to create."
                },
                "OrganizationCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the organization."
                },
                "ReturnMessageName":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: name of the error message from the request. Empty: the request was successful."
                },
                "ReturnMessageText":{
                    "type":"string",
                    "description":"Contains a value or is empty. Value: error message from the request. Empty: the request was successful."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Status of the request to create serial numbers."
                },
                "StartSerialNumber":{
                    "type":"string",
                    "description":"Starting serial number in the range of serial numbers to create."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "unitOfMeasureConversions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/unitOfMeasureConversions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "unitOfMeasureConversions-item":{
            "properties":{
                "ConversionFactor":{
                    "type":"number",
                    "description":"Conversion rate to use when coverting FromUOM to ToUOM."
                },
                "FromUOM":{
                    "type":"string",
                    "description":"Name of the unit of measure to use as the input to the conversion. This attribute is required."
                },
                "ItemId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Identifier of an item. If you include this attribute, and if a conversion exists for this item, then this API will use the item conversion when converting FromUOM to ToUOM."
                },
                "ReturnMessage":{
                    "type":"string",
                    "description":"Message that includes details about errors that occur during conversion."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains True or False. True: conversion finished successfully. False: conversion failed."
                },
                "ToUOM":{
                    "type":"string",
                    "description":"Name of the unit of measure to use as the output from the conversion. This attribute is required."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "receivingCountriesOfOrigin":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/receivingCountriesOfOrigin-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "receivingCountriesOfOrigin-item":{
            "properties":{
                "Description":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Details about the country of origin. For example, Republic of India, including Amindivi Islands, Andaman Islands, Laccadive Islands, Minicoy Island, and Nicobar Islands."
                },
                "TerritoryCode":{
                    "maxLength":2,
                    "type":"string",
                    "description":"Abbreviation that identifies the country of origin of the item to receive. For example, US."
                },
                "TerritoryName":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Name of the country of origin of the item to receive. For example, United States of America."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "transferOrdersForReceiving":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/transferOrdersForReceiving-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "transferOrdersForReceiving-item":{
            "properties":{
                "OrganizationCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Abbreviation that identifies the receiving organization."
                },
                "OrganizationId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the the receiving organization."
                },
                "TransferOrder":{
                    "maxLength":50,
                    "type":"string",
                    "description":"Number that identifies the request to transfer the item. A transfer can occur within an inventory organization, between two inventory organizations, or between an inventory organization and an expense destination."
                },
                "TransferOrderHeaderId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the transfer order header."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "validatePutAwayQuantities":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/validatePutAwayQuantities-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "validatePutAwayQuantities-item":{
            "properties":{
                "DocumentDistributionNumber":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Distribution number for the document schedule. This attribute applies only for a purchase order or transfer order."
                },
                "ErrorCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Code attribute is empty."
                },
                "ErrorExplanation":{
                    "type":"string",
                    "description":"Message that describes the error that occurred when validating the quantity. If the Return Status attribute contains a value of SUCCESS, then the Error Explanation attribute is empty."
                },
                "PODistributionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the purchase order distribution."
                },
                "ParentTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"Value that uniquely identifies the parent transaction to put away."
                },
                "Quantity":{
                    "type":"number",
                    "description":"Quantity recommended to put away."
                },
                "ReturnStatus":{
                    "type":"string",
                    "description":"Contains one of the following values. SUCCESS: the application successfully validated the quantity for the transaction. ERROR: this validation failed. WARNING: the validation found a potential problem, but allows the transaction to continue."
                },
                "SecondaryQuantity":{
                    "type":"number",
                    "description":"Secondary quantity recommended to put away."
                },
                "SecondaryUOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the secondary unit of measure."
                },
                "SecondaryUnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the secondary quantity recommended to put away."
                },
                "SourceDocumentCode":{
                    "type":"string",
                    "description":"Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY."
                },
                "UOMCode":{
                    "type":"string",
                    "description":"Abbreviation that identifies the unit of measure."
                },
                "UnitOfMeasure":{
                    "type":"string",
                    "description":"Unit of measure for the quantity recommended to put away the transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "operationTransactions":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/operationTransactions-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "operationTransactions-OperationTransactionDetail":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "operationTransactions-OperationTransactionDetail-TransactionLot":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionLot-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "operationTransactions-OperationTransactionDetail-TransactionLot-item":{
            "properties":{
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Names of the error messages that occurred when processing this operation transaction. Each error message name corresponds to one text string that the ErrorMessages attribute contains. A comma ( , ) separate each message name."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text of the error messages that occurred when processing this operation transaction. Each text string for each error message corresponds to one error message name that the ErrorMessageNames attribute contains. Double dollar signs ($$) separate each message."
                },
                "LotExpirationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the lot expires."
                },
                "LotNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Lot number for the transaction quantity."
                },
                "LotOriginationDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date and time when the lot originated."
                },
                "LotOriginationType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Origin of the lot. The application determines the lot orgination type when you create the lot."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Transacted quantity of the lot for the work order."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "operationTransactions-OperationTransactionDetail-TransactionSerial":{
            "properties":{
                "count":{
                    "type":"integer",
                    "description":"The number of resource instances returned in the current range.",
                    "title":"Count"
                },
                "hasMore":{
                    "type":"boolean",
                    "description":"Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.",
                    "title":"HasMore"
                },
                "items":{
                    "items":{
                        "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionSerial-item"
                    },
                    "type":"array",
                    "description":"The items in the collection.",
                    "title":"Items"
                },
                "limit":{
                    "type":"integer",
                    "description":"The actual paging size used by the server.",
                    "title":"Limit"
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"The link relations associated with the resource instance.",
                    "title":"Items"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset value used in the current page.",
                    "title":"Offset"
                }
            },
            "type":"object"
        },
        "operationTransactions-OperationTransactionDetail-TransactionSerial-item":{
            "properties":{
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Names of the error messages that occurred when processing this serial in the operation transaction. Each error message name corresponds to one text string that the ErrorMessages attribute contains. A comma ( , ) separate each message name."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Text of the error messages that occurred when processing this serial in the operation transaction. Each text string for each error message corresponds to one error message name that the ErrorMessageNames attribute contains. Double dollar signs ($$) separate each message."
                },
                "LotNumber":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Lot number of the serial of the component that fulfillment issues for the work order. The LotNumber attribute is optional."
                },
                "SerialNumber":{
                    "maxLength":80,
                    "type":"string",
                    "description":"Serial number of the assembly where fulfillment performs the operation transaction."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "operationTransactions-OperationTransactionDetail-item":{
            "properties":{
                "ComplSubinventoryCode":{
                    "maxLength":18,
                    "type":"string",
                    "description":"Subinventory where fulfillment delivers the item."
                },
                "CompletionLocator":{
                    "maxLength":800,
                    "type":"string",
                    "description":"Locator where fulfillment completes the item or the locator where fulfillment reverses the item."
                },
                "ErrorMessageNames":{
                    "maxLength":255,
                    "type":"string",
                    "description":"Name of the error message."
                },
                "ErrorMessages":{
                    "maxLength":2000,
                    "type":"string",
                    "description":"Error encountered while processing this transaction."
                },
                "FromDispatchState":{
                    "maxLength":30,
                    "type":"string",
                    "description":"State of the transaction quantity for the operation at the beginning of processing."
                },
                "OrganizationCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the organization where fulfillment performs the operation transaction."
                },
                "POLineNumber":{
                    "type":"number",
                    "description":"Value that uniquely identifies the purchase order."
                },
                "PONumber":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Number of the purchase order. Use the PONumber attribute only if the plant is a contract manufacturing plant."
                },
                "ReasonCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Locator where fulfillment completes the item or the locator where fulfillment reverses the item."
                },
                "SoldToLegalEntityName":{
                    "maxLength":240,
                    "type":"string",
                    "description":"Sold-to organization in the purchase order. Use the SoldToLegalEntityName attribute only if the plant is a contract manufacturing plant."
                },
                "SourceSystemCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source system that started the operation transaction."
                },
                "ToDispatchState":{
                    "maxLength":30,
                    "type":"string",
                    "description":"State of the transaction quantity for the operation at the end of processing."
                },
                "TransactionDate":{
                    "format":"date-time",
                    "type":"string",
                    "description":"Date when fulfillment performs the transaction."
                },
                "TransactionLot":{
                    "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionLot",
                    "description":"The Transaction Lots resource manages details of the assembly lot.",
                    "title":"Transaction Lots"
                },
                "TransactionNote":{
                    "maxLength":4000,
                    "type":"string",
                    "description":"Notes that describe the operation transaction."
                },
                "TransactionQuantity":{
                    "type":"number",
                    "description":"Quantity that fulfillment is currently transacting."
                },
                "TransactionSerial":{
                    "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionSerial",
                    "description":"The Transaction Serials resource manages details of the assembly serial.",
                    "title":"Transaction Serials"
                },
                "TransactionUnitOfMeasure":{
                    "maxLength":25,
                    "type":"string",
                    "description":"Unit of measure for the transaction quantity."
                },
                "WoOperationSequenceNumber":{
                    "type":"number",
                    "description":"Operation sequence in the work order."
                },
                "WoOperationTransactionId":{
                    "format":"int64",
                    "type":"integer",
                    "description":"If the transaction successfully finishes, then WoOperationTransactionId contains the number that identifiies this transaction. If the transaction does not successfully finish, then WoOperationTransactionId contains 0 (zero), the ErrorsExistFlag attribute contains True, and the ErrorMessages and ErrorMessageNames attributes contain error details. The response payload includes the WoOperationTransactionId attribute."
                },
                "WorkOrderNumber":{
                    "maxLength":120,
                    "type":"string",
                    "description":"Work order that the operation transaction references."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        },
        "operationTransactions-item":{
            "properties":{
                "ErrorsExistFlag":{
                    "type":"boolean",
                    "description":"Contains True or False. True: an error occurred while processing the operation transaction. False: an error did not occur. The response payload includes the ErrorsExistFlag attribute."
                },
                "OperationTransactionDetail":{
                    "$ref":"#/definitions/operationTransactions-OperationTransactionDetail",
                    "description":"The Operation Transaction Details resource manages details of the operation transaction.",
                    "title":"Operation Transaction Details"
                },
                "SourceSystemCode":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Abbreviation that identifies the source system that started the operation transaction. You must register this code in Manufacturing Cloud. The application validates this value against the WIE_SOURCE_SYSTEMS_V database view."
                },
                "SourceSystemType":{
                    "maxLength":30,
                    "type":"string",
                    "description":"Type of source system that started the operation transaction. Values include INTERNAL or EXTERNAL."
                },
                "links":{
                    "items":{
                        "$ref":"#/definitions/link"
                    },
                    "type":"array",
                    "description":"Link Relations",
                    "title":"Items"
                }
            },
            "type":"object"
        }
    },
    "tags":[
        {
            "name":"ASN Lines for Receiving",
            "description":"The ASN Lines for Receiving resource manages the lines of the advanced shipment notice that are available to receive."
        },
        {
            "name":"ASNs for Receiving",
            "description":"The ASNs for Receiving resource manages the advanced shipment notices that are available to receive."
        },
        {
            "name":"Active Locators",
            "description":"The Active Locators resource manages inventory locators that the warehouse can use to fulfill the item and meet transaction type requirements."
        },
        {
            "name":"Active Subinventories",
            "description":"The Active Subinventories resource manages subinventories that the warehouse can use to fulfill the item and meet the transaction type requirements."
        },
        {
            "name":"Available Quantity Details",
            "description":"The Available Quantity Details resource manages quantity details for the item."
        },
        {
            "name":"Carriers",
            "description":"The Carriers resource manages the carriers that fulfillment can use during shipping."
        },
        {
            "name":"Cycle Count Definitions",
            "description":"The Cycle Count Definitions resource manages the cycle count definitions."
        },
        {
            "name":"Cycle Count Definitions/Count Classes",
            "description":"The Count Classes resource manages the count classes that the warehouse can use in the cycle count."
        },
        {
            "name":"Cycle Count Definitions/Count Items",
            "description":"The Count Items resource manages the items that the warehouse can use in the cycle count."
        },
        {
            "name":"Cycle Count Definitions/Count Subinventories",
            "description":"The Count Subinventories resource manages the subinventories that the warehouse can use with the cycle count."
        },
        {
            "name":"Cycle Count Transactions",
            "description":"The Cycle Count Transactions resource manages record counts for the count sequence."
        },
        {
            "name":"Cycle Count Transactions/Count Lines",
            "description":"The Count Lines resource manages transaction details for the count sequence."
        },
        {
            "name":"Details for Cycle Count Sequences",
            "description":"The Details for Cycle Count Sequences resource manages details for the cycle count sequences."
        },
        {
            "name":"Generate Lot Numbers",
            "description":"The Generate Lot Numbers resource manages lot numbers for items and organizations."
        },
        {
            "name":"Generate Serial Numbers",
            "description":"The Generate Serial Numbers resource manages new serial numbers for an item in an organization."
        },
        {
            "name":"In-transit Receipt Lots",
            "description":"The In-transit Receipt Lots resource manages the lot numbers for items while receiving shipment lines are in transit."
        },
        {
            "name":"In-transit Receipt Serials",
            "description":"The In-transit Receipt Serials resource manages the serial numbers that reference items when receiving shipment lines that are in transit."
        },
        {
            "name":"In-transit Shipment Lines",
            "description":"The In-transit Shipment Lines resource manages the shipment lines that are in transit and that are available to receive."
        },
        {
            "name":"In-transit Shipments",
            "description":"The In-transit Shipments resource manages the shipments that are in transit and that are available to receive."
        },
        {
            "name":"Inspection Statuses",
            "description":"The Inspection Statuses resource manages the inspection status values."
        },
        {
            "name":"Inventory Account Aliases",
            "description":"The Inventory Account Aliases resource manages the aliases for the active inventory account. An account alias is an alternate name for the account number that the general ledger references. You can use it to more easily identify an account when performing a transaction."
        },
        {
            "name":"Inventory Balance Transactions",
            "description":"The Inventory Balance Transactions resource manages inventory balances."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines",
            "description":"The Transaction Lines resource manages details about the inventory balance."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Flexfields for Transaction Lines",
            "description":"The Flexfields for Transaction Lines resource manages descriptive flexfields that contain details about the transaction line."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Lot Details for Items",
            "description":"The Lot Details for Items resource manages details about the lot that the inventory balance references when a lot controls the item."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Flexfields for Lots",
            "description":"The Flexfields for Lots resource manages descriptive flexfields that contain details about the lot."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items",
            "description":"The Serial and Lot Details for Items resource manages details that the inventory balance references when a serial and a lot control the item."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items/Flexfields for Serials and Lots",
            "description":"The Flexfields for Serials and Lots resource manages descriptive flexfields that contain details about the item when a serial and lot control the item."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Serial Details for Items",
            "description":"The Serial Details for Items resource manages details about the serial that the inventory balance references when a serial controls the item."
        },
        {
            "name":"Inventory Balance Transactions/Transaction Lines/Serial Details for Items/Flexfields for Serials",
            "description":"The Flexfields for Serials resource manages descriptive flexfields that contain details about the item when a serial controls the item."
        },
        {
            "name":"Inventory Lots for Items",
            "description":"The Inventory Lots for Items resource manages lot numbers for items in an organization."
        },
        {
            "name":"Inventory Organizations",
            "description":"The Inventory Organizations resource manages subsets of organizations or types of organizations. A logistic, manufacturing, or asset management application can use this resource to find inventory organizations."
        },
        {
            "name":"Inventory Organizations/Inventory Organization Parameters",
            "description":"The Inventory Organization Parameters resource manages the default values for the warehouse transaction or inventory transaction for each inventory organization."
        },
        {
            "name":"Inventory Organizations/Plant Parameters",
            "description":"The Plant Parameters resource manages the plant defaults for each manufacturing organization or maintenance organization."
        },
        {
            "name":"Inventory Owning Party Sites",
            "description":"The Inventory Owning Party Sites resource manages details about the owning party site."
        },
        {
            "name":"Inventory Serial Numbers for Items",
            "description":"The Inventory Serial Numbers for Items resource manages the current serial numbers for items in organizations."
        },
        {
            "name":"Inventory Transaction Accounts",
            "description":"The Inventory Transaction Accounts resource manages the account numbers from the general ledger that costs the inventory transactions."
        },
        {
            "name":"Inventory Transaction Reasons",
            "description":"The Inventory Transaction Reasons resource manages the inventory transaction reasons that are currently active. A transaction reason allows you to classify or explain the reason for a transaction. You can use them with different types of item transactions."
        },
        {
            "name":"Inventory Transaction Types",
            "description":"The Inventory Transaction Types resource manages the inventory transaction types that are active. A transaction type is a combination of a transaction source type and a transaction action. You can use it to classify a transaction for reporting and querying purposes."
        },
        {
            "name":"Inventory Transactions",
            "description":"The Inventory Transactions resource manages one or more inventory transactions."
        },
        {
            "name":"Inventory Transactions/Transaction Lines",
            "description":"The Transaction Lines resource manages details about each transaction line."
        },
        {
            "name":"Inventory Transactions/Transaction Lines/Lots That Control Items",
            "description":"The Lots That Control Items resource manages details about the lot. Use it when only the lot controls the item."
        },
        {
            "name":"Inventory Transactions/Transaction Lines/Lots That Share Control",
            "description":"The Lots That Share Control resource manages details about the lots that control the item. Use it when lots and serials control the item."
        },
        {
            "name":"Inventory Transactions/Transaction Lines/Lots That Share Control/Serials That Share Control",
            "description":"The Serials That Share Control resource manages details about the serials that control the item. Use it when lots and serials control the item."
        },
        {
            "name":"Inventory Transactions/Transaction Lines/Serials That Control Items",
            "description":"The Serials That Control Items resource manages details about the serial. Use it when only the serial controls the item."
        },
        {
            "name":"Issue Lots",
            "description":"The Issue Lots resource manages the lot numbers to use when performing an issue or subinventory transfer for an inventory organization, item, subinventory, locator, or lot combination."
        },
        {
            "name":"Issue Serials",
            "description":"The Issue Serials resource manages the serial numbers that are available and that you can use to perform an issue or subinventory transfer for an inventory organization, item, subinventory, locator, or lot combination."
        },
        {
            "name":"Items",
            "description":"The Items resource manages item details. An item is any part, material, product or service that is unique when compared to the attributes of any other item."
        },
        {
            "name":"Items/Item Revisions",
            "description":"The Item Revisions resource manages item revision details."
        },
        {
            "name":"Lines to Correct",
            "description":"The Lines to Correct resource manages the received lines that are available for correction."
        },
        {
            "name":"Lines to Inspect",
            "description":"The Lines to Inspect resource manages the received lines that require inspection."
        },
        {
            "name":"Lines to Put Away",
            "description":"The Lines to Put Away resource manages the lines that are available to put away."
        },
        {
            "name":"Lines to Receive",
            "description":"The Lines to Receive resource manages the lines that are available to receive."
        },
        {
            "name":"Lines to Return",
            "description":"The Lines to Return resource manages the received lines that are available to return."
        },
        {
            "name":"Material Transactions",
            "description":"The Material Transactions resource manages the movement of an item or product between the shop floor and the subinventory or locator."
        },
        {
            "name":"Material Transactions/Material Transaction Details",
            "description":"The Material Transaction Details resource manages the details of the component issued to or returned from the work order."
        },
        {
            "name":"Material Transactions/Material Transaction Details/Transaction Lots",
            "description":"The Transaction Lots resource manages details of the lot of the component issued to or returned from the work order."
        },
        {
            "name":"Material Transactions/Material Transaction Details/Transaction Serials",
            "description":"The Transaction Serials resource manages details of the serial of the component issued to or returned from the work order."
        },
        {
            "name":"On-hand Quantity Details",
            "description":"The On-hand Quantity Details resource manages details about the on-hand quantity in the primary UOM or secondary UOM. You can query for various quantities, such as on-hand, receiving, inbound, reserved, or consigned."
        },
        {
            "name":"On-hand Quantity Details/Consigned Quantity Details",
            "description":"The Consigned Quantity Details resource uses information about the item and inventory location that you provide to get details about the consigned quantities in the primary UOM or secondary UOM."
        },
        {
            "name":"On-hand Quantity Details/Inbound Quantity Details",
            "description":"The Inbound Quantity Details resource uses information about the item and inventory location that you provide to get details about the inbound quantities in the primary UOM or secondary UOM."
        },
        {
            "name":"Operation Transactions",
            "description":"The Operation Transactions resource manages the quantity change that occurred between the From dispatch state and the To dispatch state of the operation."
        },
        {
            "name":"Operation Transactions/Operation Transaction Details",
            "description":"The Operation Transaction Details resource manages details of the operation transaction."
        },
        {
            "name":"Operation Transactions/Operation Transaction Details/Transaction Lots",
            "description":"The Transaction Lots resource manages details of the assembly lot."
        },
        {
            "name":"Operation Transactions/Operation Transaction Details/Transaction Serials",
            "description":"The Transaction Serials resource manages details of the assembly serial."
        },
        {
            "name":"Pick Slip Details",
            "description":"The Pick Slip Details resource manages the transaction details about confirming the pick, such as pick slip information, quantities, locator information, and inventory control details, such as lot numbers and serial numbers."
        },
        {
            "name":"Pick Slip Details/Pick Lines",
            "description":"The Pick Lines resource manages picking details that describe the line to confirm."
        },
        {
            "name":"Pick Slip Details/Pick Lines/Lot Details",
            "description":"The Lot Details resource manages lot details for the item picked."
        },
        {
            "name":"Pick Slip Details/Pick Lines/Lot Details/Serial Details in the Lot",
            "description":"The Serial Details in the Lot resource manages details about the serial when the lot controls the picked item. Use this resource when the lot controls the item."
        },
        {
            "name":"Pick Slip Details/Pick Lines/Serial Details",
            "description":"The Serial Details resource manages details about the serial that controls the picked item. Use this resource when the serial controls the item."
        },
        {
            "name":"Pick Transactions",
            "description":"The Pick Transactions resource manages transaction details that describe the pick. For exaxmple, pick slip details, quantity, locator details, and inventory control details, such as lot numbers and serial numbers."
        },
        {
            "name":"Pick Transactions/Pick Lines",
            "description":"The Pick Lines resource manages picking details that describe the line to confirm."
        },
        {
            "name":"Pick Transactions/Pick Lines/Lots That Share Control",
            "description":"The Lots That Share Control resource manages the lot that controls the picked item. Use it when lots and serials control the item."
        },
        {
            "name":"Pick Transactions/Pick Lines/Lots That Share Control/Serials That Share Control",
            "description":"The Serials That Share Control resource manages the serial that controls the picked item. Use it when lots and serials control the item."
        },
        {
            "name":"Pick Transactions/Pick Lines/Lots for Picked Items",
            "description":"The Lots for Picked Items resource manages the lot that controls the picked item. Use it when a lot controls the item."
        },
        {
            "name":"Pick Transactions/Pick Lines/Serials for Picked Items",
            "description":"The Serials for Picked Items resource manages the serial that controls the picked item. Use it when a serial controls the item."
        },
        {
            "name":"Production Resources",
            "description":"The Production Resources resource manages production resources that a manufacturing plant uses. A production resource can include labor, equipment, and tools that you allocate to a work center. You can categorize a production resource as Labor or Equipment."
        },
        {
            "name":"Production Resources/Flexfields",
            "description":"The Flexfields for Production Resources resource manages descriptive flexfields that the production resource uses."
        },
        {
            "name":"Purchase Order Lines for Receiving",
            "description":"The Purchase Order Lines for Receiving resource manages the purchase orders lines that are available to receive."
        },
        {
            "name":"Purchase Order Receipt Serials",
            "description":"The Purchase Order Receipt Serials resource manages the serial numbers that are available to use for receipts."
        },
        {
            "name":"Purchase Order Schedules for Receiving",
            "description":"The Purchase Order Schedules for Receiving resource manages the purchase order schedules that are available to receive."
        },
        {
            "name":"Purchase Orders for Receiving",
            "description":"The Purchase Orders for Receiving resource manages the purchase orders that are available to receive."
        },
        {
            "name":"RMA Lines for Receiving",
            "description":"The RMA Lines for Receiving resource manages the lines of the return material authorization that are available for receiving."
        },
        {
            "name":"RMA Receipt Serials",
            "description":"The RMA Receipt Serials resource manages the serial numbers that are available and that you can use to receive a return material authorization. if you enable the receiving parameter Enforce Serial Number, and if the customer provides the serial number, then use the RMA Receipt Serials resource."
        },
        {
            "name":"RMA Restricted Lots",
            "description":"The RMA Restricted Lots resource manages the lot numbers that are available and that you can use to receive a return material authorization. If you enable the receiving parameter Enforce Lot Number, then you can use these lot numbers. The customer specifies these lots on the return material authorization."
        },
        {
            "name":"RMA Restricted Serials",
            "description":"The RMA Restricted Serials resource manages the serial numbers that are available and that you can use to receive a return material authorization. Use this action when you enable the receiving parameter Enforce Serial Number. The customer includes these serial numbers on the return material authorization."
        },
        {
            "name":"RMAs for Receiving",
            "description":"The RMAs for Receiving resource manages the return material authorizations that are available for receiving."
        },
        {
            "name":"Receipt Lots",
            "description":"The Receipt Lots resource manages the lot numbers that you can use with receipts."
        },
        {
            "name":"Receipts",
            "description":"The Receipts resource manages one or more receipts. Create a receipt for different types of items and for different document types, such as PO, RMA, In-Transit Shipment, Transfer Order, or ASN. Use this action for different routing techniques, such as Standard, Direct Delivery, or Inspection Required."
        },
        {
            "name":"Receipts/Receipt Headers",
            "description":"The Receipt Headers resource manages details about the receipt header or inbound shipment header."
        },
        {
            "name":"Receipts/Receipt Headers/Receipt Lines",
            "description":"The Receipt Lines resource manages details about the receipt line transaction or the inbound shipment line."
        },
        {
            "name":"Receipts/Receipt Headers/Receipt Lines/Lots That Control Items",
            "description":"The Lots That Control Items resource manages details about the lot when the lot controls the item."
        },
        {
            "name":"Receipts/Receipt Headers/Receipt Lines/Lots That Share Control",
            "description":"The Lots That Share Control resource manages details about the lot when the lot and the serial controls the item."
        },
        {
            "name":"Receipts/Receipt Headers/Receipt Lines/Lots That Share Control/Serials That Share Control",
            "description":"The Serials That Share Control resource manages details about the serial when the lot and the serial controls the item."
        },
        {
            "name":"Receipts/Receipt Headers/Receipt Lines/Serials That Control Items",
            "description":"The Serial Item Serials resource manages details about the serial when the serial controls the item."
        },
        {
            "name":"Receiving Countries of Origin",
            "description":"The Receiving Countries of Origin resource manages the countries."
        },
        {
            "name":"Receiving Parameters",
            "description":"The Receiving Parameters resource manages the receiving parameters for the organization."
        },
        {
            "name":"Receiving Transactions",
            "description":"The Receiving Transactions resource manages the receiving transaction that does one of the following: inspect as accept or reject, put away, return to vendor, return to customer, or correct."
        },
        {
            "name":"Receiving Transactions/Transaction Lines",
            "description":"The Transaction Lines resource manages details about the transaction and the inbound shipment line."
        },
        {
            "name":"Receiving Transactions/Transaction Lines/Lot Item Lots",
            "description":"The Lot Item Lots resource manages details about the lot. You can use this resource if the lot controls the item that the receipt references."
        },
        {
            "name":"Receiving Transactions/Transaction Lines/Lot Serial Item Lots",
            "description":"The Lot Serial Item Serials resource manages details about the serial. You can use this resource if the lot and serial controls the item."
        },
        {
            "name":"Receiving Transactions/Transaction Lines/Lot Serial Item Lots/Lot Serial Item Serials",
            "description":"The Lot Serial Item Lots resource manages details about the lot. You can use this resource if the lot and serial controls the item."
        },
        {
            "name":"Receiving Transactions/Transaction Lines/Serial Item Serials",
            "description":"The Serial Item Serials resource manages details about the serial. You can use this resource if the serial controls the item."
        },
        {
            "name":"Resource Transactions",
            "description":"The Resource Transactions resource manages the resource charges to the work order."
        },
        {
            "name":"Resource Transactions/Resource Transaction Details",
            "description":"The Resource Transaction Detail resource manages the details of the resource charges to the work order."
        },
        {
            "name":"Return Lots",
            "description":"The Return Lots resource manages the lot numbers that are available for returning items."
        },
        {
            "name":"Return Serials",
            "description":"The Return Serials resource manages the serial numbers that are available and that you can use to return items."
        },
        {
            "name":"Return Serials for Lots",
            "description":"The Return Serials for Lots resource manages the serial numbers that are available and that you can use to return the items that a lot references."
        },
        {
            "name":"Split Pick Transactions",
            "description":"The Split Pick Transactions resource manages splits for pick lines."
        },
        {
            "name":"Transfer Order Lines for Receiving",
            "description":"The Transfer Order Lines for Receiving resource manages the transfer order lines that are available for receiving."
        },
        {
            "name":"Transfer Orders for Receiving",
            "description":"The Transfer Orders for Receiving resource manages the transfer orders that are available for receiving."
        },
        {
            "name":"Unit of Measure Conversions",
            "description":"The Unit of Measure Conversions resource manages the conversion rate to use when converting from one unit of measure to another unit of measure. If the conversion is unique for an item, then use this resource to create the conversion rate for this item."
        },
        {
            "name":"Units of Measure",
            "description":"The Units of Measure resource manages the units of measure that an application, system, or service can use with the transaction."
        },
        {
            "name":"Validate Corrected Quantities",
            "description":"The Validate Corrected Quantities resource manages the quantity for the corrected transaction. This transaction can be a receipt, inspection, putaway, or return."
        },
        {
            "name":"Validate Inspected Quantities",
            "description":"The Validate Inspected Quantities resource validates the quantity to inspect."
        },
        {
            "name":"Validate Inventory Transaction Quantities",
            "description":"The Validate Inventory Transaction Quantities resource manages the quantities on inventory transactions."
        },
        {
            "name":"Validate Picked Quantities",
            "description":"The Validate Picked Quantities resource manages the picked quantity for one pick slip line."
        },
        {
            "name":"Validate Put Away Quantities",
            "description":"The Validate Put Away Quantities resource manages the quantity to put away."
        },
        {
            "name":"Validate Receive Quantities",
            "description":"The Validate Receive Quantities resource manages the quantity to receive."
        },
        {
            "name":"Validate Return Quantities",
            "description":"The Validate Return Quantities resource manages the quantity to return."
        },
        {
            "name":"Work Areas",
            "description":"The Work Areas resource manages the names of the work areas that a manufacturing plant contains. A work area is a physical area in a manufacturing plant where the plant performs production."
        },
        {
            "name":"Work Areas/Flexfields for Work Areas",
            "description":"The Flexfields for Work Areas resource manages the names of the descriptive flexfields that a work area references."
        },
        {
            "name":"Work Centers",
            "description":"The Work Centers resource manages work centers that the work area contains. A work center is a production unit that consists of people or equipment who possess similar capabilities. Each work center is part of a work area. You can use it to plan capacity requirements and to schedule detailed work."
        },
        {
            "name":"Work Centers/Flexfields for Work Centers",
            "description":"The Flexfields for Work Centers resource manages the descriptive flexfields that the work center references."
        },
        {
            "name":"Work Centers/Work Center Resources",
            "description":"The Work Center Resources resource manages work center resources that the work center uses."
        },
        {
            "name":"Work Order Operations for Dispatch Lists",
            "description":"The Work Order Operations for Dispatch Lists resource manages the work order operations for the dispatch list. The application must work on these operations for a work area and for one or more work centers. It displays counts and optional operations for work orders that are in Released status or Completed status."
        },
        {
            "name":"Work Order Operations for Dispatch Lists/Product Serials for Work Order Operations",
            "description":"The Product Serials for Work Order Operations resource manages the serials for the work order operation according to dispatch status."
        },
        {
            "name":"Work Order Statuses",
            "description":"The Work Order Statuses resource manages the work order statuses."
        },
        {
            "name":"Work Orders",
            "description":"The Work Orders resource manages details about what, how to, how many, and when to manufacture an item. Each work order describes the item, work definition, operations, resources, components, quantities, and dates. For details, see Work Orders: Overview."
        },
        {
            "name":"Work Orders Metrics",
            "description":"The Work Orders Metrics resource manages the work order metrics for the plant."
        },
        {
            "name":"Work Orders/Active Operations",
            "description":"The Active Operations for Work Orders resource manages each active operation. An active operation is an operation that contains a quantity that is greater than zero."
        },
        {
            "name":"Work Orders/Attachments",
            "description":"The Work Order Attachments resource manages documents that the user attached to the work order."
        },
        {
            "name":"Work Orders/Flexfields",
            "description":"The Work Order Flexfields resource manages the descriptive flexfields that the work order references."
        },
        {
            "name":"Work Orders/Materials",
            "description":"The Work Order Materials resource manages materials that the operations use to process the work order."
        },
        {
            "name":"Work Orders/Materials/Material Attachments",
            "description":"The Attachments for Materials resource manages documents that the user attached to the materials that the work order operation processes."
        },
        {
            "name":"Work Orders/Materials/Material Flexfields",
            "description":"The Flexfields for operation materials resource manages descriptive flexfields that contain details about the materials that the work order operation processes."
        },
        {
            "name":"Work Orders/Operations",
            "description":"The Work Order Operations resource manages the operations that the application performs to process the work order."
        },
        {
            "name":"Work Orders/Operations/Materials",
            "description":"The Materials for Operations resource manages materials that the work order operation processes, including material requirements."
        },
        {
            "name":"Work Orders/Operations/Operation Attachments",
            "description":"The Attachments for Operations resource manages documents that the user attached to the operation that the work order performs."
        },
        {
            "name":"Work Orders/Operations/Operation Flexfields",
            "description":"The Flexfields for Operations resource manages descriptive flexfields that each work order operation references."
        },
        {
            "name":"Work Orders/Operations/Operation Resources",
            "description":"The Resources for Operations resource manages resources that the work order operation processes, including resource requirements."
        },
        {
            "name":"Work Orders/Operations/Operation Serials",
            "description":"The Serials for Operations resource manages the work order operation for the serial."
        },
        {
            "name":"Work Orders/Reservations",
            "description":"The Work Order Reservations resource manages the demand documents that the application uses to reserve the output quantity for the work order."
        },
        {
            "name":"Work Orders/Resources",
            "description":"The Work Order Resources resource manages resources that the operations use to process the work order."
        },
        {
            "name":"Work Orders/Resources/Resource Attachments",
            "description":"The Attachments for Resources resource manages details about the documents that the user attached to the resources that the work order operations use."
        },
        {
            "name":"Work Orders/Resources/Resource Flexfields",
            "description":"The Flexfields for Resources resource manages descriptive flexfields that contain details about the resources that the work order operations use."
        },
        {
            "name":"Work Orders/Serials",
            "description":"The Work Order Serials resource manages serial numbers that identifiy the assemblies that the work order references."
        }
    ],
    "paths":{
        "/productManagementCommonApi/resources/11.12.1.0/items":{
            "get":{
                "summary":"Get all items",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/items"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Items"
                ],
                "x-internal-id":"productManagementCommonApi-resources-11.12.1.0-items-get"
            }
        },
        "/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}":{
            "get":{
                "summary":"Get one item",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/items-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Items"
                ],
                "x-internal-id":"productManagementCommonApi-resources-11.12.1.0-items-{itemsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"itemsUniqID",
                    "description":"Identifier to Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/child/ItemRevision":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find item revisions. Finder Variables:<ul><li>RevisionId; integer; Value that uniquely identifies the revision of the revised item.</li></ul></li><li>AltRevisionCodeKey: Find revisions according to the revision code. Finder Variables:<ul><li>AltRevisionCode; string; Abbreviation that identifies the revision.</li><li>ItemId; integer; Find revisions according to the item.</li><li>OrganizationId; integer; Value that uniquely identifies the revision organization.</li><li>RevisionCode; string; Abbreviation that identifies the revision.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/items-ItemRevision"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Items/Item Revisions"
                ],
                "x-internal-id":"productManagementCommonApi-resources-11.12.1.0-items-{itemsUniqID}-child-ItemRevision-get"
            },
            "parameters":[
                {
                    "name":"itemsUniqID",
                    "description":"Identifier to Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/productManagementCommonApi/resources/11.12.1.0/items/{itemsUniqID}/child/ItemRevision/{RevisionId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/items-ItemRevision-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Items/Item Revisions"
                ],
                "x-internal-id":"productManagementCommonApi-resources-11.12.1.0-items-{itemsUniqID}-child-ItemRevision-{RevisionId}-get"
            },
            "parameters":[
                {
                    "name":"itemsUniqID",
                    "description":"Identifier to Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"RevisionId",
                    "description":"Value that uniquely identifies the revision of the item.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/rmaReceiptSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find serial numbers that are available and that you can use to receive a return material authorization according to the bind variables that you provide. bindOrganizationId and bindItemId are required. bindSerialNumber is optional. Finder Variables:<ul><li>bindSerialNumber; string; Value that uniquely identifies a single item in inventory, and that logistics will not use for a similar item.</li></ul></li><li>PrimaryKey: Find the serial number to use when receiving a return material authorization according to the serial number. Finder Variables:<ul><li>SerialNumber; string; Value that uniquely identifies a single item in inventory, and that logistics will not use for a similar item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaReceiptSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "RMA Receipt Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaReceiptSerials-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/rmaReceiptSerials/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaReceiptSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "RMA Receipt Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaReceiptSerials-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Value that uniquely identifies a single item in inventory that logistics will not use for a similar item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrdersForReceiving":{
            "get":{
                "summary":"Get all purchase orders",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganization: Find purchase orders that are available to receive according to organization. Finder Variables:<ul><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the receiving organization.</li><li>bindPurchaseOrder; string; Number that identifies the purchase order, which is a commercial document that you can use to send a request to a seller to supply a product or a service in return for payment.</li><li>bindSoldToLegalEntity; string; Name of the legal entity to sell the item to.</li><li>bindSupplier; string; Name of the supplier who provides the goods or services that are part of the purchase order, in return for what might or might not require payment.</li></ul></li><li>PrimaryKey: Find purchase order that is available to receive according to the header Id of the purchase order. Finder Variables:<ul><li>POHeaderId; integer; Value that uniquely identifies the purchase order header.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrdersForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Purchase Orders for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrdersForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrdersForReceiving/{POHeaderId}":{
            "get":{
                "summary":"Get one purchase order",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrdersForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Purchase Orders for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrdersForReceiving-{POHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"POHeaderId",
                    "description":"Value that uniquely identifies the purchase order header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/rmaRestrictedSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find serial numbers that are available and that you can use to receive a return material authorization according to the bind variables that you provide. Use this finder when you enable the receiving parameter Enforce Serial Number. bindOrganizationId, bindReceiptAdviceLineId, and bindItemId are required. bindSerialNumber is optional. Finder Variables:<ul><li>bindLotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li><li>bindSerialNumber; string; Value that uniquely identifies a single item in inventory, and that logistics will not use for a similar item.</li></ul></li><li>PrimaryKey: Find the serial number to use when receiving a return material authorization according to the serial number. Finder Variables:<ul><li>SerialNumber; string; Value that uniquely identifies a single item in inventory, and that logistics will not use for a similar item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaRestrictedSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "RMA Restricted Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaRestrictedSerials-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/rmaRestrictedSerials/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaRestrictedSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "RMA Restricted Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaRestrictedSerials-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Value that uniquely identifies a single item in inventory and that logistics will not use for a similar item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/rmaLinesForReceiving":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndRMA: Find lines that are available for receiving according to the organization or the number that identifies the return material authorization. Finder Variables:<ul><li>bindItemDescription; string; Description of the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the receiving organization.</li><li>bindRMA; string; Number that identifies the return material authorization.</li><li>bindRMALine; string; Number that identifies the document line on the return material authorization.</li></ul></li><li>PrimaryKey: Find line that is available to receive according to the line Id on the receipt advice. Finder Variables:<ul><li>ReceiptAdviceLineId; integer; Value that uniquely identifies the line on the receipt advice that the application created for the return material authorization that it received from the customer.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaLinesForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "RMA Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaLinesForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/rmaLinesForReceiving/{ReceiptAdviceLineId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaLinesForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "RMA Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaLinesForReceiving-{ReceiptAdviceLineId}-get"
            },
            "parameters":[
                {
                    "name":"ReceiptAdviceLineId",
                    "description":"Value that uniquely identifies the line on the receipt advice that the application created for the return material authorization that it received from the customer.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/resourceTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Resource Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-resourceTransactions-get"
            },
            "post":{
                "summary":"Create transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Resource Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-resourceTransactions-post"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/resourceTransactions/{resourceTransactionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Resource Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-resourceTransactions-{resourceTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"resourceTransactionsUniqID",
                    "description":"Identifier to Resource Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/resourceTransactions/{resourceTransactionsUniqID}/child/ResourceTransactionDetail":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-ResourceTransactionDetail"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Resource Transactions/Resource Transaction Details"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-resourceTransactions-{resourceTransactionsUniqID}-child-ResourceTransactionDetail-get"
            },
            "post":{
                "summary":"Create details",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-ResourceTransactionDetail-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-ResourceTransactionDetail-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Resource Transactions/Resource Transaction Details"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-resourceTransactions-{resourceTransactionsUniqID}-child-ResourceTransactionDetail-post"
            },
            "parameters":[
                {
                    "name":"resourceTransactionsUniqID",
                    "description":"Identifier to Resource Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/resourceTransactions/{resourceTransactionsUniqID}/child/ResourceTransactionDetail/{ResourceTransactionDetailUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/resourceTransactions-ResourceTransactionDetail-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Resource Transactions/Resource Transaction Details"
                ],
                "x-internal-id":"resources-11.12.1.0-resourceTransactions-{resourceTransactionsUniqID}-child-ResourceTransactionDetail-{ResourceTransactionDetailUniqID}-get"
            },
            "parameters":[
                {
                    "name":"resourceTransactionsUniqID",
                    "description":"Identifier to Resource Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"ResourceTransactionDetailUniqID",
                    "description":"Identifier to Resource Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Cycle Count Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountTransactions-get"
            },
            "post":{
                "summary":"Create transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountTransactions-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountTransactions/{cycleCountTransactionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountTransactions-{cycleCountTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"cycleCountTransactionsUniqID",
                    "description":"Identifier to Cycle Count Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountTransactions/{cycleCountTransactionsUniqID}/child/countLines":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find count lines. Finder Variables:<ul><li>UniqueTransactionId; integer; Value that uniquely identifies the input count transaction. The system creates this value so the requestor does not need to provide it.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-countLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Cycle Count Transactions/Count Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountTransactions-{cycleCountTransactionsUniqID}-child-countLines-get"
            },
            "post":{
                "summary":"Create lines",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-countLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-countLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Transactions/Count Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountTransactions-{cycleCountTransactionsUniqID}-child-countLines-post"
            },
            "parameters":[
                {
                    "name":"cycleCountTransactionsUniqID",
                    "description":"Identifier to Cycle Count Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountTransactions/{cycleCountTransactionsUniqID}/child/countLines/{UniqueTransactionId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountTransactions-countLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Transactions/Count Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountTransactions-{cycleCountTransactionsUniqID}-child-countLines-{UniqueTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"cycleCountTransactionsUniqID",
                    "description":"Identifier to Cycle Count Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the input count transaction. The system creates this value so the requestor does not need to provide it.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrderLinesForReceiving":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByPOAndOrganization: Find purchase order lines that are available to receive according to the organization or the purchase order. Finder Variables:<ul><li>bindItemDescription; string; Description of the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the receiving organization.</li><li>bindPurchaseOrder; string; Number that identifies the purchase order, which is a commercial document that you can use to send a request to a seller to supply a product or a service in return for payment.</li><li>bindPurchaseOrderLine; integer; Number that identifies the purchase order line.</li><li>bindSupplierItem; string; Supplier item number from the purchase order line.</li></ul></li><li>PrimaryKey: Find the the purchase order line that is available to receive according to the Id of this line. Finder Variables:<ul><li>POLineId; integer; Value that uniquely identifies the purchase order line.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrderLinesForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Purchase Order Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrderLinesForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrderLinesForReceiving/{POLineId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrderLinesForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Purchase Order Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrderLinesForReceiving-{POLineId}-get"
            },
            "parameters":[
                {
                    "name":"POLineId",
                    "description":"Value that uniquely identifies the purchase order line to receive.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/issueLots":{
            "get":{
                "summary":"Get all issue lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLots: Find lot numbers that are available according to the bind variables that you provide. You can use these numbers to perform an issue or subinventory transfer for an inventory organization, item, subinventory, locator, or lot combination. bindOrganizationId, bindTransactionTypeId, and bindItemId are required. Finder Variables:<ul><li>bindLocatorId; integer; Unique value that identifies the locator. The locator is a physical area, such as a row, aisle, bin, or shelf, in the subinventory where you store the items.</li><li>bindLotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li><li>bindOwningEntityId; string; Value that uniquely identifies the owning party.</li><li>bindOwningType; string; Unique value that identifies the owning party that the consigned inventory references. Use bindOwningType to determine the on-hand quantity.</li><li>bindRevision; string; Item revision.</li><li>bindSubinventory; string; Name of the subinventory.</li></ul></li><li>PrimaryKey: Find lot numbers according to the primary key. Finder Variables:<ul><li>LotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/issueLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Issue Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-issueLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/issueLots/{LotNumber}":{
            "get":{
                "summary":"Get one issue lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/issueLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Issue Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-issueLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"LotNumber",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Material Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-materialTransactions-get"
            },
            "post":{
                "summary":"Create transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-materialTransactions-post"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-materialTransactions-{materialTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}/child/MaterialTransactionDetail":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-get"
            },
            "post":{
                "summary":"Create details",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-post"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}/child/MaterialTransactionDetail/{MaterialTransactionDetailUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details"
                ],
                "x-internal-id":"resources-11.12.1.0-materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-get"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"MaterialTransactionDetailUniqID",
                    "description":"Identifier to Material Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}/child/MaterialTransactionDetail/{MaterialTransactionDetailUniqID}/child/TransactionLot":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionLot"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details/Transaction Lots"
                ],
                "x-internal-id":"materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-child-TransactionLot-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionLot-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionLot-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details/Transaction Lots"
                ],
                "x-internal-id":"materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-child-TransactionLot-post"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"MaterialTransactionDetailUniqID",
                    "description":"Identifier to Material Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}/child/MaterialTransactionDetail/{MaterialTransactionDetailUniqID}/child/TransactionLot/{TransactionLotUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionLot-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details/Transaction Lots"
                ],
                "x-internal-id":"{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-child-TransactionLot-{TransactionLotUniqID}-get"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"MaterialTransactionDetailUniqID",
                    "description":"Identifier to Material Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"TransactionLotUniqID",
                    "description":"Identifier to Transaction Lots",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}/child/MaterialTransactionDetail/{MaterialTransactionDetailUniqID}/child/TransactionSerial":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionSerial"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details/Transaction Serials"
                ],
                "x-internal-id":"materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-child-TransactionSerial-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionSerial-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionSerial-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details/Transaction Serials"
                ],
                "x-internal-id":"materialTransactions-{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-child-TransactionSerial-post"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"MaterialTransactionDetailUniqID",
                    "description":"Identifier to Material Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/materialTransactions/{materialTransactionsUniqID}/child/MaterialTransactionDetail/{MaterialTransactionDetailUniqID}/child/TransactionSerial/{TransactionSerialUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/materialTransactions-MaterialTransactionDetail-TransactionSerial-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Material Transactions/Material Transaction Details/Transaction Serials"
                ],
                "x-internal-id":"{materialTransactionsUniqID}-child-MaterialTransactionDetail-{MaterialTransactionDetailUniqID}-child-TransactionSerial-{TransactionSerialUniqID}-get"
            },
            "parameters":[
                {
                    "name":"materialTransactionsUniqID",
                    "description":"Identifier to Material Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"MaterialTransactionDetailUniqID",
                    "description":"Identifier to Material Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"TransactionSerialUniqID",
                    "description":"Identifier to Transaction Serials",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find pick transactions according to TransactionHeaderId. Finder Variables:<ul><li>TransactionHeaderId; integer; Value that uniquely identifies the inventory transaction header.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-get"
            },
            "post":{
                "summary":"Create pick transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-get"
            },
            "post":{
                "summary":"Create pick lines",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-post"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/lotItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lot numbers for lot items according to primary key. Finder Variables:<ul><li>Lot; string; Value that uniquely identifies the lot that includes the picked item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots for Picked Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots for Picked Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotItemLots-post"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/lotItemLots/{Lot}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots for Picked Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotItemLots-{Lot}-get"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot that includes the picked item. The lot includes items that you produce together as a group and that share similar production costs and specifications. Applies when only the lot controls the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/lotSerialItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lots for lot serial items according to primary key. Finder Variables:<ul><li>Lot; string; Value that uniquely identifies the lot that includes the picked item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots That Share Control"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotSerialItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots That Share Control"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotSerialItemLots-post"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/lotSerialItemLots/{Lot}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots That Share Control"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotSerialItemLots-{Lot}-get"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot that includes the picked item. The lot includes items that you produce together as a group and that share similar production costs and specifications. Applies when the lot and the serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/lotSerialItemLots/{Lot}/child/lotSerialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serial numbers for lot serial items according to primary key. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range of serial numbers for the lot.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotSerialItemLots-{Lot}-child-lotSerialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotSerialItemLots-{Lot}-child-lotSerialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot that includes the picked item. The lot includes items that you produce together as a group and that share similar production costs and specifications. Applies when the lot and the serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/lotSerialItemLots/{Lot}/child/lotSerialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-lotSerialItemLots-{Lot}-child-lotSerialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot that includes the picked item. The lot includes items that you produce together as a group and that share similar production costs and specifications. Applies when the lot and the serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range of serial numbers for the lot. Applies when the lot and the serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/serialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serial numbers for serial items according to primary key. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range of serial numbers when serials control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-serialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Serials for Picked Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-serialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-serialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-serialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Serials for Picked Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-serialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickTransactions/{TransactionHeaderId}/child/pickLines/{pickLinesUniqID}/child/serialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickTransactions-pickLines-serialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Transactions/Pick Lines/Serials for Picked Items"
                ],
                "x-internal-id":"resources-11.12.1.0-pickTransactions-{TransactionHeaderId}-child-pickLines-{pickLinesUniqID}-child-serialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"TransactionHeaderId",
                    "description":"Value that uniquely identifies the inventory transaction header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"pickLinesUniqID",
                    "description":"Identifier to Pick Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range of serial numbers for the item. Applies when only the serial controls the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/activeLocators":{
            "get":{
                "summary":"Get all locators",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findRestrictedLocators: Find inventory locators that the warehouse can use to fulfill the item and meet the requirements of the transaction type. Finder Variables:<ul><li>bindItemId; integer; Value that uniquely identifies the item.</li><li>bindTransactionTypeId; integer; Value that uniquely identifies the transaction type.</li></ul></li><li>PrimaryKey: Find active locators according to the inventory location identifier. Finder Variables:<ul><li>InventoryLocationId; integer; Value that uniquely identifies the inventory location.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/activeLocators"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Active Locators"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-activeLocators-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/activeLocators/{InventoryLocationId}":{
            "get":{
                "summary":"Get one locator",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/activeLocators-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Active Locators"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-activeLocators-{InventoryLocationId}-get"
            },
            "parameters":[
                {
                    "name":"InventoryLocationId",
                    "description":"Value that uniquely identifies the inventory locator.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receiptLots":{
            "get":{
                "summary":"Get all lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLots: Find lots that are available for receipts according to organization, transaction type, or item. Finder Variables:<ul><li>bindLotNumber; string; Number assigned to an item or group of items for identification purposes.</li></ul></li><li>PrimaryKey: Find lot that is available for receiving according to the lot number. Finder Variables:<ul><li>LotNumber; string; Number assigned to an item or group of items for identification purposes.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receiptLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipt Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receiptLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/receiptLots/{LotNumber}":{
            "get":{
                "summary":"Get one lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receiptLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipt Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receiptLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"LotNumber",
                    "description":"Number assigned to an item or group of items for identification purposes.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/generateLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Generate Lot Numbers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-generateLots-get"
            },
            "post":{
                "summary":"Generate lot numbers",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Generate Lot Numbers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-generateLots-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/generateLots/{generateLotsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Generate Lot Numbers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-generateLots-{generateLotsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"generateLotsUniqID",
                    "description":"Identifier to Generate Lot Numbers",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrdersMetrics":{
            "get":{
                "summary":"Get all metrics",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>WorkOrderOrgAndWorkAreaCenterFilter: Find work order metrics according to organization Id, work area Id, or work center Id. Finder Variables:<ul><li>DueDays; integer; Work orders according to days overdue. For example, if DueDays contains 7, then get the work orders that include a scheduled completion date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Primary key that uniquely identifies the organization. Manufacturing generates this primary key when it creates the organization. This attribute is required.</li><li>Tolerance; integer; Work orders according to overdue work orders. For example, if the tolerance is one hour, then this resource will not return work orders that are one hour or less overdue.</li><li>WorkAreaId; integer; Primary key that uniquely identifies the work area. Manufacturing generates this primary key when it creates the work area.</li><li>WorkCenterId; integer; Primary key that uniquely identifies the work center. Manufacturing generates this primary key when it creates the work center.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrdersMetrics"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders Metrics"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrdersMetrics-get"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/workOrdersMetrics/{workOrdersMetricsUniqID}":{
            "get":{
                "summary":"Get one metric",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrdersMetrics-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders Metrics"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrdersMetrics-{workOrdersMetricsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"workOrdersMetricsUniqID",
                    "description":"Identifier to Work Orders Metrics",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inTransitShipments":{
            "get":{
                "summary":"Get all shipments",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndShipment: Find shipments that are in transit and that are available to receive according to organization or shipment number. Finder Variables:<ul><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; string; Value that uniquely identifies the organization.</li><li>bindReceiptSource; string; Source type of the shipment. Values include INVENTORY or TRANSFER ORDER.</li><li>bindShipment; string; Number that identifies the shipment of goods.</li><li>bindSourceOrganizationCode; string; Abbreviation that identifies the organization that shipped the item.</li><li>bindSourceOrganizationName; string; Name of the organization that shipped the item.</li></ul></li><li>PrimaryKey: Find shipments that are in transit and that are available to receive according to the shipment header Id. Finder Variables:<ul><li>ShipmentHeaderId; integer; Value that uniquely identifies the inbound shipment.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitShipments"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "In-transit Shipments"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitShipments-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inTransitShipments/{ShipmentHeaderId}":{
            "get":{
                "summary":"Get one shipment",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitShipments-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "In-transit Shipments"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitShipments-{ShipmentHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"ShipmentHeaderId",
                    "description":"Value that uniquely identifies the shipment header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails":{
            "get":{
                "summary":"Get all details",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find pick slip details according to primary key. Finder Variables:<ul><li>PickSlip; integer; Value that uniquely identifies the</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Slip Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}":{
            "get":{
                "summary":"Get one detail",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Slip Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Pick slip that the pick line references. Finder Variables:<ul><li>TransactionId; integer; Find pick slip lines according to primary key.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}/child/itemLots":{
            "get":{
                "summary":"Get all lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Value that uniquely identifies the Finder Variables:<ul><li>Lot; string; transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines/Lot Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-child-itemLots-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}/child/itemLots/{Lot}":{
            "get":{
                "summary":"Get one lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines/Lot Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-child-itemLots-{Lot}-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}/child/itemLots/{Lot}/child/itemLotSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find pick slip item lots according to primary key. Finder Variables:<ul><li>FromSerialNumber; string; Value that uniquely identifies the lot.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots-itemLotSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines/Lot Details/Serial Details in the Lot"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-child-itemLots-{Lot}-child-itemLotSerials-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}/child/itemLots/{Lot}/child/itemLotSerials/{FromSerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-itemLots-itemLotSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines/Lot Details/Serial Details in the Lot"
                ],
                "x-internal-id":"resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-child-itemLots-{Lot}-child-itemLotSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"Lot",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range of serial numbers for the lot.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}/child/itemSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find pick slip item lot serials according to pimary key. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range of serial numbers for the lot.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-itemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines/Serial Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-child-itemSerials-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/pickSlipDetails/{PickSlip}/child/pickLines/{TransactionId}/child/itemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/pickSlipDetails-pickLines-itemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Pick Slip Details/Pick Lines/Serial Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-pickSlipDetails-{PickSlip}-child-pickLines-{TransactionId}-child-itemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"PickSlip",
                    "description":"Value that uniquely identifies the pick slip.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"TransactionId",
                    "description":"Value that uniquely identifies the<br>transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range of serial numbers for the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find receipts. Finder Variables:<ul><li>GroupId; integer; Value that uniquely identifies the group that contains the receipt.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-get"
            },
            "post":{
                "summary":"Create receipts",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find receipt headers. Finder Variables:<ul><li>UniqueHeaderId; integer; Value that uniquely identifies the receipt header.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-get"
            },
            "post":{
                "summary":"Create headers",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find receipt lines. Finder Variables:<ul><li>UniqueTransactionId; integer; Value that uniquely identifies the receiving transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-get"
            },
            "post":{
                "summary":"Create lines",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/lotItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lot numbers when lots control the item. Finder Variables:<ul><li>LotNumber; string; Lot number for the item when lots control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotItemLots-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/lotItemLots/{LotNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Control Items"
                ],
                "x-internal-id":"11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotItemLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item when lots control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/lotSerialItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lot serial item lot numbers. Finder Variables:<ul><li>LotNumber; string; Lot number for the item when lots and serials control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Share Control"
                ],
                "x-internal-id":"resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotSerialItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Share Control"
                ],
                "x-internal-id":"resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotSerialItemLots-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Share Control"
                ],
                "x-internal-id":"11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item when lots and serials control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}/child/lotSerialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lot and serial controlled item serial numbers. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range of serial numbers when lots and serials control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item when lots and serials control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}/child/lotSerialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item when lots and serials control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range of serial numbers when lots and serials control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/serialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serial item serial numbers. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range of serial numbers when lots control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-serialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Serials That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-serialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-serialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-serialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Serials That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-serialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receipts/{GroupId}/child/receiptHeaders/{UniqueHeaderId}/child/receiptLines/{UniqueTransactionId}/child/serialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receipts-receiptHeaders-receiptLines-serialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receipts/Receipt Headers/Receipt Lines/Serials That Control Items"
                ],
                "x-internal-id":"receipts-{GroupId}-child-receiptHeaders-{UniqueHeaderId}-child-receiptLines-{UniqueTransactionId}-child-serialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group that contains the receipts and transactions from each service call. The system creates this value. It is recommended that you leave the value for this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueHeaderId",
                    "description":"Value that uniquely identifies the receipt header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range of serial numbers when serials control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactions-get"
            },
            "post":{
                "summary":"Create inventory transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactions-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find transaction lines. Finder Variables:<ul><li>UniqueTransactionId; integer; Value that uniquely identifies the transaction line.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-get"
            },
            "post":{
                "summary":"Create transaction lines",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-post"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/lotItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lots. Use this finder when only the lot controls the item. Finder Variables:<ul><li>LotNumber; string; Number of the lot that controls the item. Use this finder when only the lot controls the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotItemLots-post"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/lotItemLots/{LotNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Control Items"
                ],
                "x-internal-id":"11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotItemLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number. Applies when only the lot controls the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lots. Use this finder when lots and serials control the item. Finder Variables:<ul><li>LotNumber; string; Number of the lot that controls the item. Use this finder when lots and serials control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Share Control"
                ],
                "x-internal-id":"resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Share Control"
                ],
                "x-internal-id":"resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-post"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Share Control"
                ],
                "x-internal-id":"11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}/child/lotSerialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serials. Use this finder when lots and serials control the item. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range. Use this finder when lots and serials control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}/child/lotSerialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Lots That Share Control/Serials That Share Control"
                ],
                "x-internal-id":"child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/serialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serials. Use this finder when only the serial controls the item. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in a range. Use this finder when only the serial controls the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-serialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Serials That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-serialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-serialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-serialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Serials That Control Items"
                ],
                "x-internal-id":"resources-11.12.1.0-inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-serialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactions/{inventoryTransactionsUniqID}/child/transactionLines/{UniqueTransactionId}/child/serialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactions-transactionLines-serialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transactions/Transaction Lines/Serials That Control Items"
                ],
                "x-internal-id":"inventoryTransactions-{inventoryTransactionsUniqID}-child-transactionLines-{UniqueTransactionId}-child-serialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"inventoryTransactionsUniqID",
                    "description":"Identifier to Inventory Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the transaction line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in a range. Applies when only the serial controls the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inTransitShipmentLines":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndShipment: Find shipment lines that are in transit and that are available to receive according to organization or shipment number. Finder Variables:<ul><li>bindItemDescription; string; Description of the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the organization.</li><li>bindShipment; string; Number that identifies the shipment of goods.</li><li>bindShipmentLine; integer; Number that identifies the shipment line that is in transit.</li></ul></li><li>PrimaryKey: Find shipments that are in transit and available to receive according to the shipment line Id. Finder Variables:<ul><li>ShipmentLineId; integer; Value that uniquely identifies the shipment line that is in transit.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitShipmentLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "In-transit Shipment Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitShipmentLines-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inTransitShipmentLines/{ShipmentLineId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitShipmentLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "In-transit Shipment Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitShipmentLines-{ShipmentLineId}-get"
            },
            "parameters":[
                {
                    "name":"ShipmentLineId",
                    "description":"Value that uniquely identifies the shipment line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/linesToPutAway":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLines: Find received lines that are available to put away according to the bind variables that you provide. You must include the following: 1, bindOrganizationId or bindOrganizationCode; 2, bindDocumentType or bindSourceDocumentCode; 3, bindDocumentNumber. Finder Variables:<ul><li>bindASNLineNumber; integer; Line number for the advance shipment notice.</li><li>bindASNNumber; string; Number that identifies the advanced shipment notice for a shipment from a supplier.</li><li>bindBackToBack; string; Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order.</li><li>bindConsigned; string; Contains Y or N. Y: the receipt is consigned. N: the receipt is not consigned.</li><li>bindDocumentDistributionNumber; integer; Distribution number for the document schedule. You can use it only for a purchase order or a transfer order.</li><li>bindDocumentLineNumber; string; Line number for the document number.</li><li>bindDocumentNumber; string; Document number that identifies one of the following: a purchase order number for a purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for a source document code of type RMA; the in-transit shipment number for a source document code of type INVENTORY; or the transfer order number for a source document code of type TRANSFER ORDER.</li><li>bindDocumentScheduleNumber; string; Schedule number for the document line number.</li><li>bindDocumentType; string; Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute.</li><li>bindFromDate; string; Start date of the time interval to use when finding the lines to put away.</li><li>bindItemId; integer; Value that uniquely identifies an item.</li><li>bindItemNumber; string; Number that identifies the item to put away. An item is any part, material, product, or service that includes attributes that are unique when compared to other items.</li><li>bindOrganizationCode; string; Value that identifies the &lt;br&gt;ship-to organization code for the received line.</li><li>bindOrganizationId; integer; Value that uniquely identifies the ship-to organization for the received line.</li><li>bindPODistributionId; integer; Value that uniquely identifies the purchase order distribution.</li><li>bindPOHeaderId; integer; Value that uniquely identifies the purchase order header.</li><li>bindPOLineId; integer; Value that uniquely identifies the purchase order line.</li><li>bindPOLineLocationId; integer; Value that uniquely identifies the purchase order schedule.</li><li>bindParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li><li>bindReceiptAdviceHeaderId; integer; Value that uniquely identifies the receipt advice header.</li><li>bindReceiptAdviceLineId; integer; Value that uniquely identifies the receipt advice line.</li><li>bindReceiptNumber; string; Number that acknowledges that the warehouse received a shipment.</li><li>bindShipmentHeaderId; integer; Value that uniquely identifies the shipment header.</li><li>bindShipmentLineId; integer; Value that uniquely identifies the shipment line.</li><li>bindSourceDocumentCode; string; Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY.</li><li>bindToDate; string; End date of the time interval to use when finding the lines to put away.</li><li>bindTransferOrderDistId; integer; Value that uniquely identifies the transfer order distribution.</li><li>bindTransferOrderHeaderId; integer; Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location.</li><li>bindTransferOrderLineId; integer; Value that uniquely identifies the transfer order line.</li></ul></li><li>PrimaryKey: Abbreviation that identifies the ship-to organization for the line to put away. Finder Variables:<ul><li>ParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToPutAway"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Lines to Put Away"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToPutAway-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/linesToPutAway/{ParentTransactionId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToPutAway-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Lines to Put Away"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToPutAway-{ParentTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"ParentTransactionId",
                    "description":"Value that uniquely identifies the parent transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactionTypes":{
            "get":{
                "summary":"Get all types",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByNameOrDescription: Find inventory transaction types that are active according to transaction type name or description. Finder Variables:<ul><li>bindTransactionTypeDescription; string; Description of the transaction type.</li><li>bindTransactionTypeName; string; Name of the transaction type.</li></ul></li><li>PrimaryKey: Find inventory transaction types according to the primary key. Finder Variables:<ul><li>TransactionTypeId; integer; Value that uniquely identifies the transaction type.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactionTypes"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transaction Types"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactionTypes-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactionTypes/{TransactionTypeId}":{
            "get":{
                "summary":"Get one type",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactionTypes-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transaction Types"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactionTypes-{TransactionTypeId}-get"
            },
            "parameters":[
                {
                    "name":"TransactionTypeId",
                    "description":"Value that uniquely identifies the transaction type.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/dispatchListWorkOrderOperations":{
            "get":{
                "summary":"Get all operations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findBySerialNumber: Find work order operations and dispatch statuses according to the item serial number. Finder Variables:<ul><li>DispatchState; string; Current dispatch status of an operation, such as Ready to be worked on, Completed, Scrapped, or Rejected. It also represents Optional operations.</li><li>OrganizationCode; string; Abbreviation that identifies the inventory organization.</li><li>SerialNumber; string; Serial number of the item that the plant is manufacturing.</li></ul></li><li>PrimaryKey: Find operations that are at a dispatch state. Finder Variables:<ul><li>DispatchState; string; Current dispatch status of quantities, such as Ready to be worked on, Completed, Scrapped, or Rejected. It also represents Optional operations.</li><li>OperationId; integer; Value that uniquely identifies a work order operation. It is a primary key that the application generates when it creates an operation.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/dispatchListWorkOrderOperations"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Order Operations for Dispatch Lists"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-dispatchListWorkOrderOperations-get"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/dispatchListWorkOrderOperations/{dispatchListWorkOrderOperationsUniqID}":{
            "get":{
                "summary":"Get one operation",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/dispatchListWorkOrderOperations-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Order Operations for Dispatch Lists"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-dispatchListWorkOrderOperations-{dispatchListWorkOrderOperationsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"dispatchListWorkOrderOperationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OperationId and DispatchState ---for the Work Order Operations for Dispatch Lists resource and used to uniquely identify an instance of Work Order Operations for Dispatch Lists. The client should not generate the hash key value.  Instead, the client should query on the Work Order Operations for Dispatch Lists collection resource with a filter on the primary key values in order to navigate to a specific instance of Work Order Operations for Dispatch Lists.<br><br>For example: dispatchListWorkOrderOperations?q=OperationId=&lt;value1&gt;;DispatchState=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/dispatchListWorkOrderOperations/{dispatchListWorkOrderOperationsUniqID}/child/WorkOrderOperationProductSerial":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find details for work order operations according to the product serial Id. Finder Variables:<ul><li>WorkOrderProductSerialId; integer; Value that uniquely identifies the product serial number. It is a primary key that the application generates when it creates the serial number for an item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/dispatchListWorkOrderOperations-WorkOrderOperationProductSerial"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Order Operations for Dispatch Lists/Product Serials for Work Order Operations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-dispatchListWorkOrderOperations-{dispatchListWorkOrderOperationsUniqID}-child-WorkOrderOperationProductSerial-get"
            },
            "parameters":[
                {
                    "name":"dispatchListWorkOrderOperationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OperationId and DispatchState ---for the Work Order Operations for Dispatch Lists resource and used to uniquely identify an instance of Work Order Operations for Dispatch Lists. The client should not generate the hash key value.  Instead, the client should query on the Work Order Operations for Dispatch Lists collection resource with a filter on the primary key values in order to navigate to a specific instance of Work Order Operations for Dispatch Lists.<br><br>For example: dispatchListWorkOrderOperations?q=OperationId=&lt;value1&gt;;DispatchState=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/dispatchListWorkOrderOperations/{dispatchListWorkOrderOperationsUniqID}/child/WorkOrderOperationProductSerial/{WorkOrderProductSerialId}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/dispatchListWorkOrderOperations-WorkOrderOperationProductSerial-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Order Operations for Dispatch Lists/Product Serials for Work Order Operations"
                ],
                "x-internal-id":"dispatchListWorkOrderOperations-{dispatchListWorkOrderOperationsUniqID}-child-WorkOrderOperationProductSerial-{WorkOrderProductSerialId}-get"
            },
            "parameters":[
                {
                    "name":"dispatchListWorkOrderOperationsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OperationId and DispatchState ---for the Work Order Operations for Dispatch Lists resource and used to uniquely identify an instance of Work Order Operations for Dispatch Lists. The client should not generate the hash key value.  Instead, the client should query on the Work Order Operations for Dispatch Lists collection resource with a filter on the primary key values in order to navigate to a specific instance of Work Order Operations for Dispatch Lists.<br><br>For example: dispatchListWorkOrderOperations?q=OperationId=&lt;value1&gt;;DispatchState=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderProductSerialId",
                    "description":"Value that uniquely identifies the product serial number. It is a primary key that the application generates when it creates the serial number for an item.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/activeSubinventories":{
            "get":{
                "summary":"Get all subinventories",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findRestrictedSubinventories: Find subinventories that the warehouse can use to fulfill the item and meet the requirements of the transaction type. Finder Variables:<ul><li>bindItemId; integer; Value that uniquely identifies the item.</li><li>bindTransactionTypeId; integer; Value that uniquely identifies the transaction type.</li></ul></li><li>PrimaryKey: Find active subinventories accoding to organization and subinventory name. Finder Variables:<ul><li>OrganizationId; integer; Value that uniquely identifies the organization.</li><li>SecondaryInventoryName; string; Name of the subinventory.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/activeSubinventories"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Active Subinventories"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-activeSubinventories-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/activeSubinventories/{activeSubinventoriesUniqID}":{
            "get":{
                "summary":"Get one subinventory",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/activeSubinventories-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Active Subinventories"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-activeSubinventories-{activeSubinventoriesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"activeSubinventoriesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- SecondaryInventoryName and OrganizationId ---for the Active Subinventories resource and used to uniquely identify an instance of Active Subinventories. The client should not generate the hash key value.  Instead, the client should query on the Active Subinventories collection resource with a filter on the primary key values in order to navigate to a specific instance of Active Subinventories.<br><br>For example: activeSubinventories?q=SecondaryInventoryName=&lt;value1&gt;;OrganizationId=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/availableQuantityDetails":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/availableQuantityDetails"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Available Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-availableQuantityDetails-get"
            },
            "post":{
                "summary":"Create details",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/availableQuantityDetails-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/availableQuantityDetails-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Available Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-availableQuantityDetails-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/availableQuantityDetails/{availableQuantityDetailsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/availableQuantityDetails-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Available Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-availableQuantityDetails-{availableQuantityDetailsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"availableQuantityDetailsUniqID",
                    "description":"Identifier to Available Quantity Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/returnLots":{
            "get":{
                "summary":"Get all lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLots: Find lot numbers that are available and that you can use to return items according to the bind variables that you provide. bindOrganizationId, bindTransactionTypeId, bindItemId, and bindParentTransactionId are required. bindLotNumber is optional. Finder Variables:<ul><li>bindLotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li><li>PrimaryKey: Find lot numbers to use when returning the item according to the lot number. Finder Variables:<ul><li>LotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/returnLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Return Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-returnLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/returnLots/{LotNumber}":{
            "get":{
                "summary":"Get one lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/returnLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Return Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-returnLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"LotNumber",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inTransitReceiptLots":{
            "get":{
                "summary":"Get all lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLots: Find lot numbers according to the bind variables that you provide. All bind variables are required except bindLotNumber. You can use the inventoryTransactionTypes resource to get the bindTransactionTypeId bind variable. Finder Variables:<ul><li>bindLotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li><li>PrimaryKey: Find the lot number according to the lot number that you provide. Finder Variables:<ul><li>LotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitReceiptLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "In-transit Receipt Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitReceiptLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inTransitReceiptLots/{LotNumber}":{
            "get":{
                "summary":"Get one lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitReceiptLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "In-transit Receipt Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitReceiptLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"LotNumber",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrderStatuses":{
            "get":{
                "summary":"Get all statuses",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find details of the work order status according to the status Id as the primary key. Finder Variables:<ul><li>WoStatusId; integer; Primary key that uniquely identifies the work order status Id. Manufacturing generates this primary key when it creates the work order status.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrderStatuses"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Order Statuses"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrderStatuses-get"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/workOrderStatuses/{WoStatusId}":{
            "get":{
                "summary":"Get one status",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrderStatuses-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Order Statuses"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrderStatuses-{WoStatusId}-get"
            },
            "parameters":[
                {
                    "name":"WoStatusId",
                    "description":"Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates a work order status.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find receiving transactions. Finder Variables:<ul><li>GroupId; integer; Value that uniquely identifies the group of transactions.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-get"
            },
            "post":{
                "summary":"Create transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find transaction lines. Finder Variables:<ul><li>UniqueTransactionId; integer; Value that uniquely identifies the receiving transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-get"
            },
            "post":{
                "summary":"Create lines",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/lotItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lot item lot numbers. Finder Variables:<ul><li>LotNumber; string; Lot number for the item. Use it when only the lot controls the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Item Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Item Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotItemLots-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/lotItemLots/{LotNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Item Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotItemLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item. Applies when the lot controls the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find lots. Finder Variables:<ul><li>LotNumber; string; Lot number for the item. Use it when the lot and serial control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Serial Item Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Serial Item Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Serial Item Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}/child/lotSerialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serials. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in the range of serial numbers. Use it when the lot and serial control the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Serial Item Lots/Lot Serial Item Serials"
                ],
                "x-internal-id":"receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Serial Item Lots/Lot Serial Item Serials"
                ],
                "x-internal-id":"receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/lotSerialItemLots/{LotNumber}/child/lotSerialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-lotSerialItemLots-lotSerialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Lot Serial Item Lots/Lot Serial Item Serials"
                ],
                "x-internal-id":"{GroupId}-child-transactionLines-{UniqueTransactionId}-child-lotSerialItemLots-{LotNumber}-child-lotSerialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"LotNumber",
                    "description":"Lot number for the item. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in the range of serial numbers. Applies when the lot and serial control the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/serialItemSerials":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find serials. Finder Variables:<ul><li>FromSerialNumber; string; Starting serial number in the range of serial numbers. Use it when only the serial controls the item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-serialItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Serial Item Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-serialItemSerials-get"
            },
            "post":{
                "summary":"Create serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-serialItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-serialItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Serial Item Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-serialItemSerials-post"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingTransactions/{GroupId}/child/transactionLines/{UniqueTransactionId}/child/serialItemSerials/{FromSerialNumber}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingTransactions-transactionLines-serialItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Transactions/Transaction Lines/Serial Item Serials"
                ],
                "x-internal-id":"resources-11.12.1.0-receivingTransactions-{GroupId}-child-transactionLines-{UniqueTransactionId}-child-serialItemSerials-{FromSerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"GroupId",
                    "description":"Value that uniquely identifies the group of transactions from each service call. The application provides this value. It is recommended that you leave this attribute empty.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"UniqueTransactionId",
                    "description":"Value that uniquely identifies the receiving transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"FromSerialNumber",
                    "description":"Starting serial number in the range of serial numbers. Applies when the serial controls the item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/issueSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find serial numbers that are available according to the bind variables that you provide. You can use these numbers to perform an issue or subinventory transfer for an inventory organization, item, subinventory, locator, or lot combination. bindOrganizationId, bindTransactionTypeId, and bindItemId are required. Finder Variables:<ul><li>bindLocatorId; integer; Value that uniquely identifies the locator. The locator is a physical area, such as a row, aisle, bin, or shelf. You use this area to store items in the subinventory.</li><li>bindLotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li><li>bindRevision; string; Item revision.</li><li>bindSerialNumber; string; Serial number that tracks items the that are in inventory.</li><li>bindSubinventory; string; Physical or logical separation of items in an organization.</li></ul></li><li>PrimaryKey: Find serial numbers according to the primary key. Finder Variables:<ul><li>SerialNumber; string; Serial number that tracks the items that are in inventory.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/issueSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Issue Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-issueSerials-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/issueSerials/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/issueSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Issue Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-issueSerials-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Serial number that tracks items that are in inventory.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validateCorrectedQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateCorrectedQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Corrected Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateCorrectedQuantities-get"
            },
            "post":{
                "summary":"Create validations",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateCorrectedQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateCorrectedQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Corrected Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateCorrectedQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validateCorrectedQuantities/{validateCorrectedQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateCorrectedQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Corrected Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateCorrectedQuantities-{validateCorrectedQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validateCorrectedQuantitiesUniqID",
                    "description":"Identifier to Validate Corrected Quantities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/splitPickTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find split pick transactions according to the primary key. Finder Variables:<ul><li>PickSlip; integer; Value that uniquely identifies the pick slip.</li><li>PickSlipLine; integer; Value that uniquely identifies a line on the pick slip.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/splitPickTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Split Pick Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-splitPickTransactions-get"
            },
            "post":{
                "summary":"Create transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/splitPickTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/splitPickTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Split Pick Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-splitPickTransactions-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/splitPickTransactions/{splitPickTransactionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/splitPickTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Split Pick Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-splitPickTransactions-{splitPickTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"splitPickTransactionsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PickSlip and PickSlipLine ---for the Split Pick Transactions resource and used to uniquely identify an instance of Split Pick Transactions. The client should not generate the hash key value.  Instead, the client should query on the Split Pick Transactions collection resource with a filter on the primary key values in order to navigate to a specific instance of Split Pick Transactions.<br><br>For example: splitPickTransactions?q=PickSlip=&lt;value1&gt;;PickSlipLine=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validateInspectQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInspectQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Inspected Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateInspectQuantities-get"
            },
            "post":{
                "summary":"Create validation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInspectQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInspectQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Inspected Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateInspectQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validateInspectQuantities/{validateInspectQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInspectQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Inspected Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateInspectQuantities-{validateInspectQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validateInspectQuantitiesUniqID",
                    "description":"Identifier to Validate Inspected Quantities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/transferOrderLinesForReceiving":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationItemAndTO: Find lines that are available for receiving according to organization, transfer order, transfer order line, item, or item description. Finder Variables:<ul><li>bindItemDescription; string; Description of the item.</li><li>bindItemNumber; string; Number that identifies the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the organization.</li><li>bindTransferOrder; string; Number that identifies the request to transfer the item.</li><li>bindTransferOrderLine; integer; Number that identifies the transfer order line.</li></ul></li><li>PrimaryKey: Find line that is available for receiving according to the line Id of the transfer order. Finder Variables:<ul><li>TransferOrderLineId; integer; Value that uniquely identifies the transfer order line.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/transferOrderLinesForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Transfer Order Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-transferOrderLinesForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/transferOrderLinesForReceiving/{TransferOrderLineId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/transferOrderLinesForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Transfer Order Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-transferOrderLinesForReceiving-{TransferOrderLineId}-get"
            },
            "parameters":[
                {
                    "name":"TransferOrderLineId",
                    "description":"Value that uniquely identifies the transfer order line.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/linesToReceive":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLines: Find received lines according to the bind variables that you provide. You must include the following: 1, bindOrganizationId or bindOrganizationCode; 2, bindDocumentType or bindSourceDocumentCode; 3, bindDocumentNumber. Finder Variables:<ul><li>bindASNLineNumber; integer; Line number for the advance shipment notice.</li><li>bindASNNumber; string; Number that identifies the advanced shipment notice for the shipment from the supplier.</li><li>bindBackToBack; string; Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order.</li><li>bindConsigned; string; Contains Y or N. Y: the item is consigned. N: the item is not consigned.</li><li>bindDocumentDistributionNumber; integer; Distribution number for the document schedule. You can use it only for a purchase order or a transfer order.</li><li>bindDocumentLineNumber; string; Line number for the document number.</li><li>bindDocumentNumber; string; Document number that identifies one of the following: the purchase order number for the purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER.</li><li>bindDocumentScheduleNumber; string; Schedule number for the document line number.</li><li>bindDocumentType; string; Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute.</li><li>bindFromDate; string; Start date of the time interval to use when finding the lines to inspect.</li><li>bindItemId; integer; Value that uniquely identifies an item.</li><li>bindItemNumber; string; Number that identifies the item to receive. An item is any part, material, product, or service that includes attributes that are unique when compared to other items.</li><li>bindOrganizationCode; string; Abbreviation that identifies the &lt;br&gt;ship-to organization for the line.</li><li>bindOrganizationId; integer; Value that uniquely identifies the ship-to organization for the received line.</li><li>bindPODistributionId; integer; Value that uniquely identifies the purchase order distribution.</li><li>bindPOLineId; integer; Value that uniquely identifies the purchase order line.</li><li>bindPOLineLocationId; integer; Value that uniquely identifies the purchase order schedule.</li><li>bindReceiptAdviceHeaderId; integer; Value that uniquely identifies the receipt advice header.</li><li>bindReceiptAdviceLineId; integer; Value that uniquely identifies the receipt advice line.</li><li>bindShipmentHeaderId; integer; Value that uniquely identifies the shipment header.</li><li>bindShipmentLineId; integer; Value that uniquely identifies the shipment line.</li><li>bindSourceDocumentCode; string; Document type of the shipment. You can use one of the following values for this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY.</li><li>bindToDate; string; End date of the time interval to use when finding the lines to inspect.</li><li>bindTransferOrderDistId; integer; Value that uniquely identifies&lt;br&gt;the transfer order distribution.</li><li>bindTransferOrderHeaderId; integer; Value that uniquely identifies the transfer order header. Each transfer order can request to move an item from one location to another location.</li><li>bindTransferOrderLineId; integer; Value that uniquely identifies the transfer order line.</li></ul></li><li>PrimaryKey: Find lines to receive according to the primary key. Finder Variables:<ul><li>DocumentLineId; integer; Value that uniquely identifies&lt;br&gt;the document line.</li><li>SourceDocumentCode; string; The document type of the shipment. You can use one of the following values with this attribute:&lt;br&gt;PO, RMA, TRANSFER ORDER, or INVENTORY.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToReceive"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Lines to Receive"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToReceive-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/linesToReceive/{linesToReceiveUniqID}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToReceive-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Lines to Receive"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToReceive-{linesToReceiveUniqID}-get"
            },
            "parameters":[
                {
                    "name":"linesToReceiveUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- SourceDocumentCode and DocumentLineId ---for the Lines to Receive resource and used to uniquely identify an instance of Lines to Receive. The client should not generate the hash key value.  Instead, the client should query on the Lines to Receive collection resource with a filter on the primary key values in order to navigate to a specific instance of Lines to Receive.<br><br>For example: linesToReceive?q=SourceDocumentCode=&lt;value1&gt;;DocumentLineId=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workCenters":{
            "get":{
                "summary":"Get all work centers",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work centers according to the work center Id as the primary key. Finder Variables:<ul><li>WorkCenterId; integer; Primary key that uniquely identifies the work center. Manufacturing generates this primary key when it creates the work center. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workCenters"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Centers"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workCenters-get"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/workCenters/{WorkCenterId}":{
            "get":{
                "summary":"Get one work center",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workCenters-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Centers"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workCenters-{WorkCenterId}-get"
            },
            "parameters":[
                {
                    "name":"WorkCenterId",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates a work center.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workCenters/{WorkCenterId}/child/WorkCenterDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields for the work area according to the work center Id as the primary key. Finder Variables:<ul><li>WorkCenterId; integer; Primary key that uniquely identifies the work center. Manufacturing generates this primary key when it creates the work center. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workCenters-WorkCenterDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Centers/Flexfields for Work Centers"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workCenters-{WorkCenterId}-child-WorkCenterDFF-get"
            },
            "parameters":[
                {
                    "name":"WorkCenterId",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates a work center.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workCenters/{WorkCenterId}/child/WorkCenterDFF/{WorkCenterId2}":{
            "get":{
                "summary":"Get one flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workCenters-WorkCenterDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Centers/Flexfields for Work Centers"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workCenters-{WorkCenterId}-child-WorkCenterDFF-{WorkCenterId2}-get"
            },
            "parameters":[
                {
                    "name":"WorkCenterId",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates a work center.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkCenterId2",
                    "description":"Value that uniquely identifies the work center. You can use a flexfield with this work center resource. A flexfield is a flexible data field that your organization can use to modify your implementation without having to write programming code.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workCenters/{WorkCenterId}/child/WorkCenterResource":{
            "get":{
                "summary":"Get all resources associated with a work center",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find details of the assignment for the work center resource according to the resource Id as the primary key. Finder Variables:<ul><li>ResourceId; integer; Primary key that uniquely identifies the work center resource. Manufacturing generates this primary key when it creates the work center resource. This attribute is required.</li><li>WorkCenterId; integer; Primary key that uniquely identifies the work center. Manufacturing generates this primary key when it creates the work center. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workCenters-WorkCenterResource"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Centers/Work Center Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workCenters-{WorkCenterId}-child-WorkCenterResource-get"
            },
            "parameters":[
                {
                    "name":"WorkCenterId",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates a work center.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workCenters/{WorkCenterId}/child/WorkCenterResource/{WorkCenterResourceUniqID}":{
            "get":{
                "summary":"Get one resource associated with a work center",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workCenters-WorkCenterResource-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Centers/Work Center Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workCenters-{WorkCenterId}-child-WorkCenterResource-{WorkCenterResourceUniqID}-get"
            },
            "parameters":[
                {
                    "name":"WorkCenterId",
                    "description":"Value that uniquely identifies the work center. It is a primary key that the application generates when it creates a work center.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkCenterResourceUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- ResourceId and WorkCenterId ---for the Work Center Resources resource and used to uniquely identify an instance of Work Center Resources. The client should not generate the hash key value.  Instead, the client should query on the Work Center Resources collection resource with a filter on the primary key values in order to navigate to a specific instance of Work Center Resources.<br><br>For example: WorkCenterResource?q=ResourceId=&lt;value1&gt;;WorkCenterId=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/productionResources":{
            "get":{
                "summary":"Get all resources",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find production resources according to the resource Id as the primary key. Finder Variables:<ul><li>ResourceId; integer; Primary key that uniquely identifies the production resource. Manufacturing generates this primary key when it creates the production resource. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/productionResources"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Production Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-productionResources-get"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/productionResources/{ResourceId}":{
            "get":{
                "summary":"Get one resource",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/productionResources-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Production Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-productionResources-{ResourceId}-get"
            },
            "parameters":[
                {
                    "name":"ResourceId",
                    "description":"Value that uniquely identifies the production resource. It is a primary key that the application generates when it creates a production resource.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/productionResources/{ResourceId}/child/ResourceDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields that the production resource references according to the production resource Id as the primary key. Finder Variables:<ul><li>ResourceId; integer; Primary key that uniquely identifies the production resource. Manufacturing generates this primary key when it creates the production resource. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/productionResources-ResourceDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Production Resources/Flexfields"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-productionResources-{ResourceId}-child-ResourceDFF-get"
            },
            "parameters":[
                {
                    "name":"ResourceId",
                    "description":"Value that uniquely identifies the production resource. It is a primary key that the application generates when it creates a production resource.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/productionResources/{ResourceId}/child/ResourceDFF/{ResourceId2}":{
            "get":{
                "summary":"Get one flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/productionResources-ResourceDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Production Resources/Flexfields"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-productionResources-{ResourceId}-child-ResourceDFF-{ResourceId2}-get"
            },
            "parameters":[
                {
                    "name":"ResourceId",
                    "description":"Value that uniquely identifies the production resource. It is a primary key that the application generates when it creates a production resource.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"ResourceId2",
                    "description":"Value that uniquely identifies the production resource. You can use a flexfield with this production resource. A flexfield is a flexible data field that your organization can use to modify your implementation without having to write programming code.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrderSchedulesForReceiving":{
            "get":{
                "summary":"Get all schedules",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByPOAndOrganization: Find purchase order schedules that are available to receive according to organization, purchase order, or purchase order line. Finder Variables:<ul><li>bindItemDescription; string; Description of the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the receiving organization.</li><li>bindPurchaseOrder; string; Number that identifies the purchase order, which is a commercial document that you can use to send a request to a seller to supply a product or a service in return for payment.</li><li>bindPurchaseOrderLine; integer; Number that identifies the purchase order line.</li><li>bindPurchaseOrderSchedule; string; Number that identifies the purchase order schedule.</li></ul></li><li>PrimaryKey: Find purchase order schedule according to the location Id of the purchase order line. Finder Variables:<ul><li>POLineLocationId; integer; Value that uniquely identifies the purchase order schedule.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrderSchedulesForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Purchase Order Schedules for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrderSchedulesForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrderSchedulesForReceiving/{POLineLocationId}":{
            "get":{
                "summary":"Get one schedule",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrderSchedulesForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Purchase Order Schedules for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrderSchedulesForReceiving-{POLineLocationId}-get"
            },
            "parameters":[
                {
                    "name":"POLineLocationId",
                    "description":"Value that uniquely identifies the purchase order schedule.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryItemSerialNumbers":{
            "get":{
                "summary":"Get all numbers",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrgItemLotAndSerial: Find serial numbers for an item in an organization. As an option, you can specify the lot and a serial number. Finder Variables:<ul><li>bindInventoryItemId; integer; Value that uniquely identifies the &lt;br&gt;inventory item.</li><li>bindItemNumber; string; Name of the item.</li><li>bindLotNumber; string; Lot number.</li><li>bindOrganizationCode; string; Abbreviation that identifies the &lt;br&gt;organization.</li><li>bindSerialNumber; string; Serial number.</li></ul></li><li>PrimaryKey: Find item serial numbers according to organization, item, and serial number. Finder Variables:<ul><li>InventoryItemId; integer; Value that uniquely identifies the &lt;br&gt;inventory item.</li><li>OrganizationId; integer; Value that uniquely identifies the &lt;br&gt;organization.</li><li>SerialNumber; string; Serial number.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryItemSerialNumbers"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Serial Numbers for Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryItemSerialNumbers-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryItemSerialNumbers/{inventoryItemSerialNumbersUniqID}":{
            "get":{
                "summary":"Get one number",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryItemSerialNumbers-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Serial Numbers for Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryItemSerialNumbers-{inventoryItemSerialNumbersUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryItemSerialNumbersUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId and SerialNumber ---for the Inventory Serial Numbers for Items resource and used to uniquely identify an instance of Inventory Serial Numbers for Items. The client should not generate the hash key value.  Instead, the client should query on the Inventory Serial Numbers for Items collection resource with a filter on the primary key values in order to navigate to a specific instance of Inventory Serial Numbers for Items.<br><br>For example: inventoryItemSerialNumbers?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SerialNumber=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validateInventoryTransactionQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInventoryTransactionQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Inventory Transaction Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateInventoryTransactionQuantities-get"
            },
            "post":{
                "summary":"Create validation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInventoryTransactionQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInventoryTransactionQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Inventory Transaction Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateInventoryTransactionQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validateInventoryTransactionQuantities/{validateInventoryTransactionQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateInventoryTransactionQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Inventory Transaction Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateInventoryTransactionQuantities-{validateInventoryTransactionQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validateInventoryTransactionQuantitiesUniqID",
                    "description":"Identifier to Validate Inventory Transaction Quantities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/linesToReturn":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLines: Find received lines that are available to return according to the bind variables that you provide. You must include the following: 1, bindOrganizationId or bindOrganizationCode; 2, bindDocumentType or bindSourceDocumentCode; 3, bindDocumentNumber. Finder Variables:<ul><li>bindASNNumber; string; Number that identifies the advanced shipment notice for the shipment from the supplier.</li><li>bindBackToBack; string; Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order.</li><li>bindConsigned; string; Contains Y or N. Y: the receipt is consigned. N: the receipt is not consigned.</li><li>bindDocumentDistributionNumber; integer; Distribution number for the document schedule. You can use it only for a purchase order or a transfer order.</li><li>bindDocumentLineNumber; string; Line number for the document number.</li><li>bindDocumentNumber; string; Document number that identifies one of the following: the purchase order number for the purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER.</li><li>bindDocumentScheduleNumber; string; Schedule number for the document line number.</li><li>bindDocumentType; string; Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute.</li><li>bindFromDate; string; Start date of the time interval to use when finding the lines to return.</li><li>bindItemId; integer; Value that uniquely identifies an item.</li><li>bindItemNumber; string; Number that identifies the item to receive. An item is any part, material, product, or service that includes attributes that are unique when compared to other items.</li><li>bindOrganizationCode; string; Value that identifies the &lt;br&gt;ship-to organization code for the received line.</li><li>bindOrganizationId; integer; Value that uniquely identifies the ship-to organization for the received line.</li><li>bindPODistributionId; integer; Value that uniquely identifies the purchase order distribution.</li><li>bindPOHeaderId; integer; Value that uniquely identifies the purchase order header.</li><li>bindPOLineId; integer; Value that uniquely identifies the purchase order line.</li><li>bindPOLineLocationId; integer; Value that uniquely identifies the purchase order schedule.</li><li>bindParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li><li>bindReceiptAdviceHeaderId; integer; Value that uniquely identifies the receipt advice header.</li><li>bindReceiptAdviceLineId; integer; Value that uniquely identifies the receipt advice line.</li><li>bindReceiptNumber; string; Number that acknowledges that the warehouse received the shipment.</li><li>bindShipmentHeaderId; integer; Value that uniquely identifies the shipment header.</li><li>bindShipmentLineId; integer; Value that uniquely identifies the shipment line.</li><li>bindSourceDocumentCode; string; Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY.</li><li>bindTOShipment; string; Number that identifies the transfer order shipment.</li><li>bindToDate; string; End date of the time interval to use when finding the lines to return.</li><li>bindTransferOrderDistId; integer; Value that uniquely identifies the transfer order distribution.</li><li>bindTransferOrderHeaderId; integer; Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location.</li><li>bindTransferOrderLineId; integer; Value that uniquely identifies the transfer order line.</li></ul></li><li>PrimaryKey: Abbreviation that identifies the ship-to organization for the received line. Finder Variables:<ul><li>ParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToReturn"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Lines to Return"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToReturn-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/linesToReturn/{ParentTransactionId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToReturn-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Lines to Return"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToReturn-{ParentTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"ParentTransactionId",
                    "description":"Value that uniquely identifies the parent transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions":{
            "get":{
                "summary":"Get all definitions",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndCountName: Find cycle count definitions according to the organization code or cycle count name. Finder Variables:<ul><li>bindCycleCountName; string; Name of the cycle count.</li><li>bindOrganizationCode; string; Abbreviation that identifies the organization.</li></ul></li><li>PrimaryKey: Find count definitions according to the cycle count identifier. Finder Variables:<ul><li>CycleCountHeaderId; integer; Value that uniquely identifies the cycle count.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Cycle Count Definitions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}":{
            "get":{
                "summary":"Get one definition",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Definitions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}/child/countClasses":{
            "get":{
                "summary":"Get all classes",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find count classes according to the identifier of the cycle count class. Finder Variables:<ul><li>CycleCountClassId; integer; Value that uniquely identifies the cycle count class.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-countClasses"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Cycle Count Definitions/Count Classes"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-child-countClasses-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}/child/countClasses/{CycleCountClassId}":{
            "get":{
                "summary":"Get one class",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-countClasses-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Definitions/Count Classes"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-child-countClasses-{CycleCountClassId}-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"CycleCountClassId",
                    "description":"Value that uniquely identifies the class of the cycle count.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}/child/countItems":{
            "get":{
                "summary":"Get all items",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find items to count according to the count item identifier. Finder Variables:<ul><li>CycleCountItemId; integer; Unique identifier of the cycle count item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-countItems"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Cycle Count Definitions/Count Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-child-countItems-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}/child/countItems/{CycleCountItemId}":{
            "get":{
                "summary":"Get one item",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-countItems-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Definitions/Count Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-child-countItems-{CycleCountItemId}-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"CycleCountItemId",
                    "description":"Value that uniquely identifies the item that the cycle count definition references.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}/child/countSubinventories":{
            "get":{
                "summary":"Get all subinventories",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find the subinventories to count according to subinventory name. Finder Variables:<ul><li>Subinventory; string; Name of the subinventory.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-countSubinventories"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Cycle Count Definitions/Count Subinventories"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-child-countSubinventories-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountDefinitions/{CycleCountHeaderId}/child/countSubinventories/{Subinventory}":{
            "get":{
                "summary":"Get one subinventory",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountDefinitions-countSubinventories-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Cycle Count Definitions/Count Subinventories"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountDefinitions-{CycleCountHeaderId}-child-countSubinventories-{Subinventory}-get"
            },
            "parameters":[
                {
                    "name":"CycleCountHeaderId",
                    "description":"Value that uniquely identifies the cycle count definition.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"Subinventory",
                    "description":"Name of the subinventory that the warehouse includes in this count definition.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/rmasForReceiving":{
            "get":{
                "summary":"Get all RMAs for receiving",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganization: Find return material authorizations that are available to receive according to organization, customer, source system, or return material authorization number. Finder Variables:<ul><li>bindCustomer; string; Number that identifies the customer who is returning the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; string; Value that uniquely identifies the receiving organization.</li><li>bindRMA; string; Number that identifies the return material authorization.</li><li>bindSourceSystem; string; Name of the system or application that captures the source of the transaction.</li></ul></li><li>PrimaryKey: Find return material authorization that is available to receive according to the header Id of the receipt advice. Finder Variables:<ul><li>ReceiptAdviceHeaderId; integer; Value that uniquely identifies the receipt advice header that the application created for the return material authorization that it received from the customer.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmasForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "RMAs for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmasForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/rmasForReceiving/{ReceiptAdviceHeaderId}":{
            "get":{
                "summary":"Get one RMA for receiving",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmasForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "RMAs for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmasForReceiving-{ReceiptAdviceHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"ReceiptAdviceHeaderId",
                    "description":"Value that uniquely identifies the receipt advice header that the application created for the return material authorization that it received from the customer.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/linesToCorrect":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLines: Find received lines that are available to correct according to the bind variables that you provide. You must include the following: 1, bindOrganizationId or bindOrganizationCode; 2, bindDocumentType or bindSourceDocumentCode; 3, bindDocumentNumber. Finder Variables:<ul><li>bindASNLineNumber; integer; Line number for the advance shipment notice.</li><li>bindASNNumber; string; Number that identifies the advanced shipment notice for a shipment from a supplier.</li><li>bindBackToBack; string; Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order.</li><li>bindConsigned; string; Contains Y or N. Y: the item is consigned. N: the item is not consigned.</li><li>bindDocumentDistributionNumber; integer; Distribution number for the document schedule. You can use it only for a purchase order or a transfer order.</li><li>bindDocumentLineNumber; string; Line number for the document number.</li><li>bindDocumentNumber; string; Document number that identifies one of the following: a purchase order number for a purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for a source document code of type RMA; the in-transit shipment number for a source document code of type INVENTORY; or the transfer order number for a source document code of type TRANSFER ORDER.</li><li>bindDocumentScheduleNumber; string; Schedule number for the document line number.</li><li>bindDocumentType; string; Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute.</li><li>bindFromDate; string; Start date of the time interval to use when finding the lines to correct.</li><li>bindItemId; integer; Value that uniquely identifies an item.</li><li>bindItemNumber; string; Number that identifies the item to receive. An item is any part, material, product, or service that includes attributes that are unique when compared to other items.</li><li>bindOrganizationCode; string; Abbreviation that identifies the ship-to organization for the received line.</li><li>bindOrganizationId; integer; Value that uniquely identifies the ship-to organization for the received line.</li><li>bindPODistributionId; integer; Value that uniquely identifies the purchase order distribution.</li><li>bindPOHeaderId; integer; Value that uniquely identifies the purchase order header.</li><li>bindPOLineId; integer; Value that uniquely identifies the purchase order line.</li><li>bindPOLineLocationId; integer; Value that uniquely identifies the purchase order location.</li><li>bindParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li><li>bindReceiptAdviceHeaderId; integer; Value that uniquely identifies the receipt advice header.</li><li>bindReceiptAdviceLineId; integer; Value that uniquely identifies the receipt advice line.</li><li>bindReceiptNumber; string; Number that acknowledges that the warehouse received a shipment.</li><li>bindShipmentHeaderId; integer; Value that uniquely identifies the shipment header.</li><li>bindShipmentLineId; integer; Value that uniquely identifies the shipment line.</li><li>bindSourceDocumentCode; string; Document type of the shipment. You can use one of the following values with this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY.</li><li>bindTOShipment; string; Number that identifies the transfer order shipment.</li><li>bindToDate; string; End date of the time interval to use when finding the lines to correct.</li><li>bindTransferOrderDistId; integer; Value that uniquely identifies the transfer order distribution.</li><li>bindTransferOrderHeaderId; integer; Value that uniquely identifies the transfer order header. Each transfer order can request to move items from one location to another location.</li><li>bindTransferOrderLineId; integer; Value that uniquely identifies the transfer order line.</li></ul></li><li>PrimaryKey: Find lines to correct according to the parent transaction identifier. Finder Variables:<ul><li>ParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToCorrect"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Lines to Correct"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToCorrect-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/linesToCorrect/{ParentTransactionId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToCorrect-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Lines to Correct"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToCorrect-{ParentTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"ParentTransactionId",
                    "description":"Value that uniquely identifies the parent transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validateReceiveQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReceiveQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Receive Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateReceiveQuantities-get"
            },
            "post":{
                "summary":"Create validation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReceiveQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReceiveQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Receive Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateReceiveQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validateReceiveQuantities/{validateReceiveQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReceiveQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Receive Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateReceiveQuantities-{validateReceiveQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validateReceiveQuantitiesUniqID",
                    "description":"Identifier to Validate Receive Quantities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/asnsForReceiving":{
            "get":{
                "summary":"Get all notices",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganization: Find advanced shipment notices that are available to receive according to organization or the number of the advanced shipment notice. Finder Variables:<ul><li>bindASN; string; Number that identifies the shipment of the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the receiving organization.</li><li>bindSupplier; string; Name of the supplier that shipped the item.</li></ul></li><li>PrimaryKey: Find advanced shipment notices that are available to receive according to the shipment header Id. Finder Variables:<ul><li>ShipmentHeaderId; integer; Value that uniquely identifies the shipment header.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/asnsForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "ASNs for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-asnsForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/asnsForReceiving/{ShipmentHeaderId}":{
            "get":{
                "summary":"Get one notice",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/asnsForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "ASNs for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-asnsForReceiving-{ShipmentHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"ShipmentHeaderId",
                    "description":"Value that uniquely identifies the shipment header of the advanced shipment notice.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validatePickedQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find the validated picked quantities. Finder Variables:<ul><li>PickSlip; integer; Value that uniquely identifies the pick slip.</li><li>PickSlipLine; integer; Value that uniquely identifies one line on the pick slip.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePickedQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Picked Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validatePickedQuantities-get"
            },
            "post":{
                "summary":"Create validation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePickedQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePickedQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Picked Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validatePickedQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validatePickedQuantities/{validatePickedQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePickedQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Picked Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validatePickedQuantities-{validatePickedQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validatePickedQuantitiesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PickSlip and PickSlipLine ---for the Validate Picked Quantities resource and used to uniquely identify an instance of Validate Picked Quantities. The client should not generate the hash key value.  Instead, the client should query on the Validate Picked Quantities collection resource with a filter on the primary key values in order to navigate to a specific instance of Validate Picked Quantities.<br><br>For example: validatePickedQuantities?q=PickSlip=&lt;value1&gt;;PickSlipLine=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validateReturnQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReturnQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Return Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateReturnQuantities-get"
            },
            "post":{
                "summary":"Create validation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReturnQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReturnQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Return Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateReturnQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validateReturnQuantities/{validateReturnQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validateReturnQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Return Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validateReturnQuantities-{validateReturnQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validateReturnQuantitiesUniqID",
                    "description":"Identifier to Validate Return Quantities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders":{
            "get":{
                "summary":"Get all work orders",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>WorkOrdersOpDelayed: Find work orders that include delayed operations. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>Tolerance; integer; Find work orders that are overdue according to operation. For example, if the tolerance is one hour, then only include each work order with an operation that is overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrderSearch: Find work orders that are delayed. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>Tolerance; integer; Find work orders that are overdue according to time. For example, if Tolerance is one hour, then only include work orders that are overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrderByModifiedDate: Find work orders that include an updated date that occurs after the date that you specify. Finder Variables:<ul><li>FirmPlannedFlag; string; Contains Y or N. Y: prevent the planning system from suggesting changes to the work order. N: do not prevent.</li><li>InventoryItemId; integer; Value that uniquely identifies the item, product, or assembly in the inventory organization that the work order creates.</li><li>LastUpdateDate; string; Date the last time someone modified the work order.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>SourceHeaderRefId; integer; Value that uniquely identifies the header of the document that represents the work order in the source system.</li><li>SourceLineRefId; integer; Value that uniquely identifies the line of the document that represents the work order in the source system.</li><li>SourceSystemId; integer; Value that uniquely identifies the source system in the manufacturing cloud.</li><li>WorkOrderStatusId; integer; Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates the work order status.</li></ul></li><li>WorkOrdersCompletingToday: Find work orders that must be finished today. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>Tolerance; integer; Find work orders that are overdue according to time. For example, if Tolerance is one hour, then only include work orders that are overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrderB2BCM: Find work orders that include back-to-back processing or contract manufacturing. Finder Variables:<ul><li>BackToBackFlag; string; Contains Y or N. Y: the application created work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>ContractMfgFlag; string; Contains Y or N. Y: the application created work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>InventoryItemId; integer; Value that uniquely identifies the item, product, or assembly that the work order creates in the inventory organization.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>PlannedCompletionDate; string; Planned date and time to finish the work order.</li><li>PlannedStartDate; string; Planned date and time to start the work order.</li><li>SourceHeaderRefId; integer; Value that uniquely identifies the header of the document that represents the work order in the source system.</li><li>SourceLineRefId; integer; Value that uniquely identifies the line of the document that represents the work order in the source system.</li><li>SourceSystemId; integer; Value that uniquely identifies the source system in the manufacturing cloud.</li><li>WorkOrderId; integer; Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.</li><li>WorkOrderStatusId; integer; Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates the work order status.</li></ul></li><li>WorkOrderByComponent: Find work orders that consume the component. Finder Variables:<ul><li>BackToBackFlag; string; Contains Y or N. Y: the application created the work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>ContractMfgFlag; string; Contains Y or N. Y: the application created the work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>FirmPlannedFlag; string; Contains Y or N. Y: prevent the planning system from suggesting changes to the work order. N: do not prevent.</li><li>MaterialItemId; integer; Value that uniquely identifies the item to issue in the inventory organization for the work order.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>PlannedCompletionDate; string; Planned date and time to finish the work order.</li><li>PlannedStartDate; string; Planned date and time to start the work order.</li><li>SourceHeaderRefId; integer; Value that uniquely identifies the header of the document that represents the work order in the source system.</li><li>SourceLineRefId; integer; Value that uniquely identifies the line of the document that represents the work order in the source system.</li><li>SourceSystemId; integer; Value that uniquely identifies the source system in the manufacturing cloud.</li><li>WorkOrderStatusId; integer; Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates the work order status.</li></ul></li><li>WorkOrdersWithException: Find work orders that include an exception. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrdersOnHold: Find work orders that are on hold. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>Tolerance; integer; Find work orders that are overdue according to time. For example, if Tolerance is one hour, then only include work orders that are overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrdersStartingToday: Find work orders that the application plans to start today. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>Tolerance; integer; Find work orders that are overdue according to time. For example, if Tolerance is one hour, then only include work orders that are overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrdersDelayed: Find work orders that are delayed. Finder Variables:<ul><li>DueDays; integer; Find work orders that are overdue according to days. For example, if DueDays is 7, then only return each work order that includes an operation with a scheduled finish date that is greater than the current date minus 7 days.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>Tolerance; integer; Find work orders that are overdue according to time. For example, if Tolerance is one hour, then only include work orders that are overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderNumber; string; Value that uniquely identifies the work order in the plant.</li></ul></li><li>WorkOrderByResource: Find work orders that require the resource. Finder Variables:<ul><li>BackToBackFlag; string; Contains Y or N. Y: the application created work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>ContractMfgFlag; string; Contains Y or N. Y: the application created work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>FirmPlannedFlag; string; Contains Y or N. Y: prevent the planning system from suggesting changes to the work order. N: do not prevent.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>PlannedCompletionDate; string; Planned date and time to finish the work order.</li><li>PlannedStartDate; string; Planned date and time to start the work order.</li><li>ResourceId; integer; Primary key that uniquely identifies the resource. Manufacturing generates this primary key when it creates the resource.</li><li>SourceHeaderRefId; integer; Value that uniquely identifies the header of the document that represents the work order in the source system.</li><li>SourceLineRefId; integer; Value that uniquely identifies the line of the document that represents the work order in the source system.</li><li>SourceSystemId; integer; Value that uniquely identifies the source system in the manufacturing cloud.</li><li>WorkOrderStatusId; integer; Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates the work order status.</li></ul></li><li>WorkOrderAndWorkAreaCenter: Find work orders that are planned to run in the work area or work center. Finder Variables:<ul><li>Tolerance; integer; Find work orders that are overdue according to time. For example, if Tolerance is one hour, then only include work orders that are overdue according to one hour or more than one hour.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderId; integer; Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.</li></ul></li><li>WorkOrderBySerial: Find work orders according to serial. Finder Variables:<ul><li>BackToBackFlag; string; Contains Y or N. Y: the work order was created as part of the contract manufacturing flow. N: the work order was not created as part of the contract manufacturing flow.</li><li>ContractMfgFlag; string; Contains Y or N. Y: the application created work order as part of the contract manufacturing flow. N: the application did not create the work order as part of the contract manufacturing flow.</li><li>FirmPlannedFlag; string; Contains Y or N. Y: prevent the planning system from suggesting changes to the work order. N: do not prevent.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>PlannedCompletionDate; string; Planned date and time to finish the work order.</li><li>PlannedStartDate; string; Planned date and time to start the work order.</li><li>ProductSerialId; integer; Value that uniquely identifies the assembly serial. It is a primary key that the application generates when it creates the serial number.</li><li>SourceHeaderRefId; integer; Value that uniquely identifies the header of the document that represents the work order in the source system.</li><li>SourceLineRefId; integer; Value that uniquely identifies the line of the document that represents the work order in the source system.</li><li>SourceSystemId; integer; Value that uniquely identifies the source system in the manufacturing cloud.</li><li>WorkOrderStatusId; integer; Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates the work order status.</li></ul></li><li>WorkOrderByWorkAreaWorkCenter: Find work orders that the application plans to run in the work area or work center. Finder Variables:<ul><li>InventoryItemId; integer; Value that uniquely identifies the item, product, or assembly that the work order creates in the inventory organization.</li><li>OrganizationId; integer; Value that uniquely identifies each inventory organization that is a manufacturing plant. It is a primary key that the application generates when it creates the inventory organization.</li><li>PlannedCompletionDate; string; Planned date and time to finish the work order.</li><li>PlannedStartDate; string; Planned date and time to start the work order.</li><li>SourceHeaderReferenceId; integer; Value that uniquely identifies the header of the document that represents the work order in the source system.</li><li>SourceLineReferenceId; integer; Value that uniquely identifies the line of the document that represents the work order in the source system.</li><li>SourceSystemId; integer; Value that uniquely identifies the source system in the manufacturing cloud.</li><li>WorkAreaId; integer; Value that uniquely identifies the work area. It is a primary key that the application generates when it creates the work area.</li><li>WorkCenterId; integer; Value that uniquely identifies the work center. It is a primary key that the application generates when it creates the work center.</li><li>WorkOrderStatusId; integer; Value that uniquely identifies the work order status. It is a primary key that the application generates when it creates the work order status.</li></ul></li><li>PrimaryKey: Find work order details according to order Id. Finder Variables:<ul><li>WorkOrderId; integer; Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-get"
            },
            "post":{
                "summary":"POST",
                "description":"Post operation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "type":"object"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "type":"object"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.action+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.actionresult+json"
                ],
                "tags":[
                    "Work Orders"
                ],
                "x-operations":[
                    {
                        "summary":"Reschedule one work order at the midpoint",
                        "description":"Perform midpoint rescheduling for the work order. If the plant must perform midpoint rescheduling, then the client sends the operation, date, and one of the following scheduling options. 1, operation start date: the application sets the schedule date to the start date of the operation. 2, operation completion date: the application sets the schedule date to the completion date of the operation. The application then backward schedules the resources for operations that already occurred, and forward schedules the resources for subsequent operations. The application uses the work order operation as an anchor so that it can reschedule the resource according to the date that you specify. It uses this anchor as a stable, single reference point so that it can accurately reschedule the operations.",
                        "parameters":[
                            {
                                "name":"request",
                                "description":"The following table describes the body parameters in the request for this task.",
                                "schema":{
                                    "$ref":"#/definitions/workOrders-midpointRescheduleWorkOrderOperationRequest"
                                },
                                "in":"body"
                            }
                        ],
                        "responses":{
                            "default":{
                                "description":"The following table describes the default response for this task.",
                                "schema":{
                                    "$ref":"#/definitions/workOrders-midpointRescheduleWorkOrderOperationResponse"
                                }
                            }
                        },
                        "consumes":[
                            "application/vnd.oracle.adf.action+json"
                        ],
                        "produces":[
                            "application/vnd.oracle.adf.actionresult+json"
                        ],
                        "tags":[
                            "Work Orders"
                        ],
                        "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-post-x-operations-0"
                    }
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-post"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}":{
            "get":{
                "summary":"Get one work order",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-get"
            },
            "patch":{
                "summary":"Update one work order",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-patch"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderActiveOperation":{
            "get":{
                "summary":"Get all active operations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order details according to order operation Id. Finder Variables:<ul><li>WorkOrderOperationId; integer; Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderActiveOperation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Active Operations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderActiveOperation-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderActiveOperation/{WorkOrderOperationId}":{
            "get":{
                "summary":"Get one active operation",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderActiveOperation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Active Operations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderActiveOperation-{WorkOrderOperationId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderAttachment":{
            "get":{
                "summary":"Get all attachments",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find documents that the user attached to the work order according to the attachment Id. Finder Variables:<ul><li>AttachedDocumentId; integer; Primary key that uniquely identifies the document that the user attached to the work order.This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderAttachment"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Attachments"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderAttachment-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderAttachment/{AttachedDocumentId}":{
            "get":{
                "summary":"Get one attachment",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderAttachment-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Attachments"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderAttachment-{AttachedDocumentId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"AttachedDocumentId",
                    "description":"Value that uniquely identifies the attachment of a work order. It is a primary key that the application generates when a document is attached to the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields that the work order references according to work order Id. Finder Variables:<ul><li>WorkOrderId; integer; Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Flexfields"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderDFF-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderDFF/{WorkOrderId2}":{
            "get":{
                "summary":"Get one flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Flexfields"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderDFF-{WorkOrderId2}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderId2",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial":{
            "get":{
                "summary":"Get all materials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find details about the work order material according to the material Id of the work order operation. Finder Variables:<ul><li>WorkOrderOperationMaterialId; integer; Primary key that uniquely identifies the work order operation material. Manufacturing generates this primary key when it creates the material for the work order operation. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderMaterial"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Materials"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderMaterial-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial/{WorkOrderOperationMaterialId}":{
            "get":{
                "summary":"Get one material",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderMaterial-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Materials"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderMaterial-{WorkOrderOperationMaterialId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial/{WorkOrderOperationMaterialId}/child/WorkOrderOperationMaterialAttachment":{
            "get":{
                "summary":"Get all attachments",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find attachments for materials according to work order operation. Finder Variables:<ul><li>AttachedDocumentId; integer; Primary key that uniquely identifies the document that the user attached to the material that the work order operation consumes.This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialAttachment"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Materials/Material Attachments"
                ],
                "x-internal-id":"resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderMaterial-{WorkOrderOperationMaterialId}-child-WorkOrderOperationMaterialAttachment-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial/{WorkOrderOperationMaterialId}/child/WorkOrderOperationMaterialAttachment/{AttachedDocumentId}":{
            "get":{
                "summary":"Get one attachment",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialAttachment-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Materials/Material Attachments"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderMaterial-{WorkOrderOperationMaterialId}-child-WorkOrderOperationMaterialAttachment-{AttachedDocumentId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"AttachedDocumentId",
                    "description":"Value that uniquely identifies the material attachment of a work order operation. It is a primary key that the application generates when a document is attached to the work order operation material.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial/{WorkOrderOperationMaterialId}/child/WorkOrderOperationMaterialDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields that the work order material references according to the material Id of the work order operation. Finder Variables:<ul><li>WoOperationMaterialId; integer; Primary key that uniquely identifies the work order operation material. Manufacturing generates this primary key when it creates the material for the work order operation. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Materials/Material Flexfields"
                ],
                "x-internal-id":"resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderMaterial-{WorkOrderOperationMaterialId}-child-WorkOrderOperationMaterialDFF-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderMaterial/{WorkOrderOperationMaterialId}/child/WorkOrderOperationMaterialDFF/{WoOperationMaterialId}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderMaterial-WorkOrderOperationMaterialDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Materials/Material Flexfields"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderMaterial-{WorkOrderOperationMaterialId}-child-WorkOrderOperationMaterialDFF-{WoOperationMaterialId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WoOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation":{
            "get":{
                "summary":"Get all operations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order details according to the operation Id. Finder Variables:<ul><li>WorkOrderOperationId; integer; Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Operations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}":{
            "get":{
                "summary":"Get one operation",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Operations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationAttachment":{
            "get":{
                "summary":"Get all attachments",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find documents that the user attached to the work order operation according to the attachment Id. Finder Variables:<ul><li>AttachedDocumentId; integer; Primary key that uniquely identifies the document that the user attached to the work order operation.This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationAttachment"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Attachments"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationAttachment-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationAttachment/{AttachedDocumentId}":{
            "get":{
                "summary":"Get one attachment",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationAttachment-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Attachments"
                ],
                "x-internal-id":"11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationAttachment-{AttachedDocumentId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"AttachedDocumentId",
                    "description":"Value that uniquely identifies the attachment of a work order operation. It is a primary key that the application generates when a document is attached to the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields that the work order operation references according to the operation Id of the work order. Finder Variables:<ul><li>WoOperationId; integer; Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Flexfields"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationDFF-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationDFF/{WoOperationId}":{
            "get":{
                "summary":"Get one flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Flexfields"
                ],
                "x-internal-id":"resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationDFF-{WoOperationId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WoOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationMaterial":{
            "get":{
                "summary":"Get all materials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order details according to the material Id. Finder Variables:<ul><li>WorkOrderOperationMaterialId; integer; Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates this material.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationMaterial"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Operations/Materials"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationMaterial-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationMaterial/{WorkOrderOperationMaterialId}":{
            "get":{
                "summary":"Get one material",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationMaterial-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Operations/Materials"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationMaterial-{WorkOrderOperationMaterialId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationMaterialId",
                    "description":"Value that uniquely identifies the material for the work order operation. It is a primary key that the application generates when it creates the material for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationResource":{
            "get":{
                "summary":"Get all resources",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order details according to the resource Id for the order operation. Finder Variables:<ul><li>WorkOrderOperationResourceId; integer; Primary key that uniquely identifies the work order operation resource. Manufacturing generates this primary key when it creates the resource for the work order operation. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationResource"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationResource-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationResource/{WorkOrderOperationResourceId}":{
            "get":{
                "summary":"Get one resource",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationResource-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Resources"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationResource-{WorkOrderOperationResourceId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationResourceId",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationSerialNumber":{
            "get":{
                "summary":"Get all serial numbers",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order details according to the serial Id for the order operation. Finder Variables:<ul><li>WorkOrderProductSerialId; integer; Value that uniquely identifies the assembly serial. It is a primary key that the application generates when it creates the serial number.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationSerialNumber"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Serials"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationSerialNumber-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderOperation/{WorkOrderOperationId}/child/WorkOrderOperationSerialNumber/{WorkOrderProductSerialId}":{
            "get":{
                "summary":"Get one serial number",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderOperation-WorkOrderOperationSerialNumber-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Operations/Operation Serials"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderOperation-{WorkOrderOperationId}-child-WorkOrderOperationSerialNumber-{WorkOrderProductSerialId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationId",
                    "description":"Value that uniquely identifies the work order operation. It is a primary key that the application generates when it creates the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderProductSerialId",
                    "description":"Value that uniquely identifies the product serial in the work order. It is a primary key that the application generates when it creates the serial number.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderReservation":{
            "get":{
                "summary":"Get all reservations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order reservations that supply the demand source. It is a primary key that the application generates when it creates the reservation. Finder Variables:<ul><li>ReservationId; integer; Value that uniquely identifies the reservation of the work order quantity for the demand. It is a primary key that the application generates when it creates the reservation.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderReservation"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Reservations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderReservation-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderReservation/{ReservationId}":{
            "get":{
                "summary":"Get one reservation",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderReservation-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Reservations"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderReservation-{ReservationId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"ReservationId",
                    "description":"Value that uniquely identifies the reservation of the work order quantity for the demand. It is a primary key that the application generates when it creates the reservation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource":{
            "get":{
                "summary":"Get all resources",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find details about the work order resource according to the resource Id of the work order operation. Finder Variables:<ul><li>WorkOrderOperationResourceId; integer; Primary key that uniquely identifies the operation resource for the work order. Manufacturing generates this primary key when it creates this resource. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderResource"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderResource-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource/{WorkOrderOperationResourceId}":{
            "get":{
                "summary":"Get one resource",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderResource-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Resources"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderResource-{WorkOrderOperationResourceId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationResourceId",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource/{WorkOrderOperationResourceId}/child/WorkOrderOperationResourceAttachment":{
            "get":{
                "summary":"Get all attachments",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find attachments for resources according to work order operation. Finder Variables:<ul><li>AttachedDocumentId; integer; Primary key that uniquely identifies the document that the user attached to the resource that the work order operation consumes.This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceAttachment"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Resources/Resource Attachments"
                ],
                "x-internal-id":"resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderResource-{WorkOrderOperationResourceId}-child-WorkOrderOperationResourceAttachment-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationResourceId",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource/{WorkOrderOperationResourceId}/child/WorkOrderOperationResourceAttachment/{AttachedDocumentId}":{
            "get":{
                "summary":"Get one attachment",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceAttachment-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Resources/Resource Attachments"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderResource-{WorkOrderOperationResourceId}-child-WorkOrderOperationResourceAttachment-{AttachedDocumentId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationResourceId",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"AttachedDocumentId",
                    "description":"Value that uniquely identifies the resource attachment of a work order operation. It is a primary key that the application generates when a document is attached to the resource that a work order operation uses.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource/{WorkOrderOperationResourceId}/child/WorkOrderOperationResourceDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields that the work order operation references according to the resource Id of the work order operation. Finder Variables:<ul><li>WoOperationResourceId; integer; Primary key that uniquely identifies the operation resource for the work order operation. Manufacturing generates this primary key when it creates this resource. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Resources/Resource Flexfields"
                ],
                "x-internal-id":"resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderResource-{WorkOrderOperationResourceId}-child-WorkOrderOperationResourceDFF-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationResourceId",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderResource/{WorkOrderOperationResourceId}/child/WorkOrderOperationResourceDFF/{WoOperationResourceId}":{
            "get":{
                "summary":"Get one flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderResource-WorkOrderOperationResourceDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Resources/Resource Flexfields"
                ],
                "x-internal-id":"workOrders-{WorkOrderId}-child-WorkOrderResource-{WorkOrderOperationResourceId}-child-WorkOrderOperationResourceDFF-{WoOperationResourceId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderOperationResourceId",
                    "description":"Value that uniquely identifies the resource for the work order operation. It is a primary key that the application generates when it creates the resource for the work order operation.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WoOperationResourceId",
                    "description":"Value that uniquely identifies a resource of a work order operation. It is a primary key that the application generates when it creates the work order operation resource.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderSerialNumber":{
            "get":{
                "summary":"Get all serial numbers",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work order details according to serial number Id. Finder Variables:<ul><li>WorkOrderProductSerialId; integer; Value that uniquely identifies the assembly serial. It is a primary key that the application generates when it creates the serial number.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderSerialNumber"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Orders/Serials"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderSerialNumber-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workOrders/{WorkOrderId}/child/WorkOrderSerialNumber/{WorkOrderProductSerialId}":{
            "get":{
                "summary":"Get one serial number",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workOrders-WorkOrderSerialNumber-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Orders/Serials"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workOrders-{WorkOrderId}-child-WorkOrderSerialNumber-{WorkOrderProductSerialId}-get"
            },
            "parameters":[
                {
                    "name":"WorkOrderId",
                    "description":"Value that uniquely identifies the work order. It is a primary key that the application generates when it creates the work order.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkOrderProductSerialId",
                    "description":"Value that uniquely identifies the product serial in the work order. It is a primary key that the application generates when it creates the serial number.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workAreas":{
            "get":{
                "summary":"Get all work areas",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find work areas according to the work area Id as the primary key. Finder Variables:<ul><li>WorkAreaId; integer; Primary key that uniquely identifies the work area. Manufacturing generates this primary key when it creates the work area. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workAreas"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Areas"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workAreas-get"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/workAreas/{WorkAreaId}":{
            "get":{
                "summary":"Get one work area",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workAreas-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Areas"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workAreas-{WorkAreaId}-get"
            },
            "parameters":[
                {
                    "name":"WorkAreaId",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates a work area.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workAreas/{WorkAreaId}/child/WorkAreaDFF":{
            "get":{
                "summary":"Get all flexfields",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find descriptive flexfields that a work area references according to the work area Id as the primary key. Finder Variables:<ul><li>WorkAreaId; integer; Primary key that uniquely identifies the work area. Manufacturing generates this primary key when it creates the work area. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workAreas-WorkAreaDFF"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Work Areas/Flexfields for Work Areas"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workAreas-{WorkAreaId}-child-WorkAreaDFF-get"
            },
            "parameters":[
                {
                    "name":"WorkAreaId",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates a work area.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/workAreas/{WorkAreaId}/child/WorkAreaDFF/{WorkAreaId2}":{
            "get":{
                "summary":"Get one flexfield",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/workAreas-WorkAreaDFF-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Work Areas/Flexfields for Work Areas"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-workAreas-{WorkAreaId}-child-WorkAreaDFF-{WorkAreaId2}-get"
            },
            "parameters":[
                {
                    "name":"WorkAreaId",
                    "description":"Value that uniquely identifies the work area. It is a primary key that the application generates when it creates a work area.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"WorkAreaId2",
                    "description":"Value that uniquely identifies the work area. You can use a flexfield with this resource. A flexfield is a flexible data field that your organization can use to modify your implementation without having to write programming code.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inTransitReceiptSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find serial numbers according to the bind variables that you provide. bindItemId, bindOrganizationId, bindTransactionTypeId, and bindShipmentLineId are required. bindLotNumber and bindSerialNumber are optional. Finder Variables:<ul><li>bindLotNumber; string; Number that identifies an item or group of items.</li><li>bindSerialNumber; string; Serial numbers that track items that are in inventory.</li></ul></li><li>PrimaryKey: Find the serial number according to the serial number that you provide. Finder Variables:<ul><li>SerialNumber; string; Serial numbers that track items that are in inventory.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitReceiptSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "In-transit Receipt Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitReceiptSerials-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inTransitReceiptSerials/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inTransitReceiptSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "In-transit Receipt Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inTransitReceiptSerials-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Serial numbers that reference items that are in receiving and in transit.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/onhandQuantityDetails":{
            "get":{
                "summary":"Get all details",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find on-hand quantities. Finder Variables:<ul><li>InventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>LocatorId; integer; Value that uniquely identifies the locator.</li><li>LotNumber; string; Lot number of the inventory item.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li><li>SerialNumber; string; Serial number of the inventory item.</li><li>SubinventoryCode; string; Abbreviation that identifies the subinventory.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/onhandQuantityDetails"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "On-hand Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-onhandQuantityDetails-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/onhandQuantityDetails/{onhandQuantityDetailsUniqID}":{
            "get":{
                "summary":"Get one detail",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/onhandQuantityDetails-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "On-hand Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-onhandQuantityDetails-{onhandQuantityDetailsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"onhandQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId, SubinventoryCode, LocatorId, LotNumber and SerialNumber ---for the On-hand Quantity Details resource and used to uniquely identify an instance of On-hand Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the On-hand Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of On-hand Quantity Details.<br><br>For example: onhandQuantityDetails?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SubinventoryCode=&lt;value3&gt;;LocatorId=&lt;value4&gt;;LotNumber=&lt;value5&gt;;SerialNumber=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/onhandQuantityDetails/{onhandQuantityDetailsUniqID}/child/ConsignedQuantityDetails":{
            "get":{
                "summary":"Get all details",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find consigned quantities. Finder Variables:<ul><li>PartyName; string; Name of the owning party.</li><li>PartyNumber; string; Number of the owning party.</li><li>PartyType; string; Type of the owning party. Value must include only Person, Organization, or Group.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/onhandQuantityDetails-ConsignedQuantityDetails"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "On-hand Quantity Details/Consigned Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-onhandQuantityDetails-{onhandQuantityDetailsUniqID}-child-ConsignedQuantityDetails-get"
            },
            "parameters":[
                {
                    "name":"onhandQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId, SubinventoryCode, LocatorId, LotNumber and SerialNumber ---for the On-hand Quantity Details resource and used to uniquely identify an instance of On-hand Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the On-hand Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of On-hand Quantity Details.<br><br>For example: onhandQuantityDetails?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SubinventoryCode=&lt;value3&gt;;LocatorId=&lt;value4&gt;;LotNumber=&lt;value5&gt;;SerialNumber=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/onhandQuantityDetails/{onhandQuantityDetailsUniqID}/child/ConsignedQuantityDetails/{ConsignedQuantityDetailsUniqID}":{
            "get":{
                "summary":"Get one detail",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/onhandQuantityDetails-ConsignedQuantityDetails-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "On-hand Quantity Details/Consigned Quantity Details"
                ],
                "x-internal-id":"resources-11.12.1.0-onhandQuantityDetails-{onhandQuantityDetailsUniqID}-child-ConsignedQuantityDetails-{ConsignedQuantityDetailsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"onhandQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId, SubinventoryCode, LocatorId, LotNumber and SerialNumber ---for the On-hand Quantity Details resource and used to uniquely identify an instance of On-hand Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the On-hand Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of On-hand Quantity Details.<br><br>For example: onhandQuantityDetails?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SubinventoryCode=&lt;value3&gt;;LocatorId=&lt;value4&gt;;LotNumber=&lt;value5&gt;;SerialNumber=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"ConsignedQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- PartyName, PartyType and PartyNumber ---for the Consigned Quantity Details resource and used to uniquely identify an instance of Consigned Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the Consigned Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of Consigned Quantity Details.<br><br>For example: ConsignedQuantityDetails?q=PartyName=&lt;value1&gt;;PartyType=&lt;value2&gt;;PartyNumber=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/onhandQuantityDetails/{onhandQuantityDetailsUniqID}/child/InboundQuantityDetails":{
            "get":{
                "summary":"Get all details",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find inbound quantities. Finder Variables:<ul><li>DocumentNumber; string; Number of the document that references the inbound shipment.</li><li>LineNumber; number; Line number that references the inbound shipment.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/onhandQuantityDetails-InboundQuantityDetails"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "On-hand Quantity Details/Inbound Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-onhandQuantityDetails-{onhandQuantityDetailsUniqID}-child-InboundQuantityDetails-get"
            },
            "parameters":[
                {
                    "name":"onhandQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId, SubinventoryCode, LocatorId, LotNumber and SerialNumber ---for the On-hand Quantity Details resource and used to uniquely identify an instance of On-hand Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the On-hand Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of On-hand Quantity Details.<br><br>For example: onhandQuantityDetails?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SubinventoryCode=&lt;value3&gt;;LocatorId=&lt;value4&gt;;LotNumber=&lt;value5&gt;;SerialNumber=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/onhandQuantityDetails/{onhandQuantityDetailsUniqID}/child/InboundQuantityDetails/{InboundQuantityDetailsUniqID}":{
            "get":{
                "summary":"Get one detail",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/onhandQuantityDetails-InboundQuantityDetails-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "On-hand Quantity Details/Inbound Quantity Details"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-onhandQuantityDetails-{onhandQuantityDetailsUniqID}-child-InboundQuantityDetails-{InboundQuantityDetailsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"onhandQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId, SubinventoryCode, LocatorId, LotNumber and SerialNumber ---for the On-hand Quantity Details resource and used to uniquely identify an instance of On-hand Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the On-hand Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of On-hand Quantity Details.<br><br>For example: onhandQuantityDetails?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;SubinventoryCode=&lt;value3&gt;;LocatorId=&lt;value4&gt;;LotNumber=&lt;value5&gt;;SerialNumber=&lt;value6&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"InboundQuantityDetailsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- DocumentNumber and LineNumber ---for the Inbound Quantity Details resource and used to uniquely identify an instance of Inbound Quantity Details. The client should not generate the hash key value.  Instead, the client should query on the Inbound Quantity Details collection resource with a filter on the primary key values in order to navigate to a specific instance of Inbound Quantity Details.<br><br>For example: InboundQuantityDetails?q=DocumentNumber=&lt;value1&gt;;LineNumber=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/returnSerialsForLots":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find serial numbers that are available and that you can use to return the items that a lot references according to the bind variables that you provide. bindOrganizationId, bindTransactionTypeId, bindLotNumber, bindParentTransactionId, and bindItemId are required. bindSerialNumber is optional. Finder Variables:<ul><li>bindSerialNumber; string; Value that uniquely identifies a single item in inventory that logistics will not use for a similar item.</li></ul></li><li>PrimaryKey: Find serial number to use when returning the item according to the serial number. Finder Variables:<ul><li>SerialNumber; string; Value that uniquely identifies a single item in inventory that logistics will not use for a similar item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/returnSerialsForLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Return Serials for Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-returnSerialsForLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/returnSerialsForLots/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/returnSerialsForLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Return Serials for Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-returnSerialsForLots-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Value that uniquely identifies a single item in inventory that logistics will not use for a similar item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingParameters":{
            "get":{
                "summary":"Get all parameters",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganization: Find receiving parameters according to organization Id or code. Finder Variables:<ul><li>bindOrganizationCode; string; Abbreviation that identifies the organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the organization.</li></ul></li><li>PrimaryKey: Find receiving parameters according to organization Id. Finder Variables:<ul><li>OrganizationId; integer; Value that uniquely identifies the organization.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingParameters"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Parameters"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingParameters-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/receivingParameters/{OrganizationId}":{
            "get":{
                "summary":"Get one parameter",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingParameters-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Parameters"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingParameters-{OrganizationId}-get"
            },
            "parameters":[
                {
                    "name":"OrganizationId",
                    "description":"Value that uniquely identifies the receiving organization.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/linesToInspect":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLines: Find received lines that require inspection according to the bind variables that you provide. You must include the following: 1, bindOrganizationId or bindOrganizationCode; 2, bindDocumentType or bindSourceDocumentCode; 3, bindDocumentNumber. Finder Variables:<ul><li>bindASNLineNumber; integer; Line number for the advance shipment notice.</li><li>bindASNNumber; string; Number that identifies the advanced shipment notice for the shipment from the supplier.</li><li>bindBackToBack; string; Contains Y or N. Y: use back-to-back shipping. N: reference a transfer order. Note that the order line for the supply source for the reservation references this purchase order.</li><li>bindConsigned; string; Contains Y or N. Y: the item is consigned. N: the item is not consigned.</li><li>bindDocumentLineNumber; string; Line number for the document number.</li><li>bindDocumentNumber; string; Document number that identifies one of the following: the purchase order number for the purchase order, advance shipment notice, or advance shipment billing notice; the number for the return material authorization for the source document code of type RMA; the in-transit shipment number for the source document code of type INVENTORY; or the transfer order number for the source document code of type TRANSFER ORDER.</li><li>bindDocumentScheduleNumber; string; Schedule number for the document line number.</li><li>bindDocumentType; string; Document type according to the originating source, such as purchase order or return material authorization. The RCV_SOURCE_DOCUMENT_TYPE lookup defines the values that you can use with this attribute.</li><li>bindFromDate; string; Start date of the time interval to use when finding the lines to inspect.</li><li>bindItemId; integer; Value that uniquely identifies an item.</li><li>bindItemNumber; string; Purchasing number of the item to receive. An item is any part, material, product, or service that includes attributes that are unique when compared to other items.</li><li>bindOrganizationCode; string; Value that identifies the &lt;br&gt;ship-to organization code for the received line.</li><li>bindOrganizationId; integer; Value that uniquely identifies the ship-to organization for the received line.</li><li>bindPOHeaderId; integer; Value that uniquely identifies the purchase order header.</li><li>bindPOLineId; integer; Value that uniquely identifies the purchase order line.</li><li>bindPOLineLocationId; integer; Value that uniquely identifies the purchase order schedule.</li><li>bindParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li><li>bindReceiptAdviceHeaderId; integer; Value that uniquely identifies the receipt advice header.</li><li>bindReceiptAdviceLineId; integer; Value that uniquely identifies the receipt advice line.</li><li>bindReceiptNumber; string; Number that acknowledges that the warehouse received the shipment.</li><li>bindShipmentHeaderId; integer; Value that uniquely identifies the shipment header.</li><li>bindShipmentLineId; integer; Value that uniquely identifies the shipment line.</li><li>bindSourceDocumentCode; string; Document type of the shipment. You can use one of the following values for this attribute: PO, RMA, TRANSFER ORDER, or INVENTORY.</li><li>bindToDate; string; End date of the time interval to use when finding the lines to inspect.</li><li>bindTransferOrderHeaderId; integer; Value that uniquely identifies the transfer order header. Each transfer order can request to move an item from one location to another location.</li><li>bindTransferOrderLineId; integer; Value that uniquely identifies the transfer order line.</li></ul></li><li>PrimaryKey: Find lines to inspect according to the primary key. Finder Variables:<ul><li>ParentTransactionId; integer; Value that uniquely identifies the parent transaction.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToInspect"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Lines to Inspect"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToInspect-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/linesToInspect/{ParentTransactionId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/linesToInspect-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Lines to Inspect"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-linesToInspect-{ParentTransactionId}-get"
            },
            "parameters":[
                {
                    "name":"ParentTransactionId",
                    "description":"Value that uniquely identifies the parent transaction.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactionAccounts":{
            "get":{
                "summary":"Get all accounts",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find inventory transaction account according to the account identifier. Finder Variables:<ul><li>CodeCombinationId; integer; Value that uniquely identifies the general ledger account.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactionAccounts"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transaction Accounts"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactionAccounts-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactionAccounts/{CodeCombinationId}":{
            "get":{
                "summary":"Get one account",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactionAccounts-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transaction Accounts"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactionAccounts-{CodeCombinationId}-get"
            },
            "parameters":[
                {
                    "name":"CodeCombinationId",
                    "description":"Value that uniquely identifies the general ledger account.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/inventoryOrganizations":{
            "get":{
                "summary":"Get all organizations",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>manufacturingOrgs: Find the inventory organizations that are enabled for manufacturing. Finder Variables:<ul><li>Status; string; Active inventory organizations according to status.</li></ul></li><li>itemOrgs: Find the item organizations. Finder Variables:<ul><li>Status; string; Active item organizations according to status.</li></ul></li><li>inventoryOrgs: Find the inventory organizations. Finder Variables:<ul><li>Status; string; Active inventory organizations according to status.</li></ul></li><li>activeOrgs: Find the active organizations.</li><li>PrimaryKey: Find an inventory organization according to the unique organization identification. Finder Variables:<ul><li>OrganizationId; integer; Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an item. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOrganizations"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Organizations"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-inventoryOrganizations-get"
            }
        },
        "/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}":{
            "get":{
                "summary":"Get one organization",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOrganizations-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Organizations"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-inventoryOrganizations-{OrganizationId}-get"
            },
            "parameters":[
                {
                    "name":"OrganizationId",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters":{
            "get":{
                "summary":"Get all organization parameters",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find the inventory parameters for an organization according to the unique organization identification. Finder Variables:<ul><li>OrganizationId; integer; Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an item. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOrganizations-invOrgParameters"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Organizations/Inventory Organization Parameters"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-inventoryOrganizations-{OrganizationId}-child-invOrgParameters-get"
            },
            "parameters":[
                {
                    "name":"OrganizationId",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/invOrgParameters/{OrganizationId2}":{
            "get":{
                "summary":"Get one organization parameter",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOrganizations-invOrgParameters-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Organizations/Inventory Organization Parameters"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-inventoryOrganizations-{OrganizationId}-child-invOrgParameters-{OrganizationId2}-get"
            },
            "parameters":[
                {
                    "name":"OrganizationId",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"OrganizationId2",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters":{
            "get":{
                "summary":"Get all plant parameters",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find the plant parameters for an organization according to the unique organization identification. Finder Variables:<ul><li>OrganizationId; integer; Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an item. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOrganizations-plantParameters"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Organizations/Plant Parameters"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-inventoryOrganizations-{OrganizationId}-child-plantParameters-get"
            },
            "parameters":[
                {
                    "name":"OrganizationId",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/inventoryOrganizations/{OrganizationId}/child/plantParameters/{OrganizationId2}":{
            "get":{
                "summary":"Get one plant parameter",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOrganizations-plantParameters-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Organizations/Plant Parameters"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-inventoryOrganizations-{OrganizationId}-child-plantParameters-{OrganizationId2}-get"
            },
            "parameters":[
                {
                    "name":"OrganizationId",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                },
                {
                    "name":"OrganizationId2",
                    "description":"Value that uniquely identifies the organization. It is a primary key that the application generates when it creates an organization. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryAccountAliases":{
            "get":{
                "summary":"Get all aliases",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find inventory account aliases according to the organization identifier and the account alias identifier. Finder Variables:<ul><li>DispositionId; integer; Value that uniquely identifies the account alias.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryAccountAliases"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Account Aliases"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryAccountAliases-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryAccountAliases/{inventoryAccountAliasesUniqID}":{
            "get":{
                "summary":"Get one alias",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryAccountAliases-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Account Aliases"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryAccountAliases-{inventoryAccountAliasesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryAccountAliasesUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- DispositionId and OrganizationId ---for the Inventory Account Aliases resource and used to uniquely identify an instance of Inventory Account Aliases. The client should not generate the hash key value.  Instead, the client should query on the Inventory Account Aliases collection resource with a filter on the primary key values in order to navigate to a specific instance of Inventory Account Aliases.<br><br>For example: inventoryAccountAliases?q=DispositionId=&lt;value1&gt;;OrganizationId=&lt;value2&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/carriers":{
            "get":{
                "summary":"Get all carriers",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>CarrierFinder: Find carriers according to the bind variables that you provide. Finder Variables:<ul><li>ActiveFlag; string; Contains True or False. True: the carrier is active. False: the carrier is not active.</li><li>CarrierId; string; Number that identifies the carrier. This attribute is required.</li><li>CarrierName; string; Name of the carrier. This attribute is required.</li><li>ManifestingEnabledFlag; string; Contains True or False. True: use a manifest with this carrier. False: do not use a manifest with this carrier.</li></ul></li><li>PrimaryKey: Find carrier according to the carrier ID as the primary key. Finder Variables:<ul><li>CarrierId; integer; Value that uniquely identifies the carrier. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/carriers"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Carriers"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-carriers-get"
            }
        },
        "/scmCommonApi/resources/11.12.1.0/carriers/{CarrierId}":{
            "get":{
                "summary":"Get one carrier",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/carriers-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Carriers"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-carriers-{CarrierId}-get"
            },
            "parameters":[
                {
                    "name":"CarrierId",
                    "description":"Number that identifies the carrier. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/rmaRestrictedLots":{
            "get":{
                "summary":"Get all lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findLots: Find lot numbers that are available and that you can use to receive a return material authorization when you enable the receiving parameter Enforce Lot Number. Use the bind variables that you provide filter the results. bindOrganizationId, bindReceiptAdviceLineId, and bindItemId are required. bindLotNumber is optional. Finder Variables:<ul><li>bindLotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li><li>PrimaryKey: Find the lot number to use when receiving a return material authorization according to the lot number. Finder Variables:<ul><li>LotNumber; string; Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaRestrictedLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "RMA Restricted Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaRestrictedLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/rmaRestrictedLots/{LotNumber}":{
            "get":{
                "summary":"Get one lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/rmaRestrictedLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "RMA Restricted Lots"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-rmaRestrictedLots-{LotNumber}-get"
            },
            "parameters":[
                {
                    "name":"LotNumber",
                    "description":"Value that uniquely identifies the lot. The lot includes items that you produce together as a group and that share similar production costs and specifications.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryItemLots":{
            "get":{
                "summary":"Get all lots",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrgItemAndLot: Find lots for an item according to organization, item identifier, and item number, or lot number. Finder Variables:<ul><li>bindInventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>bindItemNumber; string; Name of the inventory item.</li><li>bindLotNumber; string; Lot number.</li><li>bindOrganizationCode; string; Abbreviation that identifies the organization.</li></ul></li><li>PrimaryKey: Find lots for an item according to organization identifier, item identifier, and lot number. Finder Variables:<ul><li>InventoryItemId; integer; Value that uniquely identifies the inventory item.</li><li>LotNumber; string; Lot number.</li><li>OrganizationId; integer; Value that uniquely identifies the organization.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Lots for Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryItemLots-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryItemLots/{inventoryItemLotsUniqID}":{
            "get":{
                "summary":"Get one lot",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Lots for Items"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryItemLots-{inventoryItemLotsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryItemLotsUniqID",
                    "description":"This is the hash key of the attributes which make up the composite key--- OrganizationId, InventoryItemId and LotNumber ---for the Inventory Lots for Items resource and used to uniquely identify an instance of Inventory Lots for Items. The client should not generate the hash key value.  Instead, the client should query on the Inventory Lots for Items collection resource with a filter on the primary key values in order to navigate to a specific instance of Inventory Lots for Items.<br><br>For example: inventoryItemLots?q=OrganizationId=&lt;value1&gt;;InventoryItemId=&lt;value2&gt;;LotNumber=&lt;value3&gt;",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryOwningPartySites":{
            "get":{
                "summary":"Get all sites",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByPartyOrSite: Find owning party details according to party name or site name. Finder Variables:<ul><li>bindOwningParty; string; Name of the owning party.</li><li>bindOwningPartySite; string; Name of the owning party site.</li></ul></li><li>PrimaryKey: Find owning party details according to the party site identifier. Finder Variables:<ul><li>OwningPartySiteId; integer; Value that uniquely identifies the owning party site.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOwningPartySites"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Owning Party Sites"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryOwningPartySites-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryOwningPartySites/{OwningPartySiteId}":{
            "get":{
                "summary":"Get one site",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryOwningPartySites-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Owning Party Sites"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryOwningPartySites-{OwningPartySiteId}-get"
            },
            "parameters":[
                {
                    "name":"OwningPartySiteId",
                    "description":"Value that uniquely identifies the owning party site.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inspectionStatuses":{
            "get":{
                "summary":"Get all statuses",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find inspection statuses according to transaction type. Finder Variables:<ul><li>TransactionType; string; Type of inspection transaction. Values include ACCEPT or REJECT.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inspectionStatuses"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inspection Statuses"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inspectionStatuses-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inspectionStatuses/{TransactionType}":{
            "get":{
                "summary":"Get one status",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inspectionStatuses-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inspection Statuses"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inspectionStatuses-{TransactionType}-get"
            },
            "parameters":[
                {
                    "name":"TransactionType",
                    "description":"Type of inspection transaction. Values include ACCEPT or REJECT.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactionReasons":{
            "get":{
                "summary":"Get all reasons",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find inventory transaction reason according to a primary key. Finder Variables:<ul><li>ReasonId; integer; Value that uniquely identifies the inventory transaction reason.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactionReasons"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Transaction Reasons"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactionReasons-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryTransactionReasons/{ReasonId}":{
            "get":{
                "summary":"Get one reason",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryTransactionReasons-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Transaction Reasons"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryTransactionReasons-{ReasonId}-get"
            },
            "parameters":[
                {
                    "name":"ReasonId",
                    "description":"Value that uniquely identifies the transaction reason.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryBalanceTransactions-get"
            },
            "post":{
                "summary":"Create transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryBalanceTransactions-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-get"
            },
            "post":{
                "summary":"Create transaction lines",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/dffForTransactionLines":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-dffForTransactionLines"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Flexfields for Transaction Lines"
                ],
                "x-internal-id":"inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-dffForTransactionLines-get"
            },
            "post":{
                "summary":"Create flexfields",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-dffForTransactionLines-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-dffForTransactionLines-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Flexfields for Transaction Lines"
                ],
                "x-internal-id":"inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-dffForTransactionLines-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/dffForTransactionLines/{dffForTransactionLinesUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-dffForTransactionLines-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Flexfields for Transaction Lines"
                ],
                "x-internal-id":"{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-dffForTransactionLines-{dffForTransactionLinesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"dffForTransactionLinesUniqID",
                    "description":"Identifier to Flexfields for Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items"
                ],
                "x-internal-id":"11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items"
                ],
                "x-internal-id":"11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items"
                ],
                "x-internal-id":"inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/dffForItemLots":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Flexfields for Lots"
                ],
                "x-internal-id":"{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-dffForItemLots-get"
            },
            "post":{
                "summary":"Create flexfields",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Flexfields for Lots"
                ],
                "x-internal-id":"{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-dffForItemLots-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/dffForItemLots/{dffForItemLotsUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-dffForItemLots-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Flexfields for Lots"
                ],
                "x-internal-id":"child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-dffForItemLots-{dffForItemLotsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"dffForItemLotsUniqID",
                    "description":"Identifier to Flexfields for Lots",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/itemSerialsForLot":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items"
                ],
                "x-internal-id":"{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-itemSerialsForLot-get"
            },
            "post":{
                "summary":"Create details",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items"
                ],
                "x-internal-id":"{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-itemSerialsForLot-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/itemSerialsForLot/{itemSerialsForLotUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items"
                ],
                "x-internal-id":"child-transactionLines-{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-itemSerialsForLot-{itemSerialsForLotUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemSerialsForLotUniqID",
                    "description":"Identifier to Serial and Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/itemSerialsForLot/{itemSerialsForLotUniqID}/child/dffForItemSerialsForLot":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items/Flexfields for Serials and Lots"
                ],
                "x-internal-id":"{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-itemSerialsForLot-{itemSerialsForLotUniqID}-child-dffForItemSerialsForLot-get"
            },
            "post":{
                "summary":"Create flexfields",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items/Flexfields for Serials and Lots"
                ],
                "x-internal-id":"{transactionLinesUniqID}-child-itemLots-{itemLotsUniqID}-child-itemSerialsForLot-{itemSerialsForLotUniqID}-child-dffForItemSerialsForLot-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemSerialsForLotUniqID",
                    "description":"Identifier to Serial and Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemLots/{itemLotsUniqID}/child/itemSerialsForLot/{itemSerialsForLotUniqID}/child/dffForItemSerialsForLot/{dffForItemSerialsForLotUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemLots-itemSerialsForLot-dffForItemSerialsForLot-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Lot Details for Items/Serial and Lot Details for Items/Flexfields for Serials and Lots"
                ],
                "x-internal-id":"child-itemLots-{itemLotsUniqID}-child-itemSerialsForLot-{itemSerialsForLotUniqID}-child-dffForItemSerialsForLot-{dffForItemSerialsForLotUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemLotsUniqID",
                    "description":"Identifier to Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemSerialsForLotUniqID",
                    "description":"Identifier to Serial and Lot Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"dffForItemSerialsForLotUniqID",
                    "description":"Identifier to Flexfields for Serials and Lots",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemSerials":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Serial Details for Items"
                ],
                "x-internal-id":"11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemSerials-get"
            },
            "post":{
                "summary":"Create serial details",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Serial Details for Items"
                ],
                "x-internal-id":"11.12.1.0-inventoryBalanceTransactions-{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemSerials-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemSerials/{itemSerialsUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Serial Details for Items"
                ],
                "x-internal-id":"{inventoryBalanceTransactionsUniqID}-child-transactionLines-{transactionLinesUniqID}-child-itemSerials-{itemSerialsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemSerialsUniqID",
                    "description":"Identifier to Serial Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemSerials/{itemSerialsUniqID}/child/dffForItemSerials":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Serial Details for Items/Flexfields for Serials"
                ],
                "x-internal-id":"child-transactionLines-{transactionLinesUniqID}-child-itemSerials-{itemSerialsUniqID}-child-dffForItemSerials-get"
            },
            "post":{
                "summary":"Create flexfields",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Serial Details for Items/Flexfields for Serials"
                ],
                "x-internal-id":"child-transactionLines-{transactionLinesUniqID}-child-itemSerials-{itemSerialsUniqID}-child-dffForItemSerials-post"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemSerialsUniqID",
                    "description":"Identifier to Serial Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/inventoryBalanceTransactions/{inventoryBalanceTransactionsUniqID}/child/transactionLines/{transactionLinesUniqID}/child/itemSerials/{itemSerialsUniqID}/child/dffForItemSerials/{dffForItemSerialsUniqID}":{
            "get":{
                "summary":"Get action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/inventoryBalanceTransactions-transactionLines-itemSerials-dffForItemSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Inventory Balance Transactions/Transaction Lines/Serial Details for Items/Flexfields for Serials"
                ],
                "x-internal-id":"child-transactionLines-{transactionLinesUniqID}-child-itemSerials-{itemSerialsUniqID}-child-dffForItemSerials-{dffForItemSerialsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"inventoryBalanceTransactionsUniqID",
                    "description":"Identifier to Inventory Balance Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"transactionLinesUniqID",
                    "description":"Identifier to Transaction Lines",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"itemSerialsUniqID",
                    "description":"Identifier to Serial Details for Items",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"dffForItemSerialsUniqID",
                    "description":"Identifier to Flexfields for Serials",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountSequenceDetails":{
            "get":{
                "summary":"Get all details",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndCountName: Find details about the cycle count sequence according to the cycle count name and organization code. Finder Variables:<ul><li>bindCycleCountName; string; Cycle count name.</li><li>bindOrganizationCode; string; Abbreviation that identifies the &lt;br&gt;organization.</li></ul></li><li>PrimaryKey: Find details about the count sequence according to the count sequence identifier. Finder Variables:<ul><li>CycleCountEntryId; integer; Value that uniquely identifies the &lt;br&gt;cycle count sequence.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountSequenceDetails"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Details for Cycle Count Sequences"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountSequenceDetails-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/cycleCountSequenceDetails/{CycleCountEntryId}":{
            "get":{
                "summary":"Get one detail",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/cycleCountSequenceDetails-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Details for Cycle Count Sequences"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-cycleCountSequenceDetails-{CycleCountEntryId}-get"
            },
            "parameters":[
                {
                    "name":"CycleCountEntryId",
                    "description":"Value that uniquely identifies the cycle count sequence.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/asnLinesForReceiving":{
            "get":{
                "summary":"Get all lines",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndASN: Find lines of the advanced shipment notice according to organization or the advanced shipment notice. Finder Variables:<ul><li>bindASN; string; Number that identifies the advanced shipment notice for the shipment of the item from the supplier.</li><li>bindASNLine; integer; Number that identifies the line of the advanced shipment notice.</li><li>bindItemDescription; string; Description of the item.</li><li>bindOrganizationCode; string; Abbreviation that identifies the receiving organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the receiving organization.</li></ul></li><li>PrimaryKey: Find lines of the advanced shipment notice according to the line Id of the shipment. Finder Variables:<ul><li>ShipmentLineId; integer; Value that uniquely identifies the line of the advanced shipment notice.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/asnLinesForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "ASN Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-asnLinesForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/asnLinesForReceiving/{ShipmentLineId}":{
            "get":{
                "summary":"Get one line",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/asnLinesForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "ASN Lines for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-asnLinesForReceiving-{ShipmentLineId}-get"
            },
            "parameters":[
                {
                    "name":"ShipmentLineId",
                    "description":"Value that uniquely identifies the advanced shipment notice.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrderReceiptSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find received lines according to the bind variables that you provide. bindOrganizationId, bindTransactionTypeId, and bindItemId are required. Finder Variables:<ul><li>bindSerialNumber; string; Serial numbers of the items to track in inventory.</li></ul></li><li>PrimaryKey: Find serial number that is available to use when receiving according to serial number. Finder Variables:<ul><li>SerialNumber; string; Serial numbers of the items to track in inventory.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrderReceiptSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Purchase Order Receipt Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrderReceiptSerials-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/purchaseOrderReceiptSerials/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/purchaseOrderReceiptSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Purchase Order Receipt Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-purchaseOrderReceiptSerials-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Serial numbers of the items to track in inventory.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/returnSerials":{
            "get":{
                "summary":"Get all serials",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findSerials: Find serial numbers that are available and that you can use to return items according to the bind variables that you provide. bindOrganizationId, bindTransactionTypeId, bindItemId, and bindParentTransactionId are required. bindSerialNumber is optional. Finder Variables:<ul><li>bindSerialNumber; string; Value that uniquely identifies a single item in inventory that logistics will not use for a similar item.</li></ul></li><li>PrimaryKey: Find serial number to use when returning the item according to the serial number. Finder Variables:<ul><li>SerialNumber; string; Value that uniquely identifies a single item in inventory that the warehouse will not use for a similar item.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/returnSerials"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Return Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-returnSerials-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/returnSerials/{SerialNumber}":{
            "get":{
                "summary":"Get one serial",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/returnSerials-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Return Serials"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-returnSerials-{SerialNumber}-get"
            },
            "parameters":[
                {
                    "name":"SerialNumber",
                    "description":"Value that uniquely identifies a single item in inventory that logistics will not use for a similar item.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/unitsOfMeasure":{
            "get":{
                "summary":"Get all units of measure",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>UomFinder: Find units of measure. Search according to name, class, description, or availability. Finder Variables:<ul><li>UOM; string; Name of the unit of measure. This attribute is required.</li><li>UOMClass; string; Class that categorizes the unit of measure. This attribute is required.</li><li>UOMCode; string; Abbreviation that identifies the unit of measure. This attribute is required.</li></ul></li><li>PrimaryKey: Find the unit of measure according to the UOM Code as the primary key. Finder Variables:<ul><li>UOMCode; string; Value that uniquely identifies the unit of measure. This attribute is required.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/unitsOfMeasure"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Units of Measure"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-unitsOfMeasure-get"
            }
        },
        "/scmCommonApi/resources/11.12.1.0/unitsOfMeasure/{UOMCode}":{
            "get":{
                "summary":"Get one unit of measure",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/unitsOfMeasure-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Units of Measure"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-unitsOfMeasure-{UOMCode}-get"
            },
            "parameters":[
                {
                    "name":"UOMCode",
                    "description":"Abbreviation that identifies the unit of measure. This attribute is required.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/generateSerialNumbers":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateSerialNumbers"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Generate Serial Numbers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-generateSerialNumbers-get"
            },
            "post":{
                "summary":"Generate serial numbers",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateSerialNumbers-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateSerialNumbers-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Generate Serial Numbers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-generateSerialNumbers-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/generateSerialNumbers/{generateSerialNumbersUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/generateSerialNumbers-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Generate Serial Numbers"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-generateSerialNumbers-{generateSerialNumbersUniqID}-get"
            },
            "parameters":[
                {
                    "name":"generateSerialNumbersUniqID",
                    "description":"Identifier to Generate Serial Numbers",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/scmCommonApi/resources/11.12.1.0/unitOfMeasureConversions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/unitOfMeasureConversions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Unit of Measure Conversions"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-unitOfMeasureConversions-get"
            },
            "post":{
                "summary":"Create conversions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/unitOfMeasureConversions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/unitOfMeasureConversions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Unit of Measure Conversions"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-unitOfMeasureConversions-post"
            }
        },
        "/scmCommonApi/resources/11.12.1.0/unitOfMeasureConversions/{unitOfMeasureConversionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/unitOfMeasureConversions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Unit of Measure Conversions"
                ],
                "x-internal-id":"scmCommonApi-resources-11.12.1.0-unitOfMeasureConversions-{unitOfMeasureConversionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"unitOfMeasureConversionsUniqID",
                    "description":"Identifier to Unit of Measure Conversions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/receivingCountriesOfOrigin":{
            "get":{
                "summary":"Get all countries",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find country according to territory code. Finder Variables:<ul><li>TerritoryCode; string; Abbreviation that identifies the &lt;br&gt;country of origin of the item to receive. For example, US.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingCountriesOfOrigin"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Receiving Countries of Origin"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingCountriesOfOrigin-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/receivingCountriesOfOrigin/{TerritoryCode}":{
            "get":{
                "summary":"Get one country",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/receivingCountriesOfOrigin-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Receiving Countries of Origin"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-receivingCountriesOfOrigin-{TerritoryCode}-get"
            },
            "parameters":[
                {
                    "name":"TerritoryCode",
                    "description":"Abbreviation that identifies the country of origin of the item to receive. For example, US.",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/transferOrdersForReceiving":{
            "get":{
                "summary":"Get all orders",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>findByOrganizationAndTO: Find transfer orders that are available for receiving according to organization or transfer order. Finder Variables:<ul><li>bindOrganizationCode; string; Abbreviation that identifies the organization.</li><li>bindOrganizationId; integer; Value that uniquely identifies the organization.</li><li>bindTransferOrder; string; Number that identifies the request to transfer the item. A transfer can occur within an inventory organization, between two inventory organizations, or between an inventory organization and an expense destination.</li></ul></li><li>PrimaryKey: Find transfer orders that are available for receiving according to the header Id of the transfer order. Finder Variables:<ul><li>TransferOrderHeaderId; integer; Value that uniquely identifies the transfer order header.</li></ul></li></ul>",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/transferOrdersForReceiving"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Transfer Orders for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-transferOrdersForReceiving-get"
            }
        },
        "/logisticsApi/resources/11.12.1.0/transferOrdersForReceiving/{TransferOrderHeaderId}":{
            "get":{
                "summary":"Get one order",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/transferOrdersForReceiving-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Transfer Orders for Receiving"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-transferOrdersForReceiving-{TransferOrderHeaderId}-get"
            },
            "parameters":[
                {
                    "name":"TransferOrderHeaderId",
                    "description":"Value that uniquely identifies the transfer order header.",
                    "required":true,
                    "in":"path",
                    "type":"integer"
                }
            ]
        },
        "/logisticsApi/resources/11.12.1.0/validatePutAwayQuantities":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePutAwayQuantities"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Validate Put Away Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validatePutAwayQuantities-get"
            },
            "post":{
                "summary":"Create validation",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePutAwayQuantities-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePutAwayQuantities-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Put Away Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validatePutAwayQuantities-post"
            }
        },
        "/logisticsApi/resources/11.12.1.0/validatePutAwayQuantities/{validatePutAwayQuantitiesUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/validatePutAwayQuantities-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Validate Put Away Quantities"
                ],
                "x-internal-id":"logisticsApi-resources-11.12.1.0-validatePutAwayQuantities-{validatePutAwayQuantitiesUniqID}-get"
            },
            "parameters":[
                {
                    "name":"validatePutAwayQuantitiesUniqID",
                    "description":"Identifier to Validate Put Away Quantities",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Operation Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-operationTransactions-get"
            },
            "post":{
                "summary":"Create operation transactions",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-operationTransactions-post"
            }
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-operationTransactions-{operationTransactionsUniqID}-get"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}/child/OperationTransactionDetail":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-get"
            },
            "post":{
                "summary":"Create details",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details"
                ],
                "x-internal-id":"manufacturingApi-resources-11.12.1.0-operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-post"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}/child/OperationTransactionDetail/{OperationTransactionDetailUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details"
                ],
                "x-internal-id":"resources-11.12.1.0-operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-get"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"OperationTransactionDetailUniqID",
                    "description":"Identifier to Operation Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}/child/OperationTransactionDetail/{OperationTransactionDetailUniqID}/child/TransactionLot":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionLot"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details/Transaction Lots"
                ],
                "x-internal-id":"operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-child-TransactionLot-get"
            },
            "post":{
                "summary":"Create lots",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionLot-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionLot-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details/Transaction Lots"
                ],
                "x-internal-id":"operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-child-TransactionLot-post"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"OperationTransactionDetailUniqID",
                    "description":"Identifier to Operation Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}/child/OperationTransactionDetail/{OperationTransactionDetailUniqID}/child/TransactionLot/{TransactionLotUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionLot-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details/Transaction Lots"
                ],
                "x-internal-id":"{operationTransactionsUniqID}-child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-child-TransactionLot-{TransactionLotUniqID}-get"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"OperationTransactionDetailUniqID",
                    "description":"Identifier to Operation Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"TransactionLotUniqID",
                    "description":"Identifier to Transaction Lots",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}/child/OperationTransactionDetail/{OperationTransactionDetailUniqID}/child/TransactionSerial":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"limit",
                        "description":"This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"offset",
                        "description":"Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"totalResults",
                        "description":"The resource collection representation will include the \"estimated row count\" when \"?totalResults=true\", otherwise the count is not included.  The default value is \"false\".",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"q",
                        "description":"This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"orderBy",
                        "description":"This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and \"asc\" or \"desc\".  Specify \"asc\" for ascending and \"desc\" for descending. The default value is \"asc\".  For example, ?orderBy=field1:asc,field2:desc",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"finder",
                        "description":"Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionSerial"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourcecollection+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details/Transaction Serials"
                ],
                "x-internal-id":"operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-child-TransactionSerial-get"
            },
            "post":{
                "summary":"Create transaction serials",
                "parameters":[
                    {
                        "name":"request",
                        "description":"The following table describes the body parameters in the request for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionSerial-item"
                        },
                        "in":"body"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionSerial-item"
                        }
                    }
                },
                "consumes":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details/Transaction Serials"
                ],
                "x-internal-id":"operationTransactions-{operationTransactionsUniqID}-child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-child-TransactionSerial-post"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"OperationTransactionDetailUniqID",
                    "description":"Identifier to Operation Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        },
        "/manufacturingApi/resources/11.12.1.0/operationTransactions/{operationTransactionsUniqID}/child/OperationTransactionDetail/{OperationTransactionDetailUniqID}/child/TransactionSerial/{TransactionSerialUniqID}":{
            "get":{
                "summary":"GET action not supported",
                "parameters":[
                    {
                        "name":"expand",
                        "description":"When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is \"all\" or \"\". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format \"Child.NestedChild\" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?expand=Employees.Managers\" is the same as \"?expand=Employees,Employees.Managers\" (which will expand Employees and Managers).",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"fields",
                        "description":"This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, \"?fields=Employees.Managers:Empname\" is the same as \"?fields=;Employees:;Employees.Managers:Empname\" (which will only return the \"Empname\" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2",
                        "in":"query",
                        "type":"string"
                    },
                    {
                        "name":"onlyData",
                        "description":"The resource item payload will be filtered in order to contain only data (no links section, for example).",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"dependency",
                        "description":"This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "default":{
                        "description":"The following table describes the default response for this task.",
                        "schema":{
                            "$ref":"#/definitions/operationTransactions-OperationTransactionDetail-TransactionSerial-item"
                        }
                    }
                },
                "produces":[
                    "application/vnd.oracle.adf.resourceitem+json"
                ],
                "tags":[
                    "Operation Transactions/Operation Transaction Details/Transaction Serials"
                ],
                "x-internal-id":"child-OperationTransactionDetail-{OperationTransactionDetailUniqID}-child-TransactionSerial-{TransactionSerialUniqID}-get"
            },
            "parameters":[
                {
                    "name":"operationTransactionsUniqID",
                    "description":"Identifier to Operation Transactions",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"OperationTransactionDetailUniqID",
                    "description":"Identifier to Operation Transaction Details",
                    "required":true,
                    "in":"path",
                    "type":"string"
                },
                {
                    "name":"TransactionSerialUniqID",
                    "description":"Identifier to Transaction Serials",
                    "required":true,
                    "in":"path",
                    "type":"string"
                }
            ]
        }
    },
    "swagger":"2.0",
    "schemes":[
        "https"
    ]
}